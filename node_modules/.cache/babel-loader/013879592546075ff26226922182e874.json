{"remainingRequest":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/MySwingVideoList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/MySwingVideoList.vue","mtime":1734661767056},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Header","RjZsWi","XFooter","SwingVideoDownloadModal","SwingVideoDeleteModal","YouTubeModal","taskStore","name","components","props","data","currentViedo","currentPage","isModalVisible","isDeleteModalVisible","isYouTubeModalVisible","videoToDelete","itemsPerPage","swingVideos","arrowLeftImage","arrowRightImage","screenWidth","window","innerWidth","computed","visiblePages","totalPages","maxVisiblePages","startPage","Math","max","floor","endPage","Array","from","length","_","i","ceil","paginatedData","start","end","slice","rows","result","itemsPerRow","push","methods","generateThumbnail","videoUrl","video","document","createElement","src","crossOrigin","style","display","body","appendChild","Promise","resolve","reject","addEventListener","currentTime","once","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","thumbnailUrl","toDataURL","error","console","removeChild","downloadVideo","response","fetch","ok","Error","blob","url","URL","createObjectURL","tempLink","href","download","click","revokeObjectURL","getSwingDt","loginInfo","JSON","parse","localStorage","getItem","getSelectTasks","id","log","all","map","thumbnail","sort","a","b","Date","createdAt","err","nextPage","prevPage","goToPage","page","openSwingVideosDownloadModal","selectViedo","downloadMovie","closeModal","openDeleteModal","item","closeDeleteModal","deleteSwingVideo","parseInt","user","deleteTask","undefined","alert","openYouTubeModal","closeYouTubeModal","handleResize","mounted","beforeDestroy","removeEventListener"],"sources":["src/components/MySwingVideoList.vue"],"sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <!-- 24.11.14 수정 - 전체적인 틀 수정 -->\n    <div class=\"myswingvideos-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">나의 스윙영상</div>\n      <!-- <div class=\"frame-7667-8\"> -->\n      <!-- <div class=\"frame-7666\"> -->\n      <div class=\"swingvideo\">\n        <!-- 각 Frame7657 데이터를 직접 렌더링, 8개만 표시 -->\n        <div class=\"row\" v-for=\"(rowItems, rowIndex) in rows\" :key=\"rowIndex\">\n          <div class=\"column\" v-for=\"(item, index) in rowItems\" :key=\"index\">\n            <!-- <div class=\"frame-76-11\"> -->\n            <div class=\"group-762-7\" :data=\"item\">\n              <img class=\"group-762-7\" :src=\"item.thumbnail\" alt=\"Thumbnail\" />\n              <img class=\"vector-img\" src=\"./../../img/Polygon 1.png\" alt=\"Vector\"\n                @click=\"openYouTubeModal(item.videoUrl)\" />\n              <img class=\"corner-vector\" src=\"./../../img/Vector.png\" alt=\"Corner Vector\"\n                @click=\"openDeleteModal(item)\" />\n            </div>\n            <div class=\"group-761\">\n              <!-- <div class=\"flex-col-40\"> -->\n              <div class=\"frame-7656\">\n                <!-- 데이터 바인딩 -->\n                <div class=\"text-259 valign-text-middle pretendard-bold-log-cabin-20px\">{{ item.title }}\n                </div>\n                <div class=\"x1960m-1 valign-text-middle pretendard-regular-normal-log-cabin-18px\">{{\n                  item.description }}</div>\n              </div>\n              <!-- 24.11.14 수정 - date-btn-align 추가 -->\n              <div class=\"date-btn-align\">\n                <!-- 24.12.17 수정 - date-align 추가 -->\n                <div class=\"date-align\">\n                  <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\">{{\n                    item.createdAt.split(\"T\")[0] }}</div>\n                  <!-- 24.11.21 수정 - 추가 -->\n                  <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\"> 조회수 : {{\n                    item.viewCount }}</div>\n                </div>\n                <img class=\"frame-7655-2\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/frame-7655-6.svg\"\n                  alt=\"Frame 7655\" @click=\"openSwingVideosDownloadModal(item.videoUrl)\" />\n              </div>\n              <!-- </div> -->\n\n            </div>\n            <!-- </div> -->\n          </div>\n        </div>\n\n        <!-- 페이징 버튼과 페이지 번호 -->\n        <div class=\"pagination-controls\">\n          <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n            :class=\"{ disabled: currentPage === 1 }\" />\n          <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n            <!-- 24.12.17 수정 - totalPages - visiblePages 변경 -->\n            <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n              @click=\"goToPage(page)\">\n              {{ page }}\n            </div>\n          </div>\n          <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n            :class=\"{ disabled: currentPage === totalPages }\" />\n        </div>\n      </div>\n      <x-footer />\n      <SwingVideoDownloadModal v-if=\"isModalVisible\" @close=\"closeModal\" @confirm=\"downloadMovie\" />\n      <SwingVideoDeleteModal v-if=\"isDeleteModalVisible\" @close=\"closeDeleteModal\" @confirm=\"deleteSwingVideo\" />\n      <YouTubeModal v-if=\"isYouTubeModalVisible\" :viedoLink=currentViedo @close=\"closeYouTubeModal\" />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\n// import View from \"./View\";\n// import Frame7657 from \"./Frame7657\";\nimport XFooter from \"./XFooter\";\nimport SwingVideoDownloadModal from \"./SwingVideoDownloadModal\";\nimport SwingVideoDeleteModal from \"./SwingVideoDeleteModal\";\nimport YouTubeModal from \"./YouTubeModal\";\nimport { taskStore } from '@/store/taskStore';\n\nexport default {\n  name: \"MySwingVideoList\",\n  components: {\n    Header,\n    RjZsWi,\n    YouTubeModal,\n    SwingVideoDeleteModal,\n    SwingVideoDownloadModal,\n    XFooter,\n  },\n  props: [\n    \"rJZsWIProps\",\n  ],\n  data() {\n    return {\n      currentViedo: \"\",\n      currentPage: 1,\n      isModalVisible: false,\n      isDeleteModalVisible: false,\n      isYouTubeModalVisible: false,\n      videoToDelete: null, // 삭제할 비디오 정보 저장\n      itemsPerPage: 8, // 한 페이지당 보여줄 데이터 수\n      swingVideos: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      screenWidth: window.innerWidth,\n    };\n  },\n  computed: {\n    // 24.12.17 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n\n    totalPages() {\n      return Math.ceil(this.swingVideos.length / this.itemsPerPage);\n    },\n    paginatedData() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.swingVideos.slice(start, end);\n    },\n    rows() {\n      const result = [];\n      const itemsPerRow = this.screenWidth <= 720 ? 2 : 4; // 화면 크기에 따라 2개 또는 4개씩 나누기\n      for (let i = 0; i < this.paginatedData.length; i += itemsPerRow) {\n        result.push(this.paginatedData.slice(i, i + itemsPerRow));\n      }\n      return result;\n    },\n  },\n  methods: {\n    async generateThumbnail(videoUrl) {\n      const video = document.createElement(\"video\");\n      video.src = videoUrl;\n      video.crossOrigin = \"anonymous\"; // CORS 이슈 해결\n      video.style.display = \"none\";\n      document.body.appendChild(video);\n\n      try {\n        // 비디오 로드 완료 기다리기\n        await new Promise((resolve, reject) => {\n          video.addEventListener(\"loadeddata\", resolve);\n          video.addEventListener(\"error\", reject);\n        });\n\n        // 2초로 이동\n        video.currentTime = 2;\n\n        await new Promise((resolve, reject) => {\n          video.addEventListener(\"seeked\", resolve, { once: true });\n          video.addEventListener(\"error\", reject);\n        });\n\n        // 캔버스에 비디오 프레임 그리기\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // 썸네일 이미지 URL 생성\n        const thumbnailUrl = canvas.toDataURL(\"image/png\");\n        return thumbnailUrl;\n      } catch (error) {\n        console.error(\"썸네일 생성 중 오류:\", error);\n        return null; // 오류 발생 시 null 반환\n      } finally {\n        // 비디오 엘리먼트 정리\n        document.body.removeChild(video);\n      }\n    },\n    async downloadVideo(videoUrl) {\n      // 다운로드할 비디오 URL\n      // const videoUrl = \"https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/user1.mp4\";\n      try {\n        // Fetch API를 사용해 비디오 파일을 가져오기\n        const response = await fetch(videoUrl);\n\n        // 성공적으로 응답을 받은 경우 Blob 생성\n        if (!response.ok) throw new Error(\"Failed to download video\");\n\n        const blob = await response.blob();\n\n        // Blob을 가리키는 URL 생성\n        const url = window.URL.createObjectURL(blob);\n\n        // 가상의 다운로드 트리거\n        const tempLink = document.createElement(\"a\");\n        tempLink.href = url;\n        tempLink.download = \"user1.mp4\"; // 파일명 설정\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // 메모리 정리\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(tempLink);\n      } catch (error) {\n        console.error(\"Download error:\", error);\n      }\n    },\n\n    async getSwingDt() {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      try {\n        const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n        console.log(\"서버 응답 데이터: \", response);\n\n        if (response) {\n          // 비디오 데이터를 썸네일 추가와 함께 처리\n          this.swingVideos = await Promise.all(\n            response.map(async (video) => {\n              // 썸네일 생성\n              video.thumbnail = await this.generateThumbnail(video.videoUrl);\n              return video;\n            })\n          );\n\n          // 최신순 정렬 (createdAt 기준 내림차순)\n          this.swingVideos.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          console.log(\"최신순 정렬된 데이터: \", this.swingVideos);\n        } else {\n          console.log(\"응답 데이터가 없습니다.\");\n        }\n      } catch (err) {\n        console.error(\"getSwingDt 에러 발생: \", err);\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n    openSwingVideosDownloadModal(selectViedo) {\n      this.currentViedo = selectViedo\n      this.isModalVisible = true;\n    },\n    downloadMovie() {\n      this.downloadVideo(this.currentViedo)\n      this.isModalVisible = false;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    openDeleteModal(item) {\n      this.videoToDelete = item;\n      this.isDeleteModalVisible = true;\n    },\n    closeDeleteModal() {\n      this.isDeleteModalVisible = false;\n      this.videoToDelete = null;\n    },\n    async deleteSwingVideo() {\n      console.log(\"영상 삭제\")\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if (parseInt(this.videoToDelete.user.id) === parseInt(loginInfo.id)) {\n        // 삭제할 비디오를 배열에서 제거\n        // this.swingVideos = this.swingVideos.filter(\n        //   (video) => video.id !== this.videoToDelete.id\n        // );\n        // this.videoToDelete.id\n        try {\n          // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n          const response = await taskStore.deleteTask(`swing-videos/${this.videoToDelete.id}`);\n          console.log(\"response data: \", response);\n          if (!response || response === undefined) {\n            console.log(\"응답 데이터가 없습니다.\");\n          } else {\n            this.closeDeleteModal(); // 모달 닫기\n            this.getSwingDt();\n          }\n        } catch (err) {\n\n          console.log(\"ERROR\", err)\n        }\n\n      } else {\n        alert(\"해당 영상을 삭제 할 수  없습니다.\")\n        this.closeDeleteModal(); // 모달 닫기\n      }\n    },\n    openYouTubeModal(selectViedo) {\n      this.currentViedo = selectViedo\n      this.isYouTubeModalVisible = true;\n    },\n    closeYouTubeModal() {\n      this.isYouTubeModalVisible = false;\n    },\n    handleResize() {\n      this.screenWidth = window.innerWidth; // 화면 크기 갱신\n    },\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize); // 화면 크기 변경 이벤트 리스너 추가\n    this.getSwingDt()\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize); // 컴포넌트 파괴 시 이벤트 리스너 제거\n  },\n};\n</script>\n\n<style scoped src=\"@/style/record/myswingvideolist.css\"></style>\n"],"mappings":"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","ignoreList":[]}]}