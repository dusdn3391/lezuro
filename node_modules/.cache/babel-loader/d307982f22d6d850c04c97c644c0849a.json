{"remainingRequest":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerContactList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerContactList.vue","mtime":1734937733227},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["managerStore","ManagerHeader","ManagerNavbar","name","components","data","selectedDate","start","end","selectedDateTab","dateTabs","selectedShop","searchTitle","contact","searchQuery","arrowLeftImage","arrowRightImage","currentPage","itemsPerPage","selectedContact","computed","today","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","visiblePages","totalPages","maxVisiblePages","startPage","Math","max","floor","endPage","Array","from","length","_","i","filteredContacts","result","query","toLowerCase","filter","title","includes","branchName","startDate","endDate","setHours","createdAt","list","ceil","paginatedItems","slice","isAllSelected","every","id","mounted","getAsk","watch","methods","selectDateTab","dateTab","validateStartDate","alert","validateEndDate","response","getTask","console","log","managerInfo","JSON","parse","localStorage","getItem","error","managerTokenName","identifier","filteredBranches","item","nextPage","prevPage","goToPage","page","toGoContactDetail","$router","push","path","toggleAll","contactId","some","newSelection","map","concat","deleteSelected","confirm","a","res","deleteTask"],"sources":["src/components/manager/ManagerContactList.vue"],"sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"contact-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box pretendard-bold-normal-black-28px\">1:1 문의</div>\n\n          <!-- 날짜 선택 부분 -->\n          <div class=\"date-picker-box\">\n            <div class=\"date_wrap\">\n              <span class=\"date-pickder-title\">날짜검색</span>\n              <!-- 24.12.09 수정 - 추가 -->\n              <div v-for=\"dateTab in dateTabs\" :key=\"dateTab\"\n                :class=\"['datetab-btn pretendard-regular-normal-mine-shaft-16px', { active: selectedDateTab === dateTab }]\"\n                @click=\"selectDateTab(dateTab)\">\n                {{ dateTab }}\n              </div>\n              <!-- 날짜 선택 부분 -->\n              <!-- <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"startDate\" /> -->\n              <!-- 24.12.09 수정 - 추가 : max, change-->\n              <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"selectedDate.start\"\n                @change=\"validateStartDate\" :max=\"today\" />\n              ~\n              <!-- <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"endDate\" /> -->\n              <!-- 24.12.09 수정 - 추가 : max, change-->\n              <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"selectedDate.end\"\n                @change=\"validateEndDate\" :max=\"today\" />\n            </div>\n            <div class=\"search_shop\">\n              <span class=\"shop_title\">문의검색</span>\n              <div class=\"select_box_1\">\n                <!-- 대회이름을 선택할 수 있는 select box -->\n                <select class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\">\n                  <option value=\"title\">제목</option>\n                </select>\n              </div>\n              <div class=\"select_box_2\">\n                <!-- 검색어 입력 필드 -->\n                <input type=\"text\" class=\"pretendard-regular-normal-mountain-mist-18px\" placeholder=\"검색어를 입력하세요\"\n                  v-model=\"searchQuery\" />\n                <img class=\"search-btn-10\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/searchbtn-9.svg\"\n                  alt=\"searchBtn\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"contact_list\">\n            <div class=\"contact_top\">\n              <div class=\"contact_title pretendard-bold-24px\">문의 리스트</div>\n              <button class=\"pretendard-regular-normal-mine-shaft-16px\" @click=\"deleteSelected\">\n                선택 삭제\n              </button>\n            </div>\n            <div class=\"table-container\">\n              <table>\n                <thead>\n                  <!-- 24.12.10 수정 - 폰트 추가 -->\n                  <tr class=\"pretendard-bold-mine-shaft-18px\">\n                    <th><input type=\"checkbox\" @click=\"toggleAll\" v-model=\"isAllSelected\"></th>\n                    <th>번호</th>\n                    <th>고객명</th>\n                    <th>1:1문의내역</th>\n                    <th>접수일시</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(contact, index) in paginatedItems\" :key=\"index\"\n                    class=\"pretendard-semibold-mountain-mist-16px \">\n                    <td><input type=\"checkbox\" v-model=\"selectedContact\" :value=\"contact.id\"></td>\n                    <!-- 24.12.04 수정 - 추가 -->\n                    <td @click=\"toGoContactDetail(contact)\"> {{ contact.id }}</td>\n                    <td @click=\"toGoContactDetail(contact)\">\n                      {{ contact.user_name }}\n                    </td>\n                    <td @click=\"toGoContactDetail(contact)\">{{ contact.title }}</td>\n                    <td @click=\"toGoContactDetail(contact)\">{{ contact.createdAt.split('T')[0] }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <!-- 24.12.10 수정 - 폰트 추가 -->\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <!-- 24.12.09 수정 - 추가 -->\n                <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { managerStore } from '../../store/managerStore';  // API 호출\nimport ManagerHeader from './ManagerHeader.vue';\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\n\nexport default {\n  name: \"AdminContactList\",\n  components: {\n    ManagerHeader,\n    ManagerNavbar,\n  },\n  data() {\n    return {\n      selectedDate: {\n        start: '',\n        end: '',\n      },\n      // 24.12.09 수정 - 추가\n      selectedDateTab: \"전체\",\n      // 24.12.09 수정 - 추가\n      dateTabs: [\"전체\"],\n      selectedShop: \"\",\n      searchTitle: \"\",\n      contact: [\n      ],\n      searchQuery: \"\",\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      currentPage: 1,\n      itemsPerPage: 5, // Display 5 items per page\n      selectedContact: [],\n    };\n  },\n  computed: {\n    // 24.12.09 수정 - 추가 : 오늘날짜 계산\n    today() {\n      const date = new Date();\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0'); // 월은 0부터 시작\n      const day = String(date.getDate()).padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    },\n    // 24.12.09 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    filteredContacts() {\n      let result = this.contact;\n\n      // 제목 검색\n      if (this.searchTitle) {\n        const query = this.searchQuery.toLowerCase();\n        result = result.filter((contact) =>\n          contact.title.toLowerCase().includes(query)\n        );\n      }\n\n      // 검색어 필터\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        result = result.filter(\n          (contact) =>\n            contact.title.toLowerCase().includes(query) ||\n            contact.branchName.toLowerCase().includes(query)\n        );\n      }\n      // 날짜 검색 필터\n      if (this.selectedDate.start && this.selectedDate.end) {\n        const startDate = new Date(this.selectedDate.start);\n        let endDate = new Date(this.selectedDate.end);\n\n        // endDate가 선택된 경우, 시간을 23:59:59로 설정\n        endDate.setHours(23, 59, 59, 999);\n\n        result = result.filter(\n          (contact) =>\n            new Date(contact.createdAt) >= startDate && new Date(contact.createdAt) <= endDate\n        );\n      } else if (this.selectedDate.start) {\n        // startDate만 있을 경우 필터링\n        const startDate = new Date(this.selectedDate.start);\n        result = result.filter((contact) => new Date(contact.createdAt) >= startDate);\n      } else if (this.selectedDate.end) {\n        // endDate만 있을 경우 필터링, 시간을 23:59:59로 설정\n        const endDate = new Date(this.selectedDate.end);\n        endDate.setHours(23, 59, 59, 999);\n        result = result.filter((contact) => new Date(contact.createdAt) <= endDate);\n      }\n\n      // 24.12.09 수정 - 추가\n      // 전체 탭이 선택되었으면 모든 데이터를 반환\n      if (this.selectedDateTab === \"전체\") {\n        return result;\n      }\n\n      // 24.12.09 수정 - 추가\n      // 날짜 검색 필터\n      if (this.selectedDate.start || this.selectedDate.end) {\n        const startDate = this.selectedDate.start ? new Date(this.selectedDate.start) : null;\n        const endDate = this.selectedDate.end ? new Date(this.selectedDate.end) : null;\n\n        result = result.filter((list) => {\n          const createdAt = new Date(list.createdAt);\n          if (startDate && createdAt < startDate) return false; // 시작 날짜 이전 데이터 제외\n          if (endDate && createdAt > endDate) return false; // 종료 날짜 이후 데이터 제외\n          return true;\n        });\n      }\n\n      return result;\n    },\n    totalPages() {\n      return Math.ceil(this.filteredContacts.length / this.itemsPerPage);\n    },\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredContacts.slice(start, start + this.itemsPerPage);\n    },\n    isAllSelected() {\n      return (\n        this.paginatedItems.length > 0 &&\n        this.paginatedItems.every(contact => this.selectedContact.includes(contact.id))\n      );\n    },\n  },\n  mounted() {\n    this.getAsk()\n  },\n  // 24.12.09 수정 - 추가\n  watch: {\n    filteredContacts() {\n      this.currentPage = 1; // 검색 결과 변경 시 첫 페이지로 이동\n    },\n  },\n  methods: {\n    // 24.12.09 수정 - 추가\n    selectDateTab(dateTab) {\n      this.selectedDateTab = dateTab;\n      if (dateTab === \"전체\") {\n        // 전체를 선택하면 날짜 초기화\n        this.selectedDate.start = \"\";\n        this.selectedDate.end = \"\";\n      }\n    },\n    // 24.12.09 수정 - 추가\n    validateStartDate() {\n      const today = new Date();\n      if (new Date(this.selectedDate.start) > today) {\n        alert(\"오늘 이후의 날짜는 선택할 수 없습니다.\");\n        this.selectedDate.start = \"\"; // 초기화\n      } else if (this.selectedDate.end && new Date(this.selectedDate.start) > new Date(this.selectedDate.end)) {\n        alert(\"시작 날짜는 종료 날짜보다 늦을 수 없습니다.\");\n        this.selectedDate.start = \"\"; // 초기화\n      }\n      this.selectedDateTab = \"\"; // 전체 탭 해제\n    },\n    // 24.12.09 수정 - 추가\n    validateEndDate() {\n      const today = new Date();\n      if (new Date(this.selectedDate.end) > today) {\n        alert(\"오늘 이후의 날짜는 선택할 수 없습니다.\");\n        this.selectedDate.end = \"\"; // 초기화\n      } else if (this.selectedDate.start && new Date(this.selectedDate.end) < new Date(this.selectedDate.start)) {\n        alert(\"종료 날짜는 시작 날짜보다 이를 수 없습니다.\");\n        this.selectedDate.end = \"\"; // 초기화\n      }\n      this.selectedDateTab = \"\"; // 전체 탭 해제\n    },\n    async getAsk() {\n      try {\n        const response = await managerStore.getTask(`inquiries`);\n        console.log(\"response ask\", response);\n\n        // 로컬 스토리지에서 managerInfo 가져오기\n        const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n\n        // managerInfo가 없는 경우 에러 처리\n        if (!managerInfo) {\n          console.error(\"managerInfo 없음\");\n          return;\n        }\n\n        // managerTokenId 추출\n        const managerTokenName = managerInfo.identifier;\n        console.log('managerTokenName', managerTokenName);\n\n\n        // managerTokenId와 branchId가 같은 데이터만 필터링\n        const filteredBranches = response.filter(item => item.branchName === managerTokenName);\n\n        console.log('Filtered Branches:', filteredBranches);\n\n        // 필터링된 데이터 저장\n        this.contact = filteredBranches;\n\n\n      } catch (error) {\n        console.error(\"Error fetching contactList data:\", error);\n      }\n    },\n\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      // this.currentPage = page;\n      // 24.12.09 수정 - 추가\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    toGoContactDetail(item) {\n      // Step 1: 클릭된 항목의 전체 정보와 ID 출력\n      console.log(\"Step 1: 클릭된 A/S 항목\", item);\n      console.log(\"Step 1: 선택된 A/S 항목 ID:\", item.id);\n\n      if (item.id) {\n        // Step 2: 라우터 이동 전 ID 출력\n        console.log(\"Step 2: 라우터 이동 준비, ID:\", item.id);\n\n        // 라우터로 페이지 이동\n        this.$router.push({\n          path: \"/managercontact-detail\",\n          query: { id: item.id }\n        });\n\n        // Step 3: 라우터 이동 후 출력 (라우터의 beforeEach 훅에서 확인 가능)\n        console.log(\"Step 3: 라우터 이동 완료\");\n      } else {\n        console.error(\"Step 1: 항목에 ID가 없습니다:\", item);\n      }\n    },\n    toggleAll() {\n      if (this.isAllSelected) {\n        // Unselect all\n        this.selectedContact = this.selectedContact.filter(\n          contactId => !this.paginatedItems.some(contact => contact.id === contactId)\n        );\n      } else {\n        // Select all\n        const newSelection = this.paginatedItems\n          .filter(contact => !this.selectedContact.includes(contact.id))\n          .map(contact => contact.id);\n        this.selectedContact = this.selectedContact.concat(newSelection);\n      }\n    },\n    async deleteSelected() {\n      if (this.selectedContact.length === 0) {\n        alert(\"삭제할 항목을 선택해주세요.\");\n        return;\n      }\n\n      if (confirm(\"선택된 항목을 정말 삭제하시겠습니까?\")) {\n        for (var a = 0; a < this.selectedContact.length; a++) {\n          const res = await managerStore.deleteTask(`inquiries/${this.selectedContact[a]}`);\n          console.log(\"manager : : : \", res)\n        }\n        // console.log(\"this.selectedContact : : \" , this.selectedContact)\n\n        // Delete selected contacts\n        this.contact = this.contact.filter(\n          contact => !this.selectedContact.includes(contact.id)\n        );\n        this.selectedContact = [];\n\n        // Adjust current page if necessary\n        if (this.currentPage > this.totalPages) {\n          this.currentPage = this.totalPages || 1;\n        }\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.contact-container {\n  width: 100%;\n  background: #f5f6f6;\n  display: flex;\n}\n\n/* 24.12.23 수정 */\n.wrapper {\n    width: 100%;\n    padding: 30px;\n    /* gap: 20px; */\n    height: 100vh;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  width: 100%;\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n.date-picker-box {\n  background-color: #fff;\n  padding: 30px;\n}\n\n.date_wrap {\n  display: flex;\n  align-items: center;\n}\n\n.date_wrap input {\n  width: 17%;\n  height: 60px;\n  border: 1px solid #ddd;\n  margin: 11px;\n  padding: 0 20px;\n}\n\n\n/* 24.12.09 수정 - 추가*/\n.datetab-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  padding: 16px 30px;\n  border: 1px solid #ddd;\n  gap: 10px;\n  background-color: #fff;\n}\n\n/* 24.12.09 수정 */\n.datetab-btn.active,\n.tab-btn.active {\n  background-color: #184199;\n  color: #fff;\n}\n\n.shop_title,\n.date-pickder-title {\n  margin-right: 23.5px;\n  white-space: nowrap;\n}\n\n.contact_top {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.contact_list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  background-color: #fff;\n  padding: 30px;\n  margin-top: 20px;\n}\n\n.search_shop {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 10px;\n}\n\n.search_box {\n  width: 100%;\n  background-color: #fff;\n  gap: 10px;\n  align-items: center;\n}\n\n.select_box_1 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 17%;\n  border: 1px solid #ddd;\n}\n\n.select_box_1 select {\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n\n}\n\n.select_box_2 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 82%;\n  border: 1px solid #ddd;\n}\n\n.select_box_2 input {\n  width: 100%;\n  height: 100%;\n  outline: none;\n  border: none;\n}\n\nbutton {\n  border: none;\n  width: 150px;\n  height: 45px;\n  line-height: 21.48px;\n  color: #ffffff;\n  background-color: #ccc;\n}\n\n.table-container {\n  background-color: #fff;\n  width: 100%;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 26px 0px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n\n}\n\nth {\n  background-color: #f5f5f5;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  width: 100%;\n}\n\n.page-numbers {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}