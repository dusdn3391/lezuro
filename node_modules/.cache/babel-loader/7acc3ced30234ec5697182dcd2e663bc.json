{"remainingRequest":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/TermsView.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/TermsView.vue","mtime":1734673215830},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0IEhlYWRlciBmcm9tICIuL0hlYWRlciI7CmltcG9ydCBSalpzV2kgZnJvbSAiLi9SalpzV2kiOwppbXBvcnQgWEZvb3RlciBmcm9tICIuL1hGb290ZXIiOwppbXBvcnQgeyB0YXNrU3RvcmUgfSBmcm9tICJAL3N0b3JlL3Rhc2tTdG9yZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVybXNWaWV3IiwKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXIsCiAgICBSalpzV2ksCiAgICBYRm9vdGVyCiAgfSwKICBwcm9wczogWyJySlpzV0lQcm9wcyIsICJ4Rm9vdGVyUHJvcHMiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFiczogWyLsnbTsmqnslb3qtIAiLCAi6rCc7J247KCV67O07LKY66as67Cp7LmoIiwgIuychOy5mOygleuztOydtOyaqeyVveq0gCJdLAogICAgICBzZWxlY3RlZFRhYjogIuydtOyaqeyVveq0gCIsCiAgICAgIC8vIOq4sOuzuOqwkjog7LKrIOuyiOynuCDtg60KICAgICAgdGVybXNDb250ZW50OiBbXSAvLyDroZzrk5zrkJwg7JW96rSAIOuNsOydtO2EsCDsoIDsnqUKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgdGFiRnJvbVF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnkudGFiOwogICAgaWYgKHRoaXMudGFicy5pbmNsdWRlcyh0YWJGcm9tUXVlcnkpKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRUYWIgPSB0YWJGcm9tUXVlcnk7CiAgICB9CiAgICB0aGlzLmxvYWRUZXJtc0RhdGEoKTsgLy8g7LSI6riwIOuNsOydtO2EsCDroZzrk5wKICAgIHRoaXMudXBkYXRlVGl0bGUoKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnVwZGF0ZVRpdGxlKTsKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgdGhpcy51cGRhdGVUaXRsZSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBsb2FkVGVybXNEYXRhKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLmdldFNlbGVjdFRhc2tzKCJ0ZXJtcyIpOwogICAgICAgIGNvbnNvbGUubG9nKCLrsJvsnYAg642w7J207YSwOiIsIHJlc3BvbnNlKTsKCiAgICAgICAgLy8gYHNlbGVjdGVkVGFiYOyXkCDrlLDrpbgg7JW96rSAIO2DgOyehSDsoJXsnZgKICAgICAgICBjb25zdCB0eXBlTWFwcGluZyA9IHsKICAgICAgICAgIOydtOyaqeyVveq0gDogIuydtOyaqeyVveq0gCIsCiAgICAgICAgICDqsJzsnbjsoJXrs7TsspjrpqzrsKnsuag6ICLqsJzsnbjsoJXrs7QiLAogICAgICAgICAg7JyE7LmY7KCV67O07J207Jqp7JW96rSAOiAi7JyE7LmY7KCV67O0IgogICAgICAgIH07CiAgICAgICAgY29uc3Qgc2VsZWN0ZWRUeXBlID0gdHlwZU1hcHBpbmdbdGhpcy5zZWxlY3RlZFRhYl07CgogICAgICAgIC8vIDI0LjEyLjA1IOyImOyglSAtIOy2lOqwgCA6IGBzZWxlY3RlZFRhYmDsl5Ag7ZW064u57ZWY64qUIOuNsOydtO2EsOunjCDtlYTthLDrp4EKICAgICAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSByZXNwb25zZS5maWx0ZXIoaXRlbSA9PiBpdGVtLnR5cGUgPT09IHNlbGVjdGVkVHlwZSk7CgogICAgICAgIC8vICAyNC4xMi4wNSDsiJjsoJUgLSDstpTqsIAgOiBgY29udGVudGDsnZggPGJyPiDtg5zqt7jrpbwg7KSE67CU6r+I7Jy866GcIOuMgOyytAogICAgICAgIGNvbnN0IHByb2Nlc3NlZERhdGEgPSBmaWx0ZXJlZERhdGEubWFwKGl0ZW0gPT4gKHsKICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQucmVwbGFjZSgvPGJyXHMqXC8/Pi9nLCAiXG4iKSAvLyA8YnI+IC0+IFxuCiAgICAgICAgfSkpOwoKICAgICAgICAvLyAyNC4xMi4wNSDsiJjsoJUgLSDstpTqsIAgOiB0aXRsZeydmCDsiKvsnpDrpbwg6riw7KSA7Jy866GcIOygleugrAogICAgICAgIGNvbnN0IHNvcnRlZERhdGEgPSBwcm9jZXNzZWREYXRhLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgIHZhciBfYSR0aXRsZSRtYXRjaCwgX2IkdGl0bGUkbWF0Y2g7CiAgICAgICAgICBjb25zdCBudW1BID0gcGFyc2VJbnQoKChfYSR0aXRsZSRtYXRjaCA9IGEudGl0bGUubWF0Y2goL1xkKy8pKSA9PT0gbnVsbCB8fCBfYSR0aXRsZSRtYXRjaCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EkdGl0bGUkbWF0Y2hbMF0pIHx8IDAsIDEwKTsKICAgICAgICAgIGNvbnN0IG51bUIgPSBwYXJzZUludCgoKF9iJHRpdGxlJG1hdGNoID0gYi50aXRsZS5tYXRjaCgvXGQrLykpID09PSBudWxsIHx8IF9iJHRpdGxlJG1hdGNoID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYiR0aXRsZSRtYXRjaFswXSkgfHwgMCwgMTApOwogICAgICAgICAgcmV0dXJuIG51bUEgLSBudW1COwogICAgICAgIH0pOwoKICAgICAgICAvLyBgc2VsZWN0ZWRUYWJg7JeQIO2VtOuLue2VmOuKlCDrjbDsnbTthLDrp4wg7ZWE7YSw66eBCiAgICAgICAgLy8gdGhpcy50ZXJtc0NvbnRlbnQgPSByZXNwb25zZS5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0udHlwZSA9PT0gc2VsZWN0ZWRUeXBlKTsKICAgICAgICAvLyAyNC4xMi4wNSDsiJjsoJUgLSDstpTqsIAgOiB0aXRsZSBhc2Mg7KCV66CsCiAgICAgICAgdGhpcy50ZXJtc0NvbnRlbnQgPSBzb3J0ZWREYXRhOyAvLyDsoJXroKzrkJwg642w7J207YSwIOyggOyepQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuuNsOydtO2EsOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmCDrsJzsg506IiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0VGFiKHRhYk5hbWUpIHsKICAgICAgdGhpcy5zZWxlY3RlZFRhYiA9IHRhYk5hbWU7IC8vIO2DrSDshKDtg50g7JeF642w7J207Yq4CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBxdWVyeTogewogICAgICAgICAgdGFiOiB0YWJOYW1lCiAgICAgICAgfQogICAgICB9KTsgLy8gVVJMIOy/vOumrCDsl4XrjbDsnbTtirgKICAgICAgdGhpcy5sb2FkVGVybXNEYXRhKCk7IC8vIOuNsOydtO2EsCDri6Tsi5wg66Gc65OcCiAgICAgIHRoaXMudXBkYXRlVGl0bGUoKTsKICAgIH0sCiAgICB1cGRhdGVUaXRsZSgpIHsKICAgICAgY29uc3Qgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDsKICAgICAgaWYgKHdpbmRvd1dpZHRoIDw9IDcyMCkgewogICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLnNlbGVjdGVkVGFiOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudGl0bGUgPSAi7JW96rSAIjsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["Header","RjZsWi","XFooter","taskStore","name","components","props","data","tabs","selectedTab","termsContent","mounted","tabFromQuery","$route","query","tab","includes","loadTermsData","updateTitle","window","addEventListener","beforeDestroy","removeEventListener","methods","response","getSelectTasks","console","log","typeMapping","이용약관","개인정보처리방침","위치정보이용약관","selectedType","filteredData","filter","item","type","processedData","map","content","replace","sortedData","sort","a","b","_a$title$match","_b$title$match","numA","parseInt","title","match","numB","error","selectTab","tabName","$router","push","windowWidth","innerWidth"],"sources":["src/components/TermsView.vue"],"sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"terms-2 screen\">\n      <Header />\n      <!-- <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" /> -->\n      <div class=\"terms_wrap\">\n        <div class=\"terms_title pretendard-bold-log-cabin-38px\">\n          약관\n        </div>\n        <div class=\"terms_view\">\n          <div class=\"tab-container\">\n            <!-- 24.12.20 수정 - 폰트 변경 -->\n            <div v-for=\"tab in tabs\" :key=\"tab\" :class=\"[\n              'tab-btn pretendard-medium-granite-gray-18px',\n              { active: selectedTab === tab },\n            ]\" @click=\"selectTab(tab)\">\n              {{ tab }}\n            </div>\n          </div>\n\n          <!-- 약관 데이터 렌더링 -->\n          <div v-if=\"termsContent && termsContent.length > 0\" class=\"terms\">\n            <div v-for=\"(term, index) in termsContent\" :key=\"index\" class=\"termsview\">\n              <div class=\"pretendard-light-granite-gray-18px\">\n                <p class=\"lorem-ipsum-dolor-si-11 valign-text-middle\">\n                  <!-- 24.12.20 수정 - 폰트 추가 -->\n                  <span class=\"pretendard-bold-black-18px\">{{ term.title }}</span><br />\n                  {{ term.content }}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"no-terms\">\n            <p class=\"pretendard-regular-normal-mine-shaft-16px\">약관 데이터가 없습니다.</p>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"TermsView\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\", \"xFooterProps\"],\n  data() {\n    return {\n      tabs: [\"이용약관\", \"개인정보처리방침\", \"위치정보이용약관\"],\n      selectedTab: \"이용약관\", // 기본값: 첫 번째 탭\n      termsContent: [], // 로드된 약관 데이터 저장\n    };\n  },\n  mounted() {\n    const tabFromQuery = this.$route.query.tab;\n    if (this.tabs.includes(tabFromQuery)) {\n      this.selectedTab = tabFromQuery;\n    }\n    this.loadTermsData(); // 초기 데이터 로드\n    this.updateTitle();\n    window.addEventListener(\"resize\", this.updateTitle);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.updateTitle);\n  },\n  methods: {\n    async loadTermsData() {\n      try {\n        const response = await taskStore.getSelectTasks(\"terms\");\n        console.log(\"받은 데이터:\", response);\n\n        // `selectedTab`에 따른 약관 타입 정의\n        const typeMapping = {\n          이용약관: \"이용약관\",\n          개인정보처리방침: \"개인정보\",\n          위치정보이용약관: \"위치정보\",\n        };\n        const selectedType = typeMapping[this.selectedTab];\n\n        // 24.12.05 수정 - 추가 : `selectedTab`에 해당하는 데이터만 필터링\n        const filteredData = response.filter((item) => item.type === selectedType);\n\n        //  24.12.05 수정 - 추가 : `content`의 <br> 태그를 줄바꿈으로 대체\n        const processedData = filteredData.map((item) => ({\n          ...item,\n          content: item.content.replace(/<br\\s*\\/?>/g, \"\\n\"), // <br> -> \\n\n        }));\n\n        // 24.12.05 수정 - 추가 : title의 숫자를 기준으로 정렬\n        const sortedData = processedData.sort((a, b) => {\n          const numA = parseInt(a.title.match(/\\d+/)?.[0] || 0, 10);\n          const numB = parseInt(b.title.match(/\\d+/)?.[0] || 0, 10);\n          return numA - numB;\n        });\n\n        // `selectedTab`에 해당하는 데이터만 필터링\n        // this.termsContent = response.filter((item) => item.type === selectedType);\n        // 24.12.05 수정 - 추가 : title asc 정렬\n        this.termsContent = sortedData; // 정렬된 데이터 저장\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n    selectTab(tabName) {\n      this.selectedTab = tabName; // 탭 선택 업데이트\n      this.$router.push({ query: { tab: tabName } }); // URL 쿼리 업데이트\n      this.loadTermsData(); // 데이터 다시 로드\n      this.updateTitle();\n    },\n    updateTitle() {\n      const windowWidth = window.innerWidth;\n      if (windowWidth <= 720) {\n        this.title = this.selectedTab;\n      } else {\n        this.title = \"약관\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped src=\"@/style/cs/termsview.css\"></style>"],"mappings":";;;;AA2CA,OAAAA,MAAA;AACA,OAAAC,MAAA;AACA,OAAAC,OAAA;AACA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAL,MAAA;IACAC,MAAA;IACAC;EACA;EACAI,KAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,WAAA;MAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,YAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA;IACA,SAAAP,IAAA,CAAAQ,QAAA,CAAAJ,YAAA;MACA,KAAAH,WAAA,GAAAG,YAAA;IACA;IACA,KAAAK,aAAA;IACA,KAAAC,WAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAF,WAAA;EACA;EACAG,cAAA;IACAF,MAAA,CAAAG,mBAAA,gBAAAJ,WAAA;EACA;EACAK,OAAA;IACA,MAAAN,cAAA;MACA;QACA,MAAAO,QAAA,SAAArB,SAAA,CAAAsB,cAAA;QACAC,OAAA,CAAAC,GAAA,YAAAH,QAAA;;QAEA;QACA,MAAAI,WAAA;UACAC,IAAA;UACAC,QAAA;UACAC,QAAA;QACA;QACA,MAAAC,YAAA,GAAAJ,WAAA,MAAAnB,WAAA;;QAEA;QACA,MAAAwB,YAAA,GAAAT,QAAA,CAAAU,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA,KAAAJ,YAAA;;QAEA;QACA,MAAAK,aAAA,GAAAJ,YAAA,CAAAK,GAAA,CAAAH,IAAA;UACA,GAAAA,IAAA;UACAI,OAAA,EAAAJ,IAAA,CAAAI,OAAA,CAAAC,OAAA;QACA;;QAEA;QACA,MAAAC,UAAA,GAAAJ,aAAA,CAAAK,IAAA,EAAAC,CAAA,EAAAC,CAAA;UAAA,IAAAC,cAAA,EAAAC,cAAA;UACA,MAAAC,IAAA,GAAAC,QAAA,GAAAH,cAAA,GAAAF,CAAA,CAAAM,KAAA,CAAAC,KAAA,qBAAAL,cAAA,uBAAAA,cAAA;UACA,MAAAM,IAAA,GAAAH,QAAA,GAAAF,cAAA,GAAAF,CAAA,CAAAK,KAAA,CAAAC,KAAA,qBAAAJ,cAAA,uBAAAA,cAAA;UACA,OAAAC,IAAA,GAAAI,IAAA;QACA;;QAEA;QACA;QACA;QACA,KAAAzC,YAAA,GAAA+B,UAAA;MACA,SAAAW,KAAA;QACA1B,OAAA,CAAA0B,KAAA,uBAAAA,KAAA;MACA;IACA;IACAC,UAAAC,OAAA;MACA,KAAA7C,WAAA,GAAA6C,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAA1C,KAAA;UAAAC,GAAA,EAAAuC;QAAA;MAAA;MACA,KAAArC,aAAA;MACA,KAAAC,WAAA;IACA;IACAA,YAAA;MACA,MAAAuC,WAAA,GAAAtC,MAAA,CAAAuC,UAAA;MACA,IAAAD,WAAA;QACA,KAAAR,KAAA,QAAAxC,WAAA;MACA;QACA,KAAAwC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}