{"remainingRequest":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/ContactWrite.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/ContactWrite.vue","mtime":1734661234110},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwtc2VhcmNoLXBhcmFtcy5kZWxldGUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLXNlYXJjaC1wYXJhbXMuaGFzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLnNpemUuanMiOwppbXBvcnQgeyB0YXNrU3RvcmUgfSBmcm9tICJAL3N0b3JlL3Rhc2tTdG9yZSI7CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDb250YWN0V3JpdGUiLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlciwKICAgIFJqWnNXaSwKICAgIFhGb290ZXIKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogIiIsCiAgICAgIHNlbGVjdGVkQnJhbmNoSWQ6ICIiLAogICAgICAvLyDri6jsnbwg66ek7J6lIOyEoO2DnQogICAgICBzaG9wT3B0aW9uczogW10sCiAgICAgIC8vIOunpOyepSDrqqnroZ0KICAgICAgY29udGVudDogIiIsCiAgICAgIGZpbGU6IG51bGwsCiAgICAgIGltYWdlVXJsOiAiIiwKICAgICAgLy8g7JeF66Gc65Oc65CcIOydtOuvuOyngCBVUkwg7KCA7J6lCiAgICAgIHNlbGVjdGVkRmlsZU5hbWU6ICIiLAogICAgICBwcmV2aWV3SW1hZ2VVcmw6ICcnIC8vIDI0LjEyLjIwIOyImOyglSAtIOy2lOqwgCA6IOuvuOumrOuztOq4sCDsnbTrr7jsp4AgVVJMCiAgICB9OwogIH0sCiAgcHJvcHM6IFsickpac1dJUHJvcHMiXSwKICBtb3VudGVkKCkgewogICAgLy8gdGhpcy5nZXRHYW1lc2hvcCgpOwogICAgY29uc3QgbG9naW5JbmZvID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibG9naW5JbmZvIikpOwogICAgaWYgKGxvZ2luSW5mbyAmJiBsb2dpbkluZm8uaWQpIHsKICAgICAgdGhpcy5sb2dpbkluZm8gPSBsb2dpbkluZm87CiAgICAgIGNvbnNvbGUubG9nKCLstIjquLDtmZTrkJwgdGhpcy5sb2dpbkluZm86IiwgdGhpcy5sb2dpbkluZm8pOwogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS53YXJuKCLroZzqt7jsnbgg7KCV67O06rCAIOyXhuyKteuLiOuLpC4iKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBzZWxlY3RlZEJyYW5jaE5hbWUoKSB7CiAgICAgIC8vIHNob3BPcHRpb25z7JeQ7IScIHNlbGVjdGVkQnJhbmNoSWTsmYAg7J287LmY7ZWY64qUIOunpOyepSDsnbTrpoQg7LC+6riwCiAgICAgIGNvbnN0IHNlbGVjdGVkU2hvcCA9IHRoaXMuc2hvcE9wdGlvbnMuZmluZChzaG9wID0+IHNob3AuaWQgPT09IHRoaXMuc2VsZWN0ZWRCcmFuY2hJZCk7CiAgICAgIHJldHVybiBzZWxlY3RlZFNob3AgPyBzZWxlY3RlZFNob3AubmFtZSA6ICcnOyAvLyDrp6Tsua3rkJwg66ek7J6lIOydtOumhCDrsJjtmZgKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEdhbWVzaG9wKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIlRva2VuIik7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoImh0dHA6Ly8xMy4xMjQuNjIuNjg6MzAwMC9hcGkvdjEvYnJhbmNoL2xpc3QiLCB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zaG9wT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGEubWFwKHNob3AgPT4gKHsKICAgICAgICAgIGlkOiBzaG9wLmlkLAogICAgICAgICAgbmFtZTogc2hvcC5uYW1lCiAgICAgICAgfSkpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuunpOyepSDrjbDsnbTthLDrpbwg6rCA7KC47Jik64qUIOykkSDsmKTrpZgg67Cc7IOdOiIsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIG9uRmlsZUNoYW5nZShldmVudCkgewogICAgICBjb25zb2xlLmxvZygi7Ya17IugIO2VmOuKlCDspJEhISEiKTsKICAgICAgLy8gY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibWFuYWdlclRva2VuIik7CiAgICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIHRoaXMuZmlsZSA9IGZpbGU7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUuc2l6ZSk7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUubmFtZSk7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUudHlwZSk7CgogICAgICAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAKICAgICAgdGhpcy5zZWxlY3RlZEZpbGVOYW1lID0gZmlsZS5uYW1lOwoKICAgICAgLy8gMjQuMTIuMjAg7IiY7KCVIC0g7LaU6rCAIDog66+466as67O06riwIOyymOumrAogICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICByZWFkZXIub25sb2FkID0gZSA9PiB7CiAgICAgICAgdGhpcy5wcmV2aWV3SW1hZ2VVcmwgPSBlLnRhcmdldC5yZXN1bHQ7IC8vIOuvuOumrOuztOq4sCDsnbTrr7jsp4AgVVJMIOyEpOyglQogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKTsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIGZpbGVOYW1lOiBmaWxlLm5hbWUsCiAgICAgICAgZmlsZVNpemU6IGZpbGUuc2l6ZSwKICAgICAgICBtaW1lVHlwZTogZmlsZS50eXBlCiAgICAgIH07CiAgICAgIGNvbnNvbGUubG9nKCLthrXsi6Ag7ZWY64qUIOykkSEhISIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbGUpKTsKCiAgICAgIC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLnBvc3RUYXNrKAogICAgICAvLyAgICJ2MS9maWxlcy9wcmVzaWduZWQtdXJsIiwKICAgICAgLy8gICBwYXJhbXMKICAgICAgLy8gKTsKICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiVG9rZW4iKTsKICAgICAgY29uc3QgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAnYWNjZXB0JzogJyovKicsCiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgYCArIHRva2VuCiAgICAgICAgfQogICAgICB9OwogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoImh0dHA6Ly8xMy4xMjQuNjIuNjg6MzAwMC9hcGkvdjEvZmlsZXMvcHJlc2lnbmVkLXVybCIsIHBhcmFtcywgY29uZmlnKTsKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlIDogOiA6IDogOiIgKyBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpOwogICAgICBjb25zdCB1cmwgPSByZXNwb25zZS5kYXRhLnByZXNpZ25lZFVybDsKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlLmZpbGUucGF0aCA6IDogOiA6IDoiICsgSlNPTi5zdHJpbmdpZnkodXJsKSk7CiAgICAgIC8vIGNvbnN0IHVybCA9ICdodHRwczovL2xlenVyby1iay5zMy5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tL2NhbWVyYS5wbmc/WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ29udGVudC1TaGEyNTY9VU5TSUdORUQtUEFZTE9BRCZYLUFtei1DcmVkZW50aWFsPUFLSUE2Q0xITkJSVzNBQTdKUTVaJTJGMjAyNDExMDclMkZhcC1ub3J0aGVhc3QtMiUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDExMDdUMDc0MjExWiZYLUFtei1FeHBpcmVzPTM2MDAmWC1BbXotU2lnbmF0dXJlPWRkNDE3NmQ4Mjg4ZWQ5NjQyMjNmNDcxZmY3NDVmZmVjODk0MzEyMGRhZGYwMTdmYzJmMzczZDkxNTg4ZGY2MjYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JngtaWQ9UHV0T2JqZWN0JzsKICAgICAgdGhpcy5pbWFnZVVybCA9IG5ldyBVUkwodXJsKS5vcmlnaW4gKyBuZXcgVVJMKHVybCkucGF0aG5hbWU7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g7YyM7J28IOyXheuhnOuTnAogICAgICAgIC8vIDIuIO2UhOumrOyCrOyduCBVUkzsnYQg7IKs7Jqp7ZW0IFMz7JeQIO2MjOydvOydhCDsl4XroZzrk5ztlanri4jri6QuCiAgICAgICAgYXdhaXQgYXhpb3MucHV0KHVybCwgZmlsZSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAiQ29udGVudC1UeXBlIjogZmlsZS50eXBlCiAgICAgICAgICAgIC8vICdDb250ZW50LUxlbmd0aCc6IGZpbGUuc2l6ZQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCJGaWxlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseSEiKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciB1cGxvYWRpbmcgZmlsZToiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBwb3N0Q29udGFjdER0KCkgewogICAgICAvLyDtlYTsiJgg7J6F66ClIO2VreuqqSDssrTtgawKICAgICAgaWYgKCF0aGlzLnRpdGxlIHx8ICF0aGlzLmNvbnRlbnQgfHwgIXRoaXMuc2VsZWN0ZWRCcmFuY2hJZCkgewogICAgICAgIGFsZXJ0KCLrqqjrk6Ag7ZWE7IiYIO2VreuqqeydhCDsnoXroKXtlbTso7zshLjsmpQuIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGNvbnN0IGxvZ2luSW5mbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oImxvZ2luSW5mbyIpKTsKICAgICAgY29uc3QgdXNlcklkID0gbG9naW5JbmZvID8gbG9naW5JbmZvLmlkIDogbnVsbDsKICAgICAgaWYgKCF1c2VySWQpIHsKICAgICAgICBhbGVydCgi66Gc6re47J24IOygleuztOqwgCDsl4bsirXri4jri6QuIOuLpOyLnCDroZzqt7jsnbgg7ZW07KO87IS47JqULiIpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0cnkgewogICAgICAgIC8vIGNvbnN0IHBhcmFtcyA9e30KICAgICAgICBjb25zb2xlLmxvZygidGhpcy5pbWFnZVVyIDogOiA6IiwgdGhpcy5zZWxlY3RlZEJyYW5jaE5hbWUpOwogICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuaW1hZ2VVcmwgPyB7CiAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudCwKICAgICAgICAgIGJyYW5jaElkOiBwYXJzZUludCh0aGlzLnNlbGVjdGVkQnJhbmNoSWQpLAogICAgICAgICAgYnJhbmNoTmFtZTogdGhpcy5zZWxlY3RlZEJyYW5jaE5hbWUsCiAgICAgICAgICB1c2VySWQ6IHBhcnNlSW50KHVzZXJJZCksCiAgICAgICAgICBpbWFnZVVybDogdGhpcy5pbWFnZVVybCwKICAgICAgICAgIC8vIOyXheuhnOuTnOuQnCDsnbTrr7jsp4AgVVJMCiAgICAgICAgICB1c2VyX25hbWU6IHRoaXMubG9naW5JbmZvLm5hbWUKICAgICAgICB9IDogewogICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICBjb250ZW50OiB0aGlzLmNvbnRlbnQsCiAgICAgICAgICBicmFuY2hJZDogcGFyc2VJbnQodGhpcy5zZWxlY3RlZEJyYW5jaElkKSwKICAgICAgICAgIGJyYW5jaE5hbWU6IHRoaXMuc2VsZWN0ZWRCcmFuY2hOYW1lLAogICAgICAgICAgdXNlcklkOiBwYXJzZUludCh1c2VySWQpLAogICAgICAgICAgdXNlcl9uYW1lOiB0aGlzLmxvZ2luSW5mby5uYW1lCiAgICAgICAgfTsKICAgICAgICBjb25zb2xlLmxvZygi66y47J2YIOuTseuhnSDsmpTssq0g642w7J207YSwOiIsIHBhcmFtcyk7CiAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiVG9rZW4iKTsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoImh0dHA6Ly8xMy4xMjQuNjIuNjg6MzAwMC9hcGkvaW5xdWlyaWVzIiwgcGFyYW1zLCB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgYWxlcnQoIuuTseuhneydtCDsmYTro4zrkJjsl4jsirXri4jri6QuIik7CgogICAgICAgIC8vIDI0LjExLjI1IOyImOyglSAtIOy2lOqwgAogICAgICAgIC8vIO2PvCDstIjquLDtmZQKICAgICAgICB0aGlzLnRpdGxlID0gIiI7CiAgICAgICAgdGhpcy5jb250ZW50ID0gIiI7CiAgICAgICAgdGhpcy5zZWxlY3RlZEJyYW5jaElkID0gIiI7CiAgICAgICAgdGhpcy5zZWxlY3RlZEZpbGVOYW1lID0gIiI7CiAgICAgICAgdGhpcy5pbWFnZVVybCA9ICIiOyAvLyDsnbTrr7jsp4AgVVJMIOy0iOq4sO2ZlAogICAgICAgIHRoaXMuZmlsZSA9IG51bGw7IC8vIO2MjOydvOuPhCDstIjquLDtmZQKICAgICAgICAvLyB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiL215cHJvZmlsZSIgfSk7CiAgICAgICAgLy8gMjQuMTIuMTEg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgcGF0aDogIi9teXByb2ZpbGUiLAogICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgdGFiOiAiMToxIOusuOydmOuCtOyXrSIKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLrk7HroZ0g7Iuk7YyoOiIsIGVycm9yKTsKICAgICAgICBhbGVydCgi65Ox66Gd7JeQIOyLpO2MqO2WiOyKteuLiOuLpC4iKTsKICAgICAgfQogICAgfSwKICAgIGNhbmNlbCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6ICIvbXlwcm9maWxlIgogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["taskStore","Header","RjZsWi","XFooter","axios","name","components","data","title","selectedBranchId","shopOptions","content","file","imageUrl","selectedFileName","previewImageUrl","props","mounted","loginInfo","JSON","parse","localStorage","getItem","id","console","log","warn","computed","selectedBranchName","selectedShop","find","shop","methods","getGameshop","token","response","get","headers","Authorization","map","error","onFileChange","event","target","files","size","type","reader","FileReader","onload","e","result","readAsDataURL","params","fileName","fileSize","mimeType","stringify","config","post","url","presignedUrl","URL","origin","pathname","put","postContactDt","alert","userId","branchId","parseInt","branchName","user_name","$router","push","path","query","tab","cancel"],"sources":["src/components/ContactWrite.vue"],"sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"contact-write screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">1:1문의</div>\n      <div class=\"content-wrap\">\n        <div class=\"write-wrap\">\n          <!-- 제목 입력 -->\n          <div class=\"title-box\">\n            <!-- 24.11.13 수정 - input,textarea, select font 수정 -->\n            <div class=\"content-title pretendard-medium-black-18px\">제목</div>\n            <input type=\"text\" v-model=\"title\" placeholder=\"제목을 입력해주세요\"\n              class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\" />\n          </div>\n\n          <!-- 매장 선택 -->\n          <div class=\"select-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">매장</div>\n            <div class=\"branch-select-container pretendard-regular-normal-mountain-mist-16px\">\n              <select class=\"pretendard-regular-normal-mine-shaft-16px\" v-model=\"selectedBranchId\" @click=\"getGameshop\">\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"\" disabled>매장명 선택</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" v-for=\"shop in shopOptions\" :key=\"shop.id\"\n                  :value=\"shop.id\">\n                  {{ shop.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <!-- 내용 입력 -->\n          <div class=\"content-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">내용</div>\n            <textarea v-model=\"content\" placeholder=\"내용을 입력해주세요\"\n              class=\"frame-7281-9 pretendard-regular-normal-mine-shaft-16px\"></textarea>\n          </div>\n\n          <!-- 파일 업로드 -->\n          <div class=\"title-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">파일</div>\n            <div class=\"file-align\">\n              <div class=\"frame-7487-4\">\n                <label for=\"file-upload\" class=\"file-upload-label\">\n                  <img class=\"fluentfolder-20-filled-4\"\n                    src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                    alt=\"fluent:folder-20-filled\" />\n                </label>\n                <!-- 24.12.20 수정 - 폰트 추가 -->\n                <input id=\"file-upload\" type=\"file\" accept=\"image/*\" @change=\"onFileChange\"\n                  class=\"pretendard-regular-normal-mine-shaft-14px\" />\n                <div class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\">\n                  <!-- {{ selectedFileName }} -->\n                  <!-- 24.12.20 수정 -->\n                  <!-- {{ selectedFileName || (imageUrl ? imageUrl.split('/').pop() : '파일을 선택해주세요') }} -->\n                </div>\n\n              </div>\n              <!-- 24.12.20 수정 - 추가 : 미리보기  -->\n              <div class=\"image-preview\">\n                <img v-if=\"previewImageUrl\" :src=\"previewImageUrl\" alt=\"미리보기\" class=\"preview-image\" />\n              </div>\n            </div>\n          </div>\n\n          <!-- 버튼들 -->\n          <!-- 24.11.13 수정 -font style, align 변경 -->\n          <div class=\"frame-7859-3\">\n            <!-- 24.12.20 수정 - 폰트 수정 -->\n            <button class=\"cancel-btn pretendard-medium-white-18px\" @click=\"cancel\">취소하기</button>\n            <!-- 24.12.20 수정 - 폰트 수정, class 명 수정 -->\n            <button class=\"submit-btn pretendard-medium-white-18px\" @click=\"postContactDt\">확인하기</button>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { taskStore } from \"@/store/taskStore\";\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ContactWrite\",\n  components: { Header, RjZsWi, XFooter },\n  data() {\n    return {\n      title: \"\",\n      selectedBranchId: \"\", // 단일 매장 선택\n      shopOptions: [], // 매장 목록\n      content: \"\",\n      file: null,\n      imageUrl: \"\", // 업로드된 이미지 URL 저장\n      selectedFileName: \"\",\n      previewImageUrl: '', // 24.12.20 수정 - 추가 : 미리보기 이미지 URL\n    };\n  },\n  props: [\"rJZsWIProps\"],\n  mounted() {\n    // this.getGameshop();\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    if (loginInfo && loginInfo.id) {\n      this.loginInfo = loginInfo;\n      console.log(\"초기화된 this.loginInfo:\", this.loginInfo);\n    } else {\n      console.warn(\"로그인 정보가 없습니다.\");\n    }\n  },\n  computed: {\n    selectedBranchName() {\n      // shopOptions에서 selectedBranchId와 일치하는 매장 이름 찾기\n      const selectedShop = this.shopOptions.find(\n        (shop) => shop.id === this.selectedBranchId\n      );\n      return selectedShop ? selectedShop.name : ''; // 매칭된 매장 이름 반환\n    },\n  },\n  methods: {\n    async getGameshop() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        const response = await axios.get(\"http://13.124.62.68:3000/api/v1/branch/list\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.shopOptions = response.data.map((shop) => ({\n          id: shop.id,\n          name: shop.name,\n        }));\n      } catch (error) {\n        console.error(\"매장 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n\n      // 24.12.20 수정 - 추가\n      this.selectedFileName = file.name\n\n      // 24.12.20 수정 - 추가 : 미리보기 처리\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewImageUrl = e.target.result; // 미리보기 이미지 URL 설정\n      };\n      reader.readAsDataURL(file);\n\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      // const response = await taskStore.postTask(\n      //   \"v1/files/presigned-url\",\n      //   params\n      // );\n      const token = localStorage.getItem(\"Token\");\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*',\n          'Authorization': `Bearer ` + token\n        },\n      };\n      const response = await axios.post(\"http://13.124.62.68:3000/api/v1/files/presigned-url\", params, config);\n\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response.data.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n\n    async postContactDt() {\n      // 필수 입력 항목 체크\n      if (!this.title || !this.content || !this.selectedBranchId) {\n        alert(\"모든 필수 항목을 입력해주세요.\");\n        return;\n      }\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      const userId = loginInfo ? loginInfo.id : null;\n\n      if (!userId) {\n        alert(\"로그인 정보가 없습니다. 다시 로그인 해주세요.\");\n        return;\n      }\n\n      try {\n        // const params ={}\n        console.log(\"this.imageUr : : :\", this.selectedBranchName)\n\n        const params = this.imageUrl\n          ? {\n            title: this.title,\n            content: this.content,\n            branchId: parseInt(this.selectedBranchId),\n            branchName: this.selectedBranchName,\n            userId: parseInt(userId),\n            imageUrl: this.imageUrl, // 업로드된 이미지 URL\n            user_name: this.loginInfo.name,\n          }\n          : {\n            title: this.title,\n            content: this.content,\n            branchId: parseInt(this.selectedBranchId),\n            branchName: this.selectedBranchName,\n            userId: parseInt(userId),\n            user_name: this.loginInfo.name,\n          };\n\n\n        console.log(\"문의 등록 요청 데이터:\", params);\n        const token = localStorage.getItem(\"Token\");\n        const response = await axios.post(\n          \"http://13.124.62.68:3000/api/inquiries\",\n          params,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        alert(\"등록이 완료되었습니다.\");\n\n        // 24.11.25 수정 - 추가\n        // 폼 초기화\n        this.title = \"\";\n        this.content = \"\";\n        this.selectedBranchId = \"\";\n        this.selectedFileName = \"\";\n        this.imageUrl = \"\"; // 이미지 URL 초기화\n        this.file = null; // 파일도 초기화\n        // window.location.reload();\n        // this.$router.push({ path: \"/myprofile\" });\n        // 24.12.11 수정 - 추가\n        this.$router.push({\n          path: \"/myprofile\",\n          query: { tab: \"1:1 문의내역\" }\n        });\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n\n    cancel() {\n      this.$router.push({ path: \"/myprofile\" });\n    },\n  },\n};\n</script>\n\n\n<style scoped src=\"@/style/cs/contactwrite.css\"></style>\n"],"mappings":"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","ignoreList":[]}]}