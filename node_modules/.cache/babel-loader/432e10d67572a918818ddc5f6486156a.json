{"remainingRequest":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js!/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/MyProfile.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/MyProfile.vue","mtime":1733980280580},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js","mtime":1728542748260},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Header","RjZsWi","AccountDeletionModal","ReservationCancelModal","GameDetail","XFooter","axios","taskStore","EditProfile","EditSocialProfile","EditPassword","name","components","data","loginInfo","comments","contents","imageUrl","inquiryCurrentPage","reservationCurrentPage","selectedInquiry","itemsPerPage","RitemsPerPage","arrowLeftImage","arrowRightImage","tabs","inquiries","reservations","selectedTab","memberInfo","quickLoginStatus","isModalVisible","profile_image","isOpenReservationCancelModal","selectedReservationId","isOpenEditProfile","isOpenEditSocialProfile","isOpenEditPassword","basicProfileImg","reservationOption","inquiryOption","selectedShop","isOpenGameDetail","props","watch","$route.query.tab","newTab","newValue","mounted","JSON","parse","localStorage","getItem","console","log","$route","query","tab","getMyprofile","getMyContact","getReservationList","computed","sortedInquiries","paginatedItems","filter","inquiry","status","sort","a","b","time","localeCompare","Date","createdAt","filteredInquiries","sortedReservations","paginatedReservations","reservation","filteredReservations","filtered","computedStatus","commentList","some","comment","author","totalPages","Math","ceil","length","start","slice","ReservationstotalPages","methods","confrimEdit","window","location","reload","selectTab","patchMyprofileImage","params","profileImage","response","updateTask","alert","error","onFileChange","event","file","target","files","size","type","fileName","fileSize","mimeType","stringify","postTask","url","presignedUrl","undefined","URL","origin","pathname","put","headers","userId","Number","id","token","get","Authorization","userName","item","commentResponse","filteredComments","askId","map","postComments","now","koreaTime","getTime","toISOString","replace","content","category","views","freeBoardId","afterServiceId","String","commentText","updatedAt","getInquiryDetail","toggleEditComment","isEditing","updateComment","editedContent","comment_content","comment_id","deleteComments","commentId","deleteTask","formatDate","date","split","openAccountDeletionModal","closeModal","editmysocialprofile","closeEditSocialProfile","editmyprofile","closeEditProfile","toGoEditPassword","closeEditPassword","openContactDetail","$router","push","path","openRModal","reservationId","closeRModal","onReservationCanceled","nextReservationPage","prevReservationPage","goToReservationPage","page","nextInquiryPage","prevInquiryPage","toGoBoardList","selectInquiry","inquiryId","getSelectTasks","title","inquiry_title","inquiry_content","inquiry_createdAt","trim","comment_author","reservationsData","reservationData","managerid","reser_user","extractDate","startTime","join","endTime","people","member","branchData","getBranch","store","image","dateA","dateB","dateTime","formatTime","hours","getHours","padStart","minutes","getMinutes","managerId","mapImage","branchId","address","weekdayHours","weekendHours","storeScale","latitude","longitude","description","freeParking","telNumber","goToInquiryPage","statusColor","goBackToList","isReservationCancelable","currentDateTime","reservationDateTime","toGoBranch","find","res","closeGameDetail"],"sources":["src/components/MyProfile.vue"],"sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"myprofile-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" />\n      <div class=\"title valign-text-middle pretendard-bold-mine-shaft-38px\">\n        내정보\n      </div>\n      <div class=\"wrap\">\n        <div class=\"profile_tab pretendard-medium-granite-gray-18px\">\n          <div v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"selectTab(tab)\"\n            :class=\"['tab', { active: selectedTab === tab }]\">\n            {{ tab }}\n          </div>\n        </div>\n        <!-- 내정보 변경 Section -->\n        <div v-if=\"selectedTab === '내정보 변경'\" class=\"myinfo_wrap\">\n          <!-- Profile Section -->\n          <div class=\"profile-pic-container\">\n            <!-- Placeholder for user profile image -->\n            <div class=\"profile-pic\">\n              <!-- 24.11.26 수정 - 기본프로필 사진 변경 -->\n              <img :src=\"profile_image || basicProfileImg\" alt=\"User Profile\" />\n            </div>\n\n            <!-- Camera icon overlay -->\n            <label for=\"file-upload\" class=\"camera-icon\">\n              <img src=\"../../img/camera.png\" alt=\"Upload Icon\" />\n            </label>\n            <input type=\"file\" id=\"file-upload\" accept=\"image/*\" @change=\"onFileChange\" style=\"display: none\" />\n          </div>\n\n          <!-- 개인정보 Section -->\n          <div class=\"info-section\">\n            <div class=\"info_title\">\n              <!-- 24.12.04 수정 - font 변경 -->\n              <div class=\"pretendard-medium-black-24px personaltitle\">\n                개인정보\n              </div>\n              <div class=\"login_status\">\n                <div class=\"circle pretendard-medium-log-cabin-18px\" :class=\"{\n                  'naver-color': loginInfo.type === 'NAVER',\n                  'kakao-color': loginInfo.type === 'KAKAO',\n                }\"></div>\n                <!-- 24.12.05 수정 - 폰트 추가 -->\n                <span class=\"pretendard-regular-normal-granite-gray-18px\" v-if=\"loginInfo.type === 'NAVER'\">네이버\n                  로그인</span>\n                <span class=\"pretendard-regular-normal-granite-gray-18px\" v-else-if=\"loginInfo.type === 'KAKAO'\">카카오\n                  로그인</span>\n                <span class=\"pretendard-regular-normal-granite-gray-18px\" v-else>일반 로그인</span>\n              </div>\n              <!-- 24.11.15 수정 - 창 이동에서 모달 이동으로 변경 -->\n              <button class=\"persional-edit-button\" @click=\"editmysocialprofile()\">\n                개인정보 변경\n              </button>\n            </div>\n            <table class=\"info-table\">\n              <thead>\n                <tr class=\"pretendard-bold-mine-shaft-18px\" style=\"background-color: #f5f6f6\">\n                  <th>이름</th>\n                  <th>아이디</th>\n                  <th>생년월일</th>\n                  <th>성별</th>\n                  <th>등급</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"pretendard-light-granite-gray-18px\">\n                  <td>{{ loginInfo.name }}</td>\n                  <td>{{ loginInfo.phone }}</td>\n                  <td>{{ loginInfo.birthDay }}</td>\n                  <!-- 24.12.11 수정 - unknown 인 경우 '-' 출력 -->\n                  <td>{{ loginInfo.gender === \"MALE\" ? \"남자\" : loginInfo.gender === \"FEMALE\" ? \"여자\" : \"-\" }}</td>\n                  <td class=\"rank pretendard-medium-monza-18px\">\n                    {{ loginInfo.grade }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"info-warning pretendard-light-red-14px\">\n              ※ 실제 정보와 다르게 입력하는 경우 추후 대회 참가, 보상에 문제가\n              발생할 수 있습니다.\n            </p>\n          </div>\n\n          <!-- 회원정보 Section -->\n          <div class=\"member-info-section\">\n            <div class=\"member-info-title\">\n              <!-- 24.12.04 수정 - font 변경 -->\n              <div class=\"pretendard-medium-black-24px subtitle\">회원정보</div>\n              <!-- 24.11.15 수정 - 창 이동에서 모달 이동으로 변경 -->\n              <button class=\"persional-edit-button\" @click=\"editmyprofile()\">\n                회원정보 변경\n              </button>\n            </div>\n            <table class=\"member-info-table\">\n              <tbody>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">닉네임</td>\n                  <td class=\"pretendard-regular-normal-granite-gray-18px\">\n                    <!-- {{ loginInfo.username }} -->\n                    <!-- 24.11.26 수정 - 이름 나오게 수정 -->\n                    {{ loginInfo.userName }}\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">\n                    매장로그인 비밀번호\n                  </td>\n                  <td class=\"pretendard-regular-normal-granite-gray-18px\">\n                    {{ loginInfo.storeId }} (매장에서 로그인 시\n                    닉네임과 함께 사용하는 간편 비밀번호입니다.)\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">휴대폰 번호</td>\n                  <td class=\"pretendard-regular-normal-granite-gray-18px\">\n                    <!-- {{ loginInfo.phoneNm }} -->\n                    <!-- 24.11.26 수정 - 번호 나오게 수정 -->\n                    {{ loginInfo.phoneNm }}\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">이메일</td>\n                  <td class=\"pretendard-regular-normal-granite-gray-18px last-border\">\n                    {{ loginInfo.email }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- 비밀번호 변경 Section -->\n          <div class=\"password-change-section\">\n            <!-- 24.12.04 수정 - font 변경 -->\n            <div class=\"pretendard-medium-black-24px subtitle\">\n              비밀번호 변경\n            </div>\n            <table class=\"password-change-table\">\n              <tr>\n                <td class=\"pretendard-medium-black-18px\">비밀번호</td>\n                <td>\n                  <!-- 24.11.15 수정 - 모달로 변경 -->\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <button v-if=\"loginInfo.type === 'PHONE'\"\n                    class=\"password-change-button pretendard-medium-torea-bay-18px\" @click=\"toGoEditPassword()\">\n                    비밀번호 변경\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n\n          <!-- 간편로그인 Section -->\n          <div class=\"quick-login-section\">\n            <!-- 24.12.04 수정 - font 변경 -->\n            <div class=\"pretendard-medium-black-24px subtitle\">\n              간편로그인\n            </div>\n            <table class=\"quick-login-table\">\n              <tr>\n                <td class=\"pretendard-medium-black-18px\">간편 로그인</td>\n                <td>\n                  <div class=\"login-status\">\n                    <div class=\"link-button\">\n                      <div class=\"link-align\">\n                        <!-- 24.12.05 수정 - 색상 필터링 -->\n                        <div class=\"circle pretendard-medium-log-cabin-18px\" :class=\"{\n                          'naver-color': loginInfo.type === 'NAVER',\n                          'kakao-color': loginInfo.type === 'KAKAO',\n                        }\"></div>\n                        <!-- 24.12.05 수정 - 폰트 추가 -->\n                        <span class=\"pretendard-regular-normal-granite-gray-18px\">{{\n                          loginInfo.createdAt\n                            ? loginInfo.createdAt.split(\"T\")[0]\n                            : \"\"\n                        }}\n                          연동</span>\n                      </div>\n                    </div>\n                    <div class=\"social-button\">\n                      <!-- 24.12.05 수정 - 폰트 변경 -->\n                      <button v-if=\"loginInfo.type === 'NAVER'\"\n                        class=\"naver-button pretendard-regular-normal-white-14px\">\n                        네이버 연동\n                      </button>\n\n                      <!-- Kakao 로그인일 경우에만 표시 -->\n                      <!-- 24.12.05 수정 - 폰트 변경 -->\n                      <button v-if=\"loginInfo.type === 'KAKAO'\"\n                        class=\"kakao-button pretendard-regular-normal-log-cabin-14px\">\n                        카카오 연동\n                      </button>\n                      <div v-if=\"!['NAVER', 'KAKAO'].includes(loginInfo.type)\" class=\"no-login-type\"></div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </table>\n            <!-- 24.12.05 수정 - 폰트 변경 -->\n            <p class=\"logout-note pretendard-light-mountain-mist-18px\">\n              레저로 서비스를 그만 이용하시겠다면,\n              <!-- 24.12.05 수정 - 폰트 변경 -->\n              <span class=\"logout_button pretendard-medium-granite-gray-18px\"\n                @click=\"openAccountDeletionModal\">회원탈퇴</span>\n            </p>\n          </div>\n        </div>\n        <!-- <div v-if=\"selectedTab === '내정보 변경'\" class=\"myinfo_wrap\"> -->\n        <!-- Profile Section, 개인정보 Section, 회원정보 Section, 비밀번호 변경, 간편로그인 -->\n        <!-- Existing content for 내정보 변경 Section -->\n        <!-- </div> -->\n\n        <!-- 24.11.25 수정 - font 색상 수정 -->\n        <!-- 1:1 문의내역 Section -->\n        <div class=\"frame-7820\" v-else-if=\"selectedTab === '1:1 문의내역'\">\n          <!-- Inquiry List -->\n          <!-- 24.11.20 수정 -->\n          <div class=\"frame-7831\" v-if=\"!inquiries.length\">\n            <p class=\"no-data-message\">문의가 없습니다.</p>\n          </div>\n          <!-- 24.11.21 수정 -->\n          <div class=\"frame-7831\" v-if=\"inquiries.length && !selectedInquiry\">\n            <!-- 24.12.09 수정 - 추가 -->\n            <div class=\"select-box pretendard-regular-normal-mine-shaft-18px\">\n              <select v-model=\"inquiryOption\">\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"전체\" selected>전체</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"접수완료\">접수완료</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"답변완료\">답변완료</option>\n              </select>\n            </div>\n            <div>\n              <table class=\"inquiry-table pretendard-regular-granite-gray-18px\">\n                <thead>\n                  <tr class=\"inpuiry-header pretendard-bold-mine-shaft-18px\">\n                    <th>번호</th>\n                    <th>제목</th>\n                    <th>작성일</th>\n                    <th>상태</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <!-- 24.12.09 수정 - paginatedItems - sortedInquiries 로 변경 -->\n                  <tr v-for=\"(item, index) in sortedInquiries\" :key=\"item.id\" @click=\"selectInquiry(item)\">\n\n\n                    <td class=\"table-number pretendard-light-granite-gray-16px\">\n                      <!-- {{ index + 1 }} -->\n                      <!-- 24.11.25 수정 -->\n                      {{ inquiries.length - ((inquiryCurrentPage - 1) * itemsPerPage + index) }}\n                    </td>\n                    <td class=\"table-title pretendard-light-granite-gray-16px\">\n                      {{ item.title }}\n                    </td>\n                    <td class=\"table-date pretendard-light-granite-gray-16px\">\n                      {{ item.createdAt.split(\"T\")[0] }}\n                    </td>\n                    <td class=\"table_status_wrap\">\n                      <!-- 24.11.26 수정 -->\n                      <div :class=\"[\n                        'table-status',\n                        { completed: item.status === 'answer' },\n                      ]\" class=\"pretendard-semi-bold-log-cabin-14px\">\n                        <!-- {{ item.status }} -->\n                        <!-- {{ item.commentList && item.commentList.length > 0\n                          ? '답변완료'\n                          : item.status === 'waiting'\n                            ? '접수완료'\n                            : '상태 없음'\n                        }} -->\n                        {{ item.status === 'waiting'\n                          ? '접수완료'\n                          : '답변완료' }}\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <!-- <p v-if=\"!inquiries.length\" class=\"no-data-message\">문의가 없습니다.</p> -->\n              <div class=\"pagination-controls\">\n                <img class=\"pagination-arrow\" @click=\"prevInquiryPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                  :class=\"{ disabled: inquiryCurrentPage === 1 }\" />\n                <!-- 24.11.21 수정 -->\n                <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                  <div v-for=\"page in totalPages\" :key=\"page\" :class=\"[\n                    'page-number',\n                    { active: page === inquiryCurrentPage },\n                  ]\" @click=\"goToInquiryPage(page)\">\n                    {{ page }}\n                  </div>\n                </div>\n                <img class=\"pagination-arrow flipped\" @click=\"nextInquiryPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n                  :class=\"{ disabled: inquiryCurrentPage === totalPages }\" />\n              </div>\n            </div>\n          </div>\n\n          <!-- Inquiry Detail Section -->\n          <div v-if=\"selectedInquiry\" class=\"inquiry-detail-container\">\n            <div class=\"inquiry-header\">\n              <h2 class=\"inquiry-title pretendard-bold-log-cabin-30px\">\n                {{ selectedInquiry.title }}\n              </h2>\n              <div class=\"inquiry-meta pretendard-regular-normal-mountain-mist-20px\">\n                <span>{{ selectedInquiry.createdAt }}</span> |\n                <span>작성자: {{ selectedInquiry.author }}</span>\n                <!-- 24.11.26 수정 - 색 구분 -->\n                <button class=\" pretendard-semi-bold-monza-14px\" :class=\"['status-button',\n                  {\n                    waiting: computedStatus === '접수완료'\n                  }]\">\n                  {{ computedStatus }}\n                </button>\n              </div>\n            </div>\n            <div class=\"inquiry-content\">\n              <img :src=\"selectedInquiry.imageUrl\" />\n\n              <p class=\"pretendard-light-granite-gray-18px\">{{ selectedInquiry.content }}</p>\n            </div>\n            <div class=\"back\">\n              <button @click=\"goBackToList\" class=\"back-button pretendard-medium-white-18px\">\n                목록으로\n              </button>\n            </div>\n\n            <!-- Reply Section -->\n            <div class=\"reply-content\">\n              <div class=\"reply-write\">\n                <textarea placeholder=\"내용을 입력해 주세요\" class=\"reply-textarea\" v-model=\"contents\"></textarea>\n                <div class=\"reply-buttons\">\n                  <button class=\"cancel-button pretendard-regular-normal-white-18px\">\n                    취소\n                  </button>\n                  <button class=\"submit-button pretendard-regular-normal-white-18px\" @click=\"postComments\">\n                    입력\n                  </button>\n                </div>\n              </div>\n              <div class=\"reply-view\">\n                <div class=\"reply-count pretendard-bold-black-20px\">답변 {{ comments.length }}</div>\n                <hr class=\"divider\" />\n                <!-- 24.11.21 수정 - 추가 -->\n                <!-- 댓글이 있을 경우 -->\n                <div v-if=\"comments.length > 0\">\n                  <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\n                    <div class=\"comment-header\">\n                      <img class=\"comment-avatar\" :src=\"comment.avatar || (comment.profileImage || basicProfileImg)\"\n                        alt=\"User avatar\" />\n                      <span class=\"comment-author pretendard-medium-mine-shaft-20px\">{{\n                        comment.comment_author\n                        }}</span>\n                      <span class=\"comment-date pretendard-regular-normal-mine-shaft-18px\">\n                        {{\n                          comment.comment_createdAt\n                            ? comment.comment_createdAt.split(\"T\")[0]\n                            : \"날짜 없음\"\n                        }}\n                      </span>\n                    </div>\n                    <div class=\"comment-body pretendard-regular-normal-granite-gray-18px\">\n                      <div v-if=\"comment.isEditing\">\n                        <textarea type=\"text\" v-model=\"comment.editedContent\"\n                          class=\"comment-input pretendard-regular-normal-granite-gray-18px\" placeholder=\"댓글을 수정하세요\" />\n                      </div>\n                      <div v-else>\n                        {{ comment.comment_content || \"내용 없음\" }}\n                      </div>\n                    </div>\n                    <div v-if=\"comment.comment_userId === loginInfo.id\" class=\"comment-actions\">\n                      <button class=\"comment-edit-button pretendard-regular-normal-white-18px\"\n                        @click=\"toggleEditComment(comment)\">\n                        {{ comment.isEditing ? \"완료\" : \"수정\" }}\n                      </button>\n                      <button class=\"delete-button pretendard-regular-normal-white-18px\"\n                        @click=\"deleteComments(comment.comment_id)\">\n                        삭제\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <!-- 24.11.21 수정 - 추가 -->\n                <!-- 댓글이 없을 경우 -->\n                <div v-else>\n                  <p class=\"pretendard-regular-normal-granite-gray-18px\">등록된 댓글이 없습니다.</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Back Button -->\n          </div>\n        </div>\n\n\n        <!-- 예약 내역 탭 -->\n        <div class=\"frame-78201\" v-else-if=\"selectedTab === '예약내역'\">\n          <!-- 24.12.09 수정 - 추가 -->\n          <div class=\"select-box pretendard-regular-normal-mine-shaft-18px\">\n            <select v-model=\"reservationOption\">\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"전체\" selected>전체</option>\n              <!-- 24.12.11 수정 - 대기중 - 접수중 으로 변경 -->\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"접수중\">접수중</option>\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"예약완료\">예약완료</option>\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"예약취소\">예약취소</option>\n            </select>\n          </div>\n          <p v-if=\"!reservations.length\" class=\"no-data-message\">예약내역이 없습니다.</p>\n          <!-- 24.12.09 수정 - paginatedReservations - sortedReservations 로 변경 -->\n          <div v-for=\"reservation in sortedReservations\" :key=\"reservation.id\" class=\"frame-777\">\n            <div class=\"frame-7925\">\n              <!-- <div class=\"frame-7301\" @click=\"toGoReservation(reservation.id)\"> -->\n              <!-- 24.12.12 수정 - 예약 페이지 - 상세모달로 변경 -->\n              <div class=\"frame-7301\" @click=\"toGoBranch(reservation.id)\">\n                <img class=\"frame-7298\" :src=\"reservation.image\" alt=\"예약 이미지\" />\n              </div>\n              <div class=\"frame-7923\">\n                <!-- <div class=\"frame-7922\" @click=\"toGoReservation(reservation.id)\"> -->\n                <!-- 24.12.12 수정 - 예약 페이지 - 상세모달로 변경 -->\n                <div class=\"frame-7922\" @click=\"toGoBranch(reservation.id)\">\n                  <div class=\"frame-7308\">\n                    <div class=\"frame-7917\">\n                      <div class=\"group-33601\">\n                        <img v-if=\"reservation.status === 'waiting'\" class=\"noniconsloading-16 group-33600\"\n                          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/nonicons-loading-16.svg\"\n                          alt=\"접수중 아이콘\" />\n                        <img v-else-if=\"reservation.status === 'confirm'\" class=\"lets-iconscheck-fill\"\n                          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/lets-icons-check-fill.svg\"\n                          alt=\"예약완료 아이콘\" />\n                        <img v-else-if=\"reservation.status === 'cancel'\" class=\"vector\"\n                          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/vector-2.svg\"\n                          alt=\"예약취소 아이콘\" />\n                      </div>\n                      <!-- 24.12.11 수정 - 폰트 추가 -->\n                      <div class=\"text-16 valign-text-middle pretendard-bold-monza-16px\"\n                        :class=\"statusColor(reservation.status)\">\n                        <!-- 24.12.11 수정 - 대기중 - 접수중 으로 변경 -->\n                        <span v-if=\"reservation.status === 'waiting'\"\n                          :class=\"statusColor(reservation.status)\">접수중</span>\n                        <span v-else-if=\"reservation.status === 'confirm'\"\n                          :class=\"statusColor(reservation.status)\">예약완료</span>\n                        <span v-else-if=\"reservation.status === 'cancel'\"\n                          :class=\"statusColor(reservation.status)\">예약취소</span>\n                        <span v-else>{{ reservation.status }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"frame-7921\">\n                    <div class=\"frame-7303\">\n                      <div class=\"text reservationtext valign-text-middle pretendard-bold-mine-shaft-24px\">\n                        {{ reservation.store }}\n                      </div>\n                    </div>\n                    <div class=\"frame-7920\">\n                      <div class=\"frame-7918 pretendard-semi-bold-black-16px\">\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약자</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            {{ reservation.name }}\n                          </div>\n                        </div>\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약 시간</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            {{ reservation.time }}\n                          </div>\n                        </div>\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약 시간</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            <!-- {{ reservation.time }} -->\n                            <!-- 24.12.12 수정 -->\n                            {{ reservation.date + ` ` + `[` + reservation.time + `]` }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"frame-7926\">\n                  <!-- 24.12.12 수정 - article - button 수정정 -->\n                  <button v-if=\"isReservationCancelable(reservation)\"\n                    class=\"frame-7923-3 pretendard-regular-normal-white-18px\" @click=\"openRModal(reservation.id)\">\n                    예약취소\n                  </button>\n                  <!-- <article v-if=\"isReservationCancelable(reservation)\" class=\"frame-7923-3\"\n                    style=\"background-color: #ccc\" @click=\"openRModal(reservation.id)\">\n                    <div class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\">\n                      예약취소\n                    </div>\n                  </article> -->\n                  <!-- <article class=\"frame-7923-3\">\n                    <div\n                      class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\"\n                    >\n                      매장보기\n                    </div>\n                  </article> -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"pagination-controls\" v-if=\"reservations.length\">\n            <img class=\"pagination-arrow\" @click=\"prevReservationPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n              :class=\"{ disabled: reservationCurrentPage === 1 }\" />\n            <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n              <div v-for=\"page in ReservationstotalPages\" :key=\"page\" :class=\"[\n                'page-number',\n                { active: page === reservationCurrentPage },\n              ]\" @click=\"goToReservationPage(page)\">\n                {{ page }}\n              </div>\n            </div>\n            <img class=\"pagination-arrow flipped\" @click=\"nextReservationPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n              :class=\"{\n                disabled: reservationCurrentPage === ReservationstotalPages,\n              }\" />\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditProfile v-if=\"isOpenEditProfile\" @close=\"closeEditProfile\" :loginInfo=\"loginInfo\" @confirm=\"confrimEdit\" />\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditSocialProfile v-if=\"isOpenEditSocialProfile\" :loginInfo=\"loginInfo\" @close=\"closeEditSocialProfile\"\n      @confirm=\"confrimEdit\" />\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditPassword v-if=\"isOpenEditPassword\" @close=\"closeEditPassword\" :phone=\"loginInfo.phone\" />\n    <ReservationCancelModal v-if=\"isOpenReservationCancelModal\" @closeRModal=\"closeRModal\"\n      @reservationCanceled=\"onReservationCanceled\" :reservationId=\"selectedReservationId\" />\n    <AccountDeletionModal v-if=\"isModalVisible\" @close=\"closeModal\" :idx=\"loginInfo.id\" />\n    <!-- 24.12.11 수정 - 추가 -->\n    <GameDetail v-if=\"isOpenGameDetail && selectedShop\" :shop=\"selectedShop\" @close=\"closeGameDetail\" />\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport AccountDeletionModal from \"./AccountDeletionModal.vue\";\nimport ReservationCancelModal from \"./ReservationCancelModal\";\nimport GameDetail from \"./GameDetail\"; // 24.12.12 수정 - 추가\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\nimport { taskStore } from \"@/store/taskStore\"; // API 호출\nimport EditProfile from \"./EditProfile.vue\"; //24.11.15 수정 - 추가\nimport EditSocialProfile from \"./EditSocialProfile.vue\";//24.11.15 수정 - 추가\nimport EditPassword from \"./EditPassword.vue\";//24.11.15 수정 - 추가\nexport default {\n  name: \"MyProfile\",\n  components: {\n    Header,\n    RjZsWi,\n    EditProfile,//24.11.15 수정 - 추가\n    EditSocialProfile,//24.11.15 수정 - 추가\n    EditPassword, //24.11.15 수정 - 추가\n    AccountDeletionModal,\n    ReservationCancelModal,\n    GameDetail, // 24.12.12 수정 - 추가\n    XFooter,\n  },\n  data() {\n    return {\n      loginInfo: {},\n      comments: [],\n      contents: \"\",\n      imageUrl: \"\",\n      inquiryCurrentPage: 1, // 1:1 문의내역의 현재 페이지\n      reservationCurrentPage: 1,\n      selectedInquiry: null,\n      itemsPerPage: 5,\n      RitemsPerPage: 3,\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      tabs: [\"내정보 변경\", \"1:1 문의내역\", \"예약내역\"],\n      inquiries: [],\n      reservations: [],\n      selectedTab: \"내정보 변경\",\n      memberInfo: {},\n      quickLoginStatus: {},\n      isModalVisible: false,\n      profile_image: \"\",\n      isOpenReservationCancelModal: false,\n      selectedReservationId: null,\n      isOpenEditProfile: false,//24.11.15 수정 - 추가\n      isOpenEditSocialProfile: false, //24.11.15 수정 - 추가\n      isOpenEditPassword: false, //24.11.15 수정 - 추가\n      basicProfileImg: 'https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-736@2x.png', // 24.11.26 수정 - 추가\n      reservationOption: \"전체\",// 24.12.09 수정 - 추가 : 예약내역 select 박스\n      inquiryOption: \"전체\",// 24.12.09 수정 - 추가 : 문의내역 select 박스\n      selectedShop: null, // 24.12.12 수정 - 추가 : 예약내역 매장 상세페이지 이동\n      isOpenGameDetail: false, // 24.12.12 수정 - 추가 : 예약내역 매장 상세페이지 모달 \n    };\n  },\n  props: [\"rJZsWIProps\"],\n  watch: {\n    \"$route.query.tab\"(newTab) {\n      this.selectedTab = newTab || \"내정보 변경\"; // 기본 탭은 '내정보 변경'\n    },\n    // 24.12.09 수정 - 추가\n    reservationOption(newValue) {\n      // 옵션이 변경될 때 페이지를 1로 초기화\n      this.reservationCurrentPage = 1;\n    },\n    // 24.12.09 수정 - 추가\n    inquiryOption() {\n      // 옵션이 변경될 때 페이지를 1로 초기화\n      this.inquiryCurrentPage = 1;\n    }\n  },\n  mounted() {\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n    this.loginInfo = loginInfo || {};\n    console.log(\"초기화된 this.loginInfo:\", this.loginInfo);\n\n    // 쿼리 파라미터 'tab'을 확인하여 기본 탭을 설정\n    if (this.$route.query.tab) {\n      this.selectedTab = this.$route.query.tab;\n    }\n    this.getMyprofile();\n    this.getMyContact();\n    this.getReservationList();\n  },\n  computed: {\n    // 24.12.09 수정 - 추가\n    sortedInquiries() {\n      if (this.inquiryOption === '전체') {\n        return this.paginatedItems;\n      } else if (this.inquiryOption === '접수완료') {\n        return this.paginatedItems\n          .filter(inquiry => inquiry.status === \"waiting\")\n          .sort((a, b) => {\n            // undefined 검사\n            if (!a.time || !b.time) return 0; // 유효하지 않은 경우 정렬하지 않음\n            return a.time.localeCompare(b.time); // 시간 순으로 정렬\n          });\n      } else if (this.inquiryOption === '답변완료') {\n        return this.paginatedItems\n          .filter(inquiry => inquiry.status === 'answer')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else {\n        return this.paginatedItems;\n      }\n    },\n    // 24.12.09 수정 - 추가\n    filteredInquiries() {\n      if (this.inquiryOption === \"전체\") {\n        return this.inquiries;\n      } else if (this.inquiryOption === \"접수완료\") {\n        return this.inquiries.filter(inquiry => inquiry.status === \"waiting\");\n      } else if (this.inquiryOption === \"답변완료\") {\n        return this.inquiries.filter(inquiry => inquiry.status === \"answer\");\n      }\n      return this.inquiries;\n    },\n    // 24.12.09 수정 - 추가\n    sortedReservations() {\n      if (this.reservationOption === '전체') {\n        return this.paginatedReservations;\n      }\n      // 24.12.11 수정 - 대기중 - 접수중 으로 변경\n      else if (this.reservationOption === '접수중') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'waiting')\n          .sort((a, b) => a.time.localeCompare(b.time)); // 시간 순으로 정렬\n      } else if (this.reservationOption === '예약완료') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'confirm')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else if (this.reservationOption === '예약취소') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'cancel')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else {\n        return this.paginatedReservations;\n      }\n    },\n    // 24.12.09 수정 - 추가\n    filteredReservations() {\n      let filtered = [];\n      if (this.reservationOption === '전체') {\n        filtered = this.reservations;\n      }\n      // 24.12.11 수정 - 대기중 - 접수중 으로 변경\n      else if (this.reservationOption === '접수중') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'waiting');\n      } else if (this.reservationOption === '예약완료') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'confirm');\n      } else if (this.reservationOption === '예약취소') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'cancel');\n      } else {\n        filtered = this.reservations;\n      }\n      return filtered;\n    },\n    computedStatus() {\n      // commentList가 1개 이상이면 \"답변완료\"로 상태를 변경\n      // 24.11.25 수정\n      // if (this.comments.length > 0) {\n      //   return \"답변완료\";\n      // }\n      // 24.11.26 수정\n      if (this.selectedInquiry.commentList.some(comment => comment.author === \"관리자\")) {\n        return \"답변완료\";\n      }\n      return this.selectedInquiry.status || \"접수완료\";\n    },\n    // 24.12.09 수정 -  inquiries - filteredInquiries 로 변경\n    totalPages() {\n      return Math.ceil(this.filteredInquiries.length / this.itemsPerPage);\n    },\n    // 24.12.09 수정 -  inquiries - filteredInquiries 로 변경\n    paginatedItems() {\n      const start = (this.inquiryCurrentPage - 1) * this.itemsPerPage;\n      return this.filteredInquiries.slice(start, start + this.itemsPerPage);\n    },\n    // 24.12.09 수정 -  reservations - filteredReservations 로 변경\n    ReservationstotalPages() {\n      return Math.ceil(this.filteredReservations.length / this.RitemsPerPage);\n    },\n    // 24.12.09 수정 -  reservations - filteredReservations 로 변경\n    paginatedReservations() {\n      const start = (this.reservationCurrentPage - 1) * this.RitemsPerPage;\n      return this.filteredReservations.slice(start, start + this.RitemsPerPage);\n    },\n  },\n  methods: {\n    //패스워드 일치 여부\n    //  async chekPw(password){\n\n    //     // v1/auth/me/password/gooara123\n    //     const response = await taskStore.getSelectTasks(\n    //         `v1/auth/me/password//${password}`\n    //       );\n    //       console.log(\"가져온 문의 상세 정보:\", response);\n    //   },\n    confrimEdit() {\n      window.location.reload(true);\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.selectedInquiry = null;\n    },\n    async patchMyprofileImage() {\n      try {\n        console.log(\"this.imageUrl: : : : \", this.imageUrl);\n        const params = {\n          profileImage: this.imageUrl, // 서버에 저장할 필드명 'profileImage'로 전송\n        };\n        // 서버에 프로필 이미지 업데이트 요청\n        const response = taskStore.updateTask(\n          \"v1/auth/me/profile-image\",\n          params\n        );\n        alert(\"프로필 이미지가 성공적으로 업데이트되었습니다!\");\n        this.getMyprofile();\n      } catch (error) {\n        console.error(\"프로필 이미지 업데이트 실패:\", error);\n        alert(\"프로필 이미지 업데이트에 실패했습니다.\");\n      }\n    },\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"token\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await taskStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + response);\n\n      const url = response[0].presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      if (url === undefined || url === null) {\n        alert('다시 시도해주세요.')\n        window.location.reload();\n      }\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n        this.patchMyprofileImage();\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    async getMyContact() {\n      try {\n        const userId = Number(this.loginInfo.id);\n        const token = localStorage.getItem(\"Token\");\n        // if (!token) {\n        //   alert(\"로그인이 필요합니다.\");\n        //   return;\n        // }\n\n        const response = await axios.get(\n          `http://13.124.62.68:3000/api/inquiries/userId/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        console.log(\"전체 response 객체:\", response);\n        console.log(\"문의 내역\", response.data);\n\n        const inquiries = response.data;\n\n        // 24.11.21 수정 - 추가\n        const userName = this.loginInfo.name;\n        console.log('userName', userName)\n\n\n        const filteredInquiries = inquiries.filter((item) => {\n          return item.userId === userId;\n        });\n\n        // 24.11.25 수정 - 추가\n        // 각 문의에 댓글 목록을 결합하기\n        for (let item of filteredInquiries) {\n          try {\n            // 전체 댓글 목록 불러오기\n            const commentResponse = await axios.get(\n              `http://13.124.62.68:3000/api/comments`,\n              {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n\n            // 댓글 목록에서 현재 item.id와 일치하는 댓글만 필터링\n            const filteredComments = commentResponse.data.filter(comment => comment.askId === item.id);\n\n            // console.log('commentList : :: ' , JSON.stringify(commentResponse))\n            // 24.11.27 수정\n            // 필터링된 댓글 목록에 profileImage 추가\n            item.commentList = filteredComments.map((comment) => ({\n              ...comment,\n              // profileImage: comment.user?.profileImage || null, // user에서 profileImage 가져오기\n            }));\n\n            // console.log(\"item.commentList  : : \" ,item.commentList )\n\n            // 24.11.26 수정 - 추가\n            // 상태 처리: 'waiting'이면 '접수완료', 'answer'이면 '답변완료'\n            item.status = item.status;\n\n          } catch (error) {\n            console.error(\"댓글 데이터를 가져오는 중 오류 발생:\", error);\n          }\n        }\n\n        this.inquiries = filteredInquiries.map((item) => ({\n          ...item,\n          // 24.11.21 수정 - 추가\n          name: userName,\n        }));\n      } catch (error) {\n        console.error(\"문의 데이터를 가져오는 중 오류 발생:\", error);\n        // alert(\"데이터를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    async postComments() {\n      try {\n        const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n        const author = loginInfo.name;\n        const userId = loginInfo.id;\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const createdAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n        // POST 요청으로 데이터를 서버에 전송\n        console.log('author 123', author)\n        const params = {\n          // title: this.title,\n          content: this.contents,\n          author: author,\n          userId: userId,\n          category: \"문의하기\",\n          views: 0,\n          freeBoardId: \"1\",\n          afterServiceId: \"1\",\n          askId: String(this.selectedInquiry.id),\n          createdAt: createdAt,\n          commentText: \"0\",\n          updatedAt: createdAt,\n        };\n        console.log(\"보내는 데이터:\", JSON.stringify(params, null, 2));\n\n        const response = await taskStore.postTask(\"comments\", params);\n\n        console.log(\"등록 성공:\");\n        alert(\"등록이 되었습니다\");\n        await this.getInquiryDetail(this.selectedInquiry.id);\n        this.contents = \"\"; // 입력한 댓글 초기화\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n    toggleEditComment(comment) {\n      if (comment.isEditing) {\n        // 수정 모드에서 완료를 누르면 `updateComment` 호출\n        this.updateComment(comment);\n      } else {\n        // 수정 모드로 전환할 때 기존 댓글 내용을 `editedContent`에 복사\n        comment.editedContent = comment.comment_content;\n      }\n      comment.isEditing = !comment.isEditing;\n    },\n    async updateComment(comment) {\n      try {\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const updatedAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n\n        const params = {\n          content: comment.editedContent,\n          updatedAt: updatedAt,\n        };\n\n        // 서버에 업데이트 요청\n        const response = await taskStore.updateTask(\n          `comments/${comment.comment_id}`,\n          params\n        );\n        console.log(\"댓글 수정 응답:\", response);\n\n        // if (response.success) {\n        //   alert(\"댓글이 수정되었습니다.\");\n        //   comment.comment_content = comment.editedContent; // 수정된 내용 반영\n        //   comment.isEditing = false; // 수정 모드 종료\n        // } else {\n        //   alert(\"댓글 수정에 실패했습니다.\");\n        // }\n        // await this.getContactDt();\n        //  24.11.21 수정\n        await this.getInquiryDetail(this.selectedInquiry.id);\n      } catch (error) {\n        console.error(\"댓글 수정 중 오류 발생:\", error);\n        alert(\"댓글 수정 중 오류가 발생했습니다.\");\n      }\n    },\n    async deleteComments(commentId) {\n      try {\n        // 특정 댓글을 삭제\n        // const response = await adminStore.deleteTask(`comments/${commentId}`);\n        const response = await taskStore.deleteTask(`comments/${commentId}`);\n        console.log(\"댓글 삭제 응답:\", response);\n\n        // 삭제 후 댓글 목록을 갱신\n        alert(\"댓글이 삭제되었습니다.\");\n        // await this.getContactDt();\n        // 24.11.21 수정\n        await this.getInquiryDetail(this.selectedInquiry.id);\n        // window.location.reload();\n      } catch (error) {\n        console.error(\"댓글 삭제 중 오류 발생:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    async getMyprofile() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        if (!token) {\n          alert(\"로그인이 필요합니다.\");\n          return;\n        }\n\n        // API 요청 보내기\n        const response = await axios.get(\n          \"http://13.124.62.68:3000/api/v1/auth/me\",\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        // 응답 데이터에서 필요한 정보 추출\n        const data = response.data;\n        if (data) {\n          this.loginInfo = data; // 사용자 정보 저장\n          this.profile_image =\n            // 24.11.26 수정 - 기본 프로필 사진 변경\n            data.profileImage || this.basicProfileImg; // 프로필 이미지 설정\n        } else {\n          console.log(\"프로필 정보를 가져오지 못했습니다.\");\n        }\n      } catch (error) {\n        console.error(\"프로필 정보 가져오기 실패:\", error);\n        alert(\"프로필 데이터를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    formatDate(date) {\n      if (!date) return \"\";\n      return date.split(\"T\")[0]; // 날짜만 가져오기\n    },\n    openAccountDeletionModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    // 24.11.15 수정 - 모달로 수정\n    editmysocialprofile() {\n      // loginInfo에서 id 값을 가져와 쿼리로 전달\n      this.isOpenEditSocialProfile = true;\n\n      // const userId = this.loginInfo.id;\n      // if (userId) {\n      //   this.$router.push({\n      //     path: \"/editsocialprofile\",\n      //     query: { id: userId },\n      //   });\n      //   this.isOpenEditSocialProfile = true;\n      // } else {\n      //   alert(\"로그인 정보가 없습니다. 다시 시도해 주세요.\");\n      // }\n    },\n    // 24.11.15 수정 - 추가\n    closeEditSocialProfile() {\n      this.isOpenEditSocialProfile = false;\n    },\n    // 24.11.15 수정 - 모달로 수정\n    editmyprofile() {\n      // const userId = this.loginInfo.id;\n      // if (userId) {\n      //   this.$router.push({\n      //     path: \"/editprofile\",\n      //     query: { id: userId },\n      //   });\n      this.isOpenEditProfile = true;\n      // }\n    },\n    // 24.11.15 수정 - 추가\n    closeEditProfile() {\n      this.isOpenEditProfile = false;\n    },\n    //24.11.15 수정 - 모달로 수정\n    toGoEditPassword() {\n      // this.$router.push({ path: \"/editpassword\" });\n      this.isOpenEditPassword = true;\n    },\n    //24.11.15 수정 - 추가\n    closeEditPassword() {\n      this.isOpenEditPassword = false;\n    },\n    openContactDetail() {\n      this.$router.push({ path: \"/mycontact-detail\" });\n    },\n    openRModal(reservationId) {\n      this.isOpenReservationCancelModal = true;\n      this.selectedReservationId = reservationId;\n    },\n    closeRModal() {\n      this.isOpenReservationCancelModal = false;\n      this.selectedReservationId = null;\n    },\n    onReservationCanceled() {\n      this.getReservationList(); // 예약 목록 갱신\n    },\n    nextReservationPage() {\n      if (this.reservationCurrentPage < this.ReservationstotalPages) {\n        this.reservationCurrentPage++;\n      }\n    },\n    prevReservationPage() {\n      if (this.reservationCurrentPage > 1) {\n        this.reservationCurrentPage--;\n      }\n    },\n    goToReservationPage(page) {\n      this.reservationCurrentPage = page;\n    },\n    nextInquiryPage() {\n      if (this.inquiryCurrentPage < this.totalPages) {\n        this.inquiryCurrentPage++;\n      }\n    },\n    prevInquiryPage() {\n      if (this.inquiryCurrentPage > 1) {\n        this.inquiryCurrentPage--;\n      }\n    },\n    toGoBoardList() {\n      this.$router.push({ path: \"/board-list\" });\n    },\n    async selectInquiry(inquiry) {\n      this.selectedInquiry = inquiry; // 선택된 문의 저장\n      console.log(\"선택된 문의 ID:\", inquiry.id);\n\n      // 선택된 문의의 ID를 이용해 상세 정보를 가져옴\n      await this.getInquiryDetail(inquiry.id);\n    },\n    async getInquiryDetail(inquiryId) {\n      try {\n        // API 호출을 통해 특정 문의의 상세 정보를 가져옴\n        const response = await taskStore.getSelectTasks(\n          `inquiries/${inquiryId}`\n        );\n        console.log(\"가져온 문의 상세 정보:\", response);\n\n        // 가져온 데이터를 selectedInquiry에 저장\n        if (response) {\n          this.selectedInquiry = {\n            ...this.selectedInquiry,\n            title: response[0].inquiry_title,\n            content: response[0].inquiry_content,\n            // author: response[0].inquiry_user_name,\n            // 24.11.21 수정\n            author: this.loginInfo.name,\n            createdAt: response[0].inquiry_createdAt.split(\"T\")[0],\n            status: response[0].status,\n          };\n\n          // this.comments = response[0].commentList || [];\n          // this.comments = this.comments.map((comment) => ({\n          //   ...comment,\n          //   isEditing: false,\n          //   editedContent: comment.comment_content,\n          // }));\n\n          console.log('res 123', response)\n          // 24.11.21 수정\n          this.comments = (response[0].commentList || []).filter(\n            (comment) =>\n              comment.comment_content !== null &&\n              comment.comment_content.trim() !== \"\" &&\n              comment.comment_author !== null\n          ).map((comment) => ({\n            ...comment,\n            isEditing: false,\n            // 24.11.27 수정\n            profileImage: comment.profileImage || this.basicProfileImg, // user에서 profileImage 가져오기\n            editedContent: comment.comment_content,\n          }));\n\n          // console.log(\"this.selectedInquiry:\", this.selectedInquiry);\n          // console.log(\"this.selectedInquiry.profileImage\", this.selectedInquiry.commentList[0].profileImage);\n          // console.log(\"comment.profileImage\", this.comments[0].profileImage)\n          // console.log(\"this.comments 123:\", this.comments);\n        } else {\n          console.error(\"문의 상세 정보를 가져올 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"문의 상세 정보 가져오기 실패:\", error);\n      }\n    },\n    async getReservationList() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        const userId = Number(this.loginInfo.id);\n        if (!token || !userId) {\n          console.error(\"토큰 또는 사용자 ID가 없습니다.\");\n          return;\n        }\n\n        const response = await axios.get(\n          `http://13.124.62.68:3000/api/reservations/user/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        // 응답 데이터 확인\n        console.log(\"예약예약예약예약예약예약\", response);\n        console.log(\"예약예약\", response.data);\n\n        const reservationsData = response.data;\n\n        // 예약 내역이 존재할 경우\n        if (reservationsData && reservationsData.length > 0) {\n          const reservations = [];\n\n          for (const item of reservationsData) {\n            // 각 item 내의 모든 reservations를 반복 처리\n            if (item.reservations && item.reservations.length > 0) {\n              for (const reservation of item.reservations) {\n                // 예약 정보 추출\n                const reservationData = {\n                  id: reservation.id,\n                  managerid: reservation.managerid,\n                  name: reservation.reser_user || \"Unknown\",\n                  date: this.extractDate(reservation.startTime),\n                  // time: `${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')} [${this.extractDate(reservation.startTime)}]`,\n                  // 24.12.11 수정 - 추가\n                  // time: `${this.extractDate(reservation.startTime)} [${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')}] `,\n                  time: `${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')}`,\n                  people: reservation.member || \"1\",\n                  status: reservation.status || \"Unknown\",\n                };\n\n                // 지점 정보 가져오기\n                const branchData = await this.getBranch(reservation.managerid);\n                if (branchData) {\n                  reservationData.store = branchData.store;\n                  reservationData.image = branchData.image;\n                }\n\n                // reservations 배열에 추가\n                reservations.push(reservationData);\n              }\n            }\n          }\n          reservations.sort((a, b) => {\n            const dateA = new Date(`${a.date}T${a.time.split(' ~ ')[0]}`);\n            const dateB = new Date(`${b.date}T${b.time.split(' ~ ')[0]}`);\n            return dateB - dateA; // 최신 시간부터 정렬\n          });\n          // 결합된 데이터를 reservations 배열에 저장\n          this.reservations = reservations;\n          console.log(\"최종 예약 목록:\", this.reservations);\n        } else {\n          console.log(\"예약 내역이 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"예약 내역 가져오기 실패:\", error);\n        alert(\"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n      }\n    },\n\n    extractDate(dateTime) {\n      if (!dateTime) return \"\";\n      return dateTime.split(\"T\")[0]; // 'YYYY-MM-DD' 형식으로 반환\n    },\n    // 시간 부분만 추출하여 'HH:mm' 형식으로 변환\n    formatTime(dateTime) {\n      if (!dateTime) return \"\";\n      const date = new Date(dateTime);\n      const hours = String(date.getHours()).padStart(2, \"0\");\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    },\n    async getBranch(managerId) {\n      try {\n        const token = localStorage.getItem(\"Token\");\n\n        const response = await axios.get(\n          `http://13.124.62.68:3000/api/v1/branch/managerId/${managerId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const branchData = response.data;\n        console.log(\"branchData\", branchData)\n\n        // 데이터가 있는지 확인 후 반환\n        if (branchData) {\n          return {\n            store: branchData.name,\n            image:\n              branchData.mapImage,\n            branchId: branchData.branchId,\n            address: branchData.address,\n            weekdayHours: branchData.weekdayHours,\n            weekendHours: branchData.weekendHours,\n            managerid: branchData.managerid,\n            storeScale: branchData.storeScale,\n            location: {\n              latitude: branchData.latitude,\n              longitude: branchData.longitude\n            },\n            // 24.12.12 수정 - 추가\n            description: branchData.description,\n            freeParking: branchData.freeParking,\n            telNumber: branchData.telNumber\n          };\n        } else {\n          console.log(\"지점 정보가 없습니다.\");\n          return null;\n        }\n      } catch (error) {\n        console.error(\"지점 정보 가져오기 실패:\", error);\n        return null;\n      }\n    },\n    goToInquiryPage(page) {\n      this.inquiryCurrentPage = page;\n    },\n    statusColor(status) {\n      switch (status) {\n        case \"waiting\":\n          return \"text-waiting\"; // 대기중 색상 클래스\n        case \"confirm\":\n          return \"text-confirm\"; // 예약완료 색상 클래스\n        case \"cancel\":\n          return \"text-cancel\"; // 예약취소 색상 클래스\n        default:\n          return \"text-default\"; // 기본 색상 클래스\n      }\n    },\n\n    goBackToList() {\n      this.selectedInquiry = null; // Return to the inquiry list\n    },\n    // async toGoReservation(reservationId) {\n    //   try {\n    //     // 예약 ID로 예약 데이터를 찾기\n    //     const reservation = this.reservations.find(res => res.id === reservationId);\n\n    //     const managerId = reservation.managerid; // reservation에서 managerid 추출\n\n    //     // managerId로 지점 데이터 가져오기\n    //     const branchData = await this.getBranch(managerId);\n\n    //     if (branchData) {\n    //       this.$router.push({\n    //         name: \"reservation-write\",\n    //         params: {\n    //           name: branchData.store,\n    //           branchId: branchData.branchId,\n    //           address: branchData.address,\n    //           weekdayHours: branchData.weekdayHours || \"\",\n    //           weekendHours: branchData.weekendHours || \"\",\n    //           mapImage: branchData.image || \"\",\n    //           managerid: managerId,\n    //           storeScale: branchData.storeScale || \"\",\n    //           latitude: branchData.location.latitude || \"\",\n    //           longitude: branchData.location.longitude || \"\",\n    //         },\n    //       });\n    //     } else {\n    //       console.error(\"지점 데이터가 없습니다.\");\n    //       alert(\"지점 정보를 가져오는 데 실패했습니다.\");\n    //     }\n    //   } catch (error) {\n    //     console.error(\"예약 상세 정보를 가져오는 중 오류 발생:\", error);\n    //     alert(\"예약 상세 정보를 가져오는 중 문제가 발생했습니다.\");\n    //   }\n    // },\n    isReservationCancelable(reservation) {\n      const currentDateTime = new Date(); // 현재 날짜와 시간\n      const reservationDateTime = new Date(`${reservation.date}T${reservation.time.split(' ~ ')[0]}`); // 예약 시작 시간\n\n      // 예약 상태가 'cancel'이 아니고, 예약 시간이 현재보다 이후인 경우에만 true\n      return reservation.status !== 'cancel' && currentDateTime < reservationDateTime;\n    },\n    // 24.12.12 수정 - 추가\n    async toGoBranch(reservationId) {\n      try {\n        // 예약 ID로 예약 데이터를 찾기\n        const reservation = this.reservations.find(res => res.id === reservationId);\n\n        const managerId = reservation.managerid; // reservation에서 managerid 추출\n\n        // managerId로 지점 데이터 가져오기\n        const branchData = await this.getBranch(managerId);\n        console.log('branchData1', branchData)\n\n        // 필요한 데이터 가공\n        this.selectedShop = {\n          name: branchData.store,\n          branchId: branchData.branchId,\n          address: branchData.address,\n          freeParking: branchData.freeParking || \"\",\n          description: branchData.description || \"\",\n          telNumber: branchData.telNumber || \"\",\n          weekdayHours: branchData.weekdayHours || \"\",\n          weekendHours: branchData.weekendHours || \"\",\n          mapImage: branchData.image || \"\",\n          managerid: managerId,\n          storeScale: branchData.storeScale || \"\",\n          latitude: branchData.location.latitude || \"\",\n          longitude: branchData.location.longitude || \"\",\n        },\n\n          this.isOpenGameDetail = true;\n\n        console.log(\"Updated selectedShop:\", JSON.stringify(this.selectedShop));\n      } catch (error) {\n        console.error(\"예약 상세 정보를 가져오는 중 오류 발생:\", error);\n        alert(\"예약 상세 정보를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    // 24.12.12 수정 - 추가\n    closeGameDetail() {\n      this.isOpenGameDetail = false;\n      this.selectedShop = null;\n    }\n  },\n};\n</script>\n<style scoped>\n.title {\n  width: 100%;\n  padding: 0px 13.5%;\n  margin-top: 104px;\n}\n\n.myprofile-2 {\n  width: 100%;\n}\n\n/* Container */\n.container-center-horizontal {\n  display: flex;\n  justify-content: center;\n}\n\n.frame-7820 {\n  width: 100%;\n}\n\n.frame-7831 {\n  width: 100%;\n  padding: 40px;\n  border: 1px solid #ddd;\n}\n\n.wrap {\n  width: 100%;\n  padding: 0px 13.5%;\n  margin-bottom: 140px;\n}\n\n.myinfo_wrap {\n  padding: 50px 40px;\n  border: 1px solid #ddd;\n}\n\n.info_title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* Distribute space between elements */\n  margin-bottom: 20px;\n}\n\n.login_status {\n  display: flex;\n  align-items: center;\n  margin-left: 27.5px;\n  /* gap: 8px; */\n  /* 24.12.05 수정  */\n  gap: 4px;\n  /* Adds space between the circle and the text */\n}\n\n.circle {\n  width: 16px;\n  height: 16px;\n  /* 24.12.05 수정 - 색 변경 */\n  background-color: #d30f1a;\n  /* Naver green color */\n  border-radius: 50%;\n  /* Makes it a circle */\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n/* 네이버 색상 */\n.naver-color {\n  /* 24.12.05 수정 - 색상 변경 */\n  background-color: #03C75A;\n  /* 네이버 그린 */\n}\n\n/* 카카오 색상 */\n.kakao-color {\n  /* 24.12.05 수정 - 색상 변경 */\n  background-color: #FFE812;\n  /* 카카오 옐로우 */\n}\n\n.profile-pic {\n  width: 150px;\n  height: 150px;\n}\n\n.profile-pic-container {\n  position: relative;\n  width: 150px;\n  height: 150px;\n  margin: 0 auto;\n}\n\n.profile-pic img {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: #eee;\n}\n\n.camera-icon {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  background-color: white;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  padding: 13px;\n}\n\n.camera-icon img {\n  width: 15px;\n}\n\n.profile_tab {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n/* Tabs */\n.tab {\n  line-height: 100%;\n  width: 33.3333%;\n  padding: 23px 0px;\n  text-align: center;\n  cursor: pointer;\n  color: #666666;\n  background-color: #f5f6f6;\n}\n\n.tab:hover {\n  background-color: #fff;\n}\n\n.tab.active {\n  width: 33.3333%;\n  border: 1px solid #ddd;\n  margin-bottom: -2px;\n  background-color: #fff;\n  border-bottom: 2px solid #fff;\n  position: relative;\n  z-index: 2;\n  color: #222222;\n}\n\n.persional-edit-button {\n  background-color: #d30f1a;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-left: auto;\n  /* Pushes the button to the far right */\n}\n\n/* 개인정보 Section */\n.info-section {\n  margin-bottom: 50px;\n}\n\n.member-info-title {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.info-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 10px;\n}\n\n.info-table th,\n.info-table td {\n  padding: 10px;\n  text-align: center;\n  border: 1px solid #ddd;\n}\n\n.member-info-table td:nth-child(1) {\n  background-color: #f5f6f6;\n  padding: 23.5px 0px;\n  padding-left: 20px;\n  width: 200px;\n}\n\n.rank {\n  color: #d30f1a;\n}\n\n.member-info-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 10px;\n}\n\n.member-info-table th,\n.member-info-table td {\n  padding: 10px;\n  border: 1px solid #ddd;\n}\n\n/* 회원정보 Section */\n.member-info-section {\n  margin-bottom: 20px;\n}\n\n.member-info-section h2 {\n  margin-bottom: 10px;\n}\n\n.member-info-section .persional-edit-button {\n  margin-top: 10px;\n}\n\n/* 비밀번호 변경 Section */\n.password-change-section {\n  margin-top: 50px;\n}\n\n.password-change-table {\n  width: 100%;\n  margin-top: 20px;\n}\n\n.password-change-table th,\n.password-change-table td {\n  padding: 10px;\n  border: 1px solid #ddd;\n}\n\n.password-change-table td:nth-child(1) {\n  background-color: #f5f6f6;\n  padding: 23.5px 20px;\n  width: 200px;\n}\n\n.password-change-button {\n  /* 24.12.05 수정 - 색상 변경경 */\n  color: #184199;\n  cursor: pointer;\n  background: none;\n  border: none;\n  text-decoration: underline;\n}\n\n/* 간편로그인 Section */\n.quick-login-section {\n  margin-top: 50px;\n}\n\n.quick-login-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.quick-login-table th,\n.quick-login-table td {\n  border: 1px solid #ddd;\n}\n\n.quick-login-table td:nth-child(1) {\n  background-color: #f5f6f6;\n  padding: 23.5px 20px;\n  width: 200px;\n}\n\n.login-status {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-left: 20px;\n}\n\n.dot {\n  width: 16px;\n  height: 16px;\n  /* 24.12.05 수정 - 색상 변경 */\n  background-color: #d30f1a;\n  border-radius: 50%;\n}\n\n.disconnect-btn {\n  background-color: #666;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.quick-login-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.kakao-button {\n  /* 24.12.05 수정 - 색상 변경 */\n  background-color: #FFE812;\n  border: none;\n  padding: 10px 9.5px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.naver-button {\n  /* 24.12.05 수정 - 색상 변경 */\n  background-color: #03C75A;\n  border-radius: 4px;\n  color: white;\n  border: none;\n  margin-left: 12px;\n  padding: 10px 9.5px;\n  cursor: pointer;\n}\n\n.logout-note {\n  margin-top: 10px;\n  cursor: pointer;\n}\n\n.logout_button {\n  text-decoration: underline;\n}\n\n.link-button {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n\n.dot {\n  display: inline-block;\n}\n\n.link-align {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n/* 문의내역 */\n.inquiry-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.inquiry-table th,\n.inquiry-table td {\n  padding: 23.5px 0px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n}\n\n.inpuiry-header {\n  background-color: #f5f6f6;\n}\n\n.inquiry-detail-container {\n  padding: 40px;\n  border: 1px solid #ddd;\n  width: 100%;\n  margin: 0 auto;\n}\n\n.inquiry-header {\n  padding: 40px 0px;\n}\n\n.reply-meta {\n  display: flex;\n  gap: 8px;\n  align-items: center;\n}\n\n.reply-meta img {\n  width: 30px;\n  height: 30px;\n}\n\n.inquiry-meta {\n  margin-top: 10px;\n  color: gray;\n}\n\n.status-button {\n  border: 1px solid #d30f1a;\n  background-color: #fff;\n  color: #d30f1a;\n  padding: 11px 25.5px;\n  margin-left: 10px;\n  border-radius: 90px;\n  cursor: default;\n}\n\n/* 24.11.26 수정 - 추가 */\n.status-button.waiting {\n  border-color: #00000080;\n  color: #00000080;\n}\n\n.inquiry-content {\n  margin-bottom: 20px;\n  padding: 20px;\n  border: 1px solid #ddd;\n  /* 24.11.21 수정 - 추가 */\n  width: 100%;\n}\n\n/* 24.11.21 수정 - 추가 */\n.inquiry-content img {\n  width: 100%;\n}\n\n/* 24.11.21 수정 - 추가 */\n.inquiry-content p {\n  padding: 20px 0;\n}\n\n.reply {\n  border-top: 1px solid #ddd;\n  padding: 30px 0px;\n}\n\n.reply-section {\n  margin-bottom: 40px;\n}\n\n.back {\n  width: 100%;\n  margin: 0 auto;\n}\n\n.back-button {\n  background-color: #d30f1a;\n  color: white;\n  padding: 18.5px 0px;\n  display: block;\n  border: none;\n  margin: 0 auto;\n  width: 220px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.table-number {\n  width: 10%;\n}\n\n.table-title {\n  text-align: left;\n  padding-left: 10px;\n  width: 40%;\n  /* Reduced width from 60% to 50% */\n}\n\n.table-date {\n  width: 30%;\n  margin: 0 auto;\n}\n\n.table-status {\n  border: 1px solid #00000080;\n  padding: 11px 25.5px;\n  white-space: nowrap;\n  text-align: center;\n  color: #00000080;\n  width: 107px;\n  margin: 0 auto;\n  border-radius: 20px;\n}\n\n.table-status.completed {\n  color: #d30f1a;\n  border-color: #d30f1a;\n}\n\n.table_status_wrap {\n  width: 100%;\n}\n\n.frame-78201 {\n  padding: 40px;\n  border: 1px solid #ddd;\n}\n\n/* 24.12.09 수정 - 추가 */\n.select-box {\n  width: 200px;\n  height: 50px;\n  border: 1px solid #ddd;\n  padding: 0 20px;\n  margin-bottom: 20px;\n}\n\n/* 24.12.09 수정 - 추가 */\n.select-box select {\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n}\n\n.waiting {\n  color: #2fab0d;\n  /* 접수중 색상 */\n}\n\n.status-confirmed {\n  color: #184199;\n  /* 예약완료 색상 */\n}\n\n.status-failed {\n  color: #d30f1a;\n  /* 예약실패 색상 */\n}\n\n.vector {\n  background-color: #d30f1a;\n  width: 18px;\n  height: 18px;\n  padding: 2px;\n\n  border-radius: 50%;\n}\n\n.noniconsloading-16 {\n  width: 18px;\n  height: 18px;\n}\n\n.group-33601 {\n  width: 26px;\n}\n\n.reply_content {\n  width: 100%;\n  height: 100%;\n  background-color: #fafafa;\n  padding: 20px 25px;\n  line-height: 32px;\n  margin-top: 30px;\n  min-height: 200px;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 200px;\n}\n\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  /* 24.12.11 수정 - 배경색 변경 */\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n\n.page-numbers {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: lightgray;\n  cursor: pointer;\n}\n\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n/* 24.12.09 수정 - 추가 */\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.frame-7923 {\n  width: 100%;\n  justify-content: space-between;\n  display: flex;\n}\n\n.frame-7301 {\n  margin-left: 0px;\n}\n\n.reservation-name {\n  align-self: stretch;\n  letter-spacing: 0;\n  line-height: normal;\n  position: relative;\n}\n\n.reply-date {\n  margin-left: 12px;\n}\n\n.frame-777 {\n  background-color: #fafafa;\n  border-bottom: 1px solid #dddddd;\n  padding: 35px;\n}\n\n.frame-7925 {\n  display: flex;\n  gap: 20px;\n}\n\n.frame-7301 {\n  width: 200px;\n  height: 200px;\n}\n\n.frame-7301 img {\n  width: 200px;\n  height: 200px;\n}\n\n.frame-7926 {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 150px;\n}\n\n.frame-7917 {\n  display: flex;\n}\n\n.frame-7303 {\n  margin-top: 10px;\n}\n\n.reservation-align {\n  display: flex;\n  gap: 10px;\n  margin-top: 12px;\n}\n\n.text-5 {\n  width: 71px;\n}\n\n.frame-7918 {\n  margin-top: 28px;\n}\n\n/* 24.12.12 수정 */\n.frame-7923-3 {\n  border-radius: 8px;\n  background-color: #ccc;\n  border: none;\n  width: 100%;\n}\n\n.group-33600 {\n  width: 15px;\n  height: 15px;\n  background-color: #2fab0d;\n  border-radius: 50%;\n  padding: 2px;\n}\n\n\n\n.reply-content {\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px 0px;\n}\n\n.reply-write {\n  background-color: #fafafa;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.reply-textarea {\n  width: 100%;\n  background-color: #fafafa;\n  border: none;\n  height: 49px;\n  outline: none;\n  border-radius: 5px;\n  padding: 10px;\n  font-size: 16px;\n  resize: none;\n}\n\n.reply-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  /* 24.11.25 수정 - 삭제 */\n  /* margin-top: 10px; */\n}\n\n.cancel-button {\n  background-color: #999;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.submit-button {\n  background-color: #184199;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.reply-view {\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.reply-count {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.divider {\n  border-top: 1px solid #dddddd;\n  margin: 10px 0;\n}\n\n.comment {\n  padding: 15px 0;\n  border-bottom: 1px solid #eeeeee;\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n}\n\n.comment-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n}\n\n.comment-author {\n  font-weight: bold;\n}\n\n.comment-date {\n  color: #888888;\n}\n\n.comment-body {\n  padding: 20px;\n  background-color: #f9f9f9;\n  margin-top: 30px;\n}\n\n.comment-actions {\n  display: flex;\n  gap: 10px;\n  justify-content: flex-end;\n  width: 100%;\n  background-color: #f9f9f9;\n  padding: 20px;\n}\n\n.comment-edit-button {\n  background-color: #999999;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.delete-button {\n  background-color: #d30f1a;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.comment-body textarea {\n  border: none;\n  width: 100%;\n  background-color: #f9f9f9;\n  height: 100%;\n}\n\n.no-data-message {\n  text-align: center;\n  font-size: 18px;\n  color: #999;\n  margin-bottom: 20px;\n}\n\n.text-waiting {\n  color: #2FAB0D;\n  /* 주황색 */\n}\n\n.text-confirm {\n  color: #184199;\n  /* 초록색 */\n\n}\n\n.text-cancel {\n  color: #d30f1a;\n  /* 빨간색 */\n}\n\n.status-red {\n  color: #d30f1a;\n}\n</style>\n<style scoped src=\"@/style/myprofile/myprofile.css\"></style>\n"],"mappings":"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","ignoreList":[]}]}