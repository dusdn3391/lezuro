{"remainingRequest":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js!/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/MapList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/MapList.vue","mtime":1730703047605},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js","mtime":1728542748260},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","Header","X2FYmMc","View","Frame72983","Frame72984","XFooter","GameDetail","Loader","name","components","props","data","isModalVisible","game","address","time","parking","room","info","venues","contact","branchId","location","latitude","longitude","limitVenue","map","mounted","getCurrentLocation","methods","initMap","mapOptions","center","naver","maps","LatLng","zoom","Map","handleSearch","query","console","log","foundLocations","filter","venue","length","alert","lat","lng","initializeMap","navigator","geolocation","getCurrentPosition","position","coords","error","openModal","closeModal","toGoReservationWrite","$router","push","path","loader","apiKey","version","JSON","stringify","load","google","$refs","mapContainer","closestBranch","findClosestBranch","infoWindow","InfoWindow","slice","forEach","branch","index","marker","Marker","title","icon","addListener","setContent","open","getDetailStroeInfo","storeId","token","localStorage","getItem","header","response","get","params","headers","calculateDistance","lat1","lng1","lat2","lng2","toRad","value","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","currentLocation","branches","branchesWithDistance","distance","closestBranches","sort","b","callArround"],"sources":["src/components/MapList.vue"],"sourcesContent":["\n<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"findvenue-2 screen\">\n      <Header />\n      <x2-f-ym-mc :frame7291Props=\"x2FYmMcProps.frame7291Props\" />\n\n      <view :text89=\"viewProps.text89\" :className=\"viewProps.className\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">매장찾기</div>\n      <frame72983 :text2658=\"frame72983Props.text2658\" \n        :frame76691Props=\"frame72983Props.frame76691Props\"\n        :frame76692Props=\"frame72983Props.frame76692Props\" \n        @search=\"handleSearch\"\n      />\n\n      <div class=\"frame-7741\">\n        <div class=\"frame-7740 frame-7740-40\">\n          <div v-for=\"(venue, index) in limitVenue\" :key=\"index\" class=\"frame-7736\">\n            <div class=\"frame-7737-42\">\n              <div class=\"frame-7734\">\n                <div class=\"text-1-9 valign-text-middle pretendard-bold-mine-shaft-20px\">{{ venue.name }}</div>\n              </div>\n              <p class=\"text-1-10 valign-text-middle pretendard-regular-normal-granite-gray-16px\">\n                주소 : {{ venue.address }}<br />\n                연락처 : {{ venue.contact }}\n              </p>\n            </div>\n            <div class=\"frame-7946\">\n              <div class=\"view-44\" @click=\"openModal\">\n                <div class=\"overlap-group-13\">\n                  <div class=\"text-1-2 valign-text-middle pretendard-medium-white-12px\">자세히보기</div>\n                </div>\n              </div>\n              <div class=\"view-45\" @click=\"toGoReservationWrite\">\n                <div class=\"overlap-group1-10\">\n                  <div class=\"text-1-3 valign-text-middle pretendard-medium-white-12px\">예약하기</div>\n                </div>\n              </div>\n              <div class=\"view-46\">\n                <div class=\"overlap-group2-5\">\n                  <a :href=\"'tel:' + venue.contact\">\n                    <div class=\"text-1-4 valign-text-middle pretendard-medium-white-12px\">전화걸기</div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"view-220\">\n          <div ref=\"mapContainer\" class=\"map-container\"></div>\n            <!-- <div class=\"frame-container-10\" :style=\"{ 'background-image': 'url(' + frameContainer + ')' }\">\n              <frame72984 :text2687=\"frame729841Props.text2687\" />\n              <frame72984 :text2687=\"frame729842Props.text2687\" :className=\"frame729842Props.className\" />\n              <frame72984 :text2687=\"frame729843Props.text2687\" :className=\"frame729843Props.className\" />\n              <frame72984 :text2687=\"frame729844Props.text2687\" :className=\"frame729844Props.className\" />\n            </div> -->\n        </div>\n        \n      </div>\n      <!-- <div id=\"map\" style=\"width: 100%; height: 400px; background-color: aqua;\"></div> -->\n      <!-- <div>\n        <GoogleMap />\n      </div> -->\n    \n      <x-footer :className=\"xFooterProps.className\" />\n      <GameDetail v-if=\"isModalVisible\" @close=\"closeModal\" />\n     \n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport X2FYmMc from \"./X2FYmMc\";\nimport View from \"./View\";\nimport Frame72983 from \"./Frame72983\";\nimport Frame72984 from \"./Frame72984\";\nimport XFooter from \"./XFooter\";\nimport GameDetail from \"./GameDetail\"\n// import GoogleMap from './GoogleMap.vue';\nimport { Loader } from '@googlemaps/js-api-loader';\n\n\nexport default {\n  name: \"MapList\",\n  components: {\n    Header,\n    GameDetail,\n    X2FYmMc,\n    View,\n    Frame72983,\n    Frame72984,\n    XFooter,\n    // GoogleMap,\n  },\n  props: [\n    \"frameContainer\",\n    \"hArHeeProps\",\n    \"x2FYmMcProps\",\n    \"viewProps\",\n    \"frame72983Props\",\n    \"frame729841Props\",\n    \"frame729842Props\",\n    \"frame729843Props\",\n    \"frame729844Props\",\n    \"xFooterProps\",\n  ],\n  data() {\n    return {\n      isModalVisible: false,\n      game: {\n        address: \"경기도 광명시 오리로500\",\n        time: \"평일 09:00 ~ 24:00 / 주말 10:00 ~ 22:00\",\n        parking: \"2시간 무료\",\n        room: \"10개 게임 룸\",\n        info: \"매장에 대한 안내 내용입니다\",\n      },\n      venues: [\n        {\n          name: \"레저로스크린파크골프 광명점\",\n          address: \"경기도 광명시 오리로500\",\n          contact: \"02-898-0727\",\n          branchId: \"branch301\", \n                \n                location: { latitude: 37.556785357670286, longitude: 126.8369964659211 }\n        },\n        {\n          name: \"레저로스크린파크골프 서울점\",\n          address: \"서울특별시 강남구 역삼로 123\",\n          contact: \"02-123-4567\",\n          branchId: \"branch501\", \n                \n                location: { latitude: 37.559176533344726, longitude: 126.8314024154255 }\n        },\n        {\n          name: \"레저로스크린파크골프 부산점\",\n          address: \"부산광역시 해운대구 해대로 56\",\n          contact: \"051-789-1234\",\n          branchId: \"branch401\", \n                \n                location: { latitude: 37.56009802237206, longitude: 126.83171172240971 }\n        },\n        {\n          name: \"레저로스크린파크골프 인천점\",\n          address: \"인천광역시 남동구 구월로 789\",\n          contact: \"032-345-6789\",\n          branchId: \"branch201\", \n                \n                location: { latitude: 37.56080374714247, longitude: 126.82919239989074 }\n        },\n        {\n          branchId: \"branch001\",\n          name: \"서울 지점\",\n          address: \"인천광역시 남동구 구월로 789\",\n          contact: \"032-345-6789\",\n          location: { latitude: 37.5000, longitude: 127.0364 }\n        },\n        {\n          branchId: \"branch0010\",\n          name: \"델리케밥\",\n          address: \"인천광역시 남동구 구월로 789\",\n          contact: \"032-345-6789\", \n          location: { latitude: 35.11527467239661, longitude: 129.04225098586804 }\n        },\n          \n        {\n          branchId: \"branch101\", \n          name: \"델리케밥23\",\n          address: \"인천광역시 남동구 구월로 789\",\n          contact: \"032-345-6789\",\n          location: { latitude: 37.56128049081266, longitude: 126.8394164423239 }\n        },\n      ],\n      limitVenue : [],\n      map : null,\n      location: null, // 위치 정보\n    };\n  },\n  mounted() {\n    // this.initMap();\n    this.getCurrentLocation();\n    // this.callArround()\n    // this.initializeMap();\n  },\n  methods: {\n    initMap() {\n      const mapOptions = {\n        center: new naver.maps.LatLng(37.5665, 126.9780), // 예: 서울의 위도, 경도\n        zoom: 10,\n      };\n      new naver.maps.Map('map', mapOptions);\n    },\n    async handleSearch(query) {\n      // Handle the search query here\n      console.log('Search query received:', query);\n      // Add your search logic here\n\n     \n\n\n      // new google.maps.Marker({\n      //     // position: { lat: 37.7749, lng: -122.4194 },\n      //     //37.558184867189404, 126.83629244446581\n      //     position: {\n      //         lat: 37.55818 ,\n      //         lng: 126.83629\n      //       },\n      //     map: this.map,\n      //     title: 'closestBranch.name',\n      //   });\n      const foundLocations = this.venues\n        // .filter(venue => venue.name.includes(query)) // Check if the venue name includes the search query\n        .filter(venue => venue.name === query)\n        .map(venue => venue.location); // Return only the location values\n      console.log('Found locations:', foundLocations);\n      if (foundLocations.length === 0) {\n              alert('해당되는 매장이 존재 하지 않습니다.'); // Warning for no matches\n      }\n      else{ \n            this.location = {\n              lat: foundLocations[0].latitude,\n              lng: foundLocations[0].longitude,\n            };\n            this.initializeMap();\n          }\n      \n\n    },\n    // 현재 나의 위치 찾기\n    getCurrentLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            this.location = {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            };\n            this.initializeMap(); // 지도 로드\n          },\n          (error) => {\n            console.error(\"Error getting location:\", error);\n          }\n        );\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    },\n    openModal() {\n      this.isModalVisible = true; // 모달 열기\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    toGoReservationWrite() {\n      this.$router.push({ path: \"/reservation-write\" })\n    },\n    async initializeMap() {\n      const loader = new Loader({\n        apiKey: 'AIzaSyCDIXWiutjxK5qjCATUyKIL5Sd13E-LSUs', // 생성한 API 키로 교체\n        version: 'weekly',\n      });\n    \n      console.log(this.location)\n      console.log('JSOPN : : : ', JSON.stringify(this.location))\n      await loader.load();\n      this.map = new google.maps.Map(this.$refs.mapContainer, {\n        center: this.location,\n        // center: { lat: 37.7749, lng: -122.4194 }, // 초기 지도 중심 좌표 (예: 샌프란시스코)\n        zoom: 15,\n      });\n\n      console.log(\"this.location: : : : : : : \" ,  this.location)\n      // const closestBranch = this.findClosestBranch(currentLocation, branches);\n      const closestBranch = this.findClosestBranch(this.location, this.venues);\n      console.log(\"Closest Branch:\", closestBranch);\n      \n    \n      // 매장명 보이기\n      const infoWindow = new google.maps.InfoWindow();\n      this.limitVenue = closestBranch.slice(1, 5);\n      // this.venues = closestBranch.slice(1, 5);\n\n      // 모든 지점에 대해 마커 추가 및 클릭 이벤트 설정\n      closestBranch.forEach((branch,index) => {\n        const marker = new google.maps.Marker({\n          position: {\n            lat: branch.location.latitude,\n            lng: branch.location.longitude,\n          },\n          map: this.map,\n          title: branch.name, // 타이틀 설정\n          icon: index === 0 ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png' : null, // 현재 위치 마커는 파란색\n        });\n\n        \n        // 마커 클릭 시 InfoWindow에 타이틀 표시\n        marker.addListener('click', () => {\n          infoWindow.setContent(branch.name); // 지점 이름을 InfoWindow에 설정\n          infoWindow.open(this.map, marker); // InfoWindow를 마커 위치에 표시\n        });\n      });\n\n\n      // 마커 예제\n      // new google.maps.Marker({\n      //         // position: { lat: 37.7749, lng: -122.4194 },\n      //         //37.558184867189404, 126.83629244446581\n      //         position: {\n      //             lat: 37.55818 ,\n      //             lng: 126.83629\n      //           },\n      //         map: this.map,\n      //         title: 'closestBranch.name',\n      //       });\n\n\n\n    },\n\n    async getDetailStroeInfo(storeId) {\n        const token = localStorage.getItem(\"refreshToken\");\n        var header = \"Bearer \" + token; \n        const response= await axios.get(`http://localhost:3000/api/v1/branch/${storeId}`,\n          params,\n            {\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': header\n              }\n            });\n            if(response){\n              // 응답 예시\n              //{\n              //   \"branchId\": \"branch001\",\n              //   \"name\": \"서울 지점\",\n              //   \"address\": \"서울특별시 강남구 역삼동 123-45\",\n              //   \"phone\": \"02-123-4567\",\n              //   \"openingHours\": \"09:00 - 22:00\"\n              // },\n\n              console.log(\"확인 : : :: :\" , JSON.stringify(response))\n              // console.log(\"확인 : : :: :\" , JSON.stringify(response.data.user))\n              // localStorage.setItem('refreshToken', response.data.refreshToken);\n              // localStorage.setItem('loginInfo', JSON.stringify(response.data.user));\n              // // commit('refreshToken', response.refreshToken);\n              // this.$router.push({ path: \"/\" });\n            }else{\n              console.log(\"데이터 정보 없음\")\n              // alert(\"회원정보가 일치 하지 않습니다.\");\n            }\n\n        },\n\n        // 주변 반경 찾기 로직\n        calculateDistance(lat1, lng1, lat2, lng2) {\n            const toRad = (value) => (value * Math.PI) / 180;\n            const R = 6371; // Earth's radius in kilometers\n            const dLat = toRad(lat2 - lat1);\n            const dLng = toRad(lng2 - lng1);\n            \n            const a =\n              Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n              Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n              Math.sin(dLng / 2) * Math.sin(dLng / 2);\n            \n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            return R * c; // Distance in kilometers\n          },\n\n          findClosestBranch(currentLocation, branches) {\n            // 각 매장과의 거리를 계산하여 새로운 배열 생성\n            const branchesWithDistance = branches.map((branch) => {\n              const distance = this.calculateDistance(\n                currentLocation.lat,\n                currentLocation.lng,\n                branch.location.latitude,\n                branch.location.longitude\n              );\n              return { ...branch, distance };\n            });\n\n            // 거리를 기준으로 정렬 후 가장 가까운 5개의 매장을 반환\n            const closestBranches = branchesWithDistance\n              .sort((a, b) => a.distance - b.distance) // 거리 오름차순 정렬\n              .slice(0, 4); // 가까운 5개만 선택\n\n            // return closestBranches;\n            return [\n              { name: \"현재 위치\", location: { latitude: currentLocation.lat, longitude: currentLocation.lng }, distance: 0 },\n              ...closestBranches,\n      ];\n          },\n          // 주변 매장 탐색\n          callArround(){\n            const currentLocation = { lat: 37.5583761, lng: 126.8345277 };\n            const branches = [\n              {\n                branchId: \"branch001\",\n                name: \"서울 지점\",\n                location: { latitude: 37.5000, longitude: 127.0364 }\n              },\n              {\n                branchId: \"branch0010\",\n                name: \"델리케밥\",\n                location: { latitude: 37.55965189952221, longitude: 126.83222565575036 }\n              },\n              {\n                branchId: \"branch0001\",  \n                name: \"델리케밥0\",\n                location: { latitude: 37.56006592349469, longitude: 126.83523518132029 }\n              },\n              {\n                branchId: \"branch101\", \n                name: \"델리케밥1\",\n                location: { latitude: 37.56128049081266, longitude: 126.8394164423239 }\n              },\n              {\n                branchId: \"branch201\", \n                name: \"델리케밥2\",\n                location: { latitude: 37.56080374714247, longitude: 126.82919239989074 }\n              },\n              {\n                branchId: \"branch301\", \n                name: \"델리케밥3\",\n                location: { latitude: 37.556785357670286, longitude: 126.8369964659211 }\n              },\n              {\n                branchId: \"branch401\", \n                name: \"델리케밥4\",\n                location: { latitude: 37.56009802237206, longitude: 126.83171172240971 }\n              },\n              {\n                branchId: \"branch501\", \n                name: \"델리케밥5\",\n                location: { latitude: 37.559176533344726, longitude: 126.8314024154255 }\n              },\n              {\n                branchId: \"branch601\", \n                name: \"델리케밥6\",\n                location: { latitude: 37.56138036084911, longitude: 126.82090267531436 }\n              },\n             \n              {\n                branchId: \"branch002\",\n                name: \"부산 지점\",\n                location: { latitude: 31.5000, longitude: 117.0364 }\n              }\n            ];\n            const closestBranch = this.findClosestBranch(currentLocation, branches);\n            console.log(\"Closest Branch:\", closestBranch);\n          }\n\n  }\n};\n</script>\n\n<style>\n.findvenue-2 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 1920px;\n}\n\n.frame-7741 {\n  align-items: flex-start;\n  display: inline-flex;\n  margin-top: 30px;\n  position: relative;\n\n}\n\n.view-220 {\n  border: 1px solid;\n  border-color: var(--alto);\n  height: 804px;\n  overflow: hidden;\n  position: relative;\n  width: 1065px;\n}\n\n.frame-container-10 {\n  align-items: flex-end;\n  background-position: 50% 50%;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  left: -471px;\n  min-height: 886px;\n  padding: 226px 323px;\n  position: relative;\n  top: -28px;\n  width: 1618px;\n}\n</style>\n\n<style scoped>\n.frame-7740 {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  margin-left: -515px;\n  margin-top: 581px;\n  position: relative;\n  width: 335px;\n}\n\n.frame-7740.frame-7740-40 {\n  margin-left: unset;\n  margin-top: unset;\n}\n\n.frame-7736 {\n  align-items: flex-start;\n  align-self: stretch;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-color: var(--alto);\n  border-left-style: solid;\n  border-left-width: 1px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  padding: 40px;\n  position: relative;\n  width: 100%;\n  gap: 20px !important;\n}\n\n.frame-7946 {\n  align-items: center;\n  display: inline-flex;\n  flex: 0 0 auto;\n  gap: 5px;\n  justify-content: center;\n  position: relative;\n}\n\n.view-44 {\n  height: 30px;\n  position: relative;\n  width: 82px;\n}\n\n.overlap-group-13 {\n  align-items: center;\n  background-color: var(--mountain-mist);\n  border-radius: 4px;\n  display: flex;\n  height: 30px;\n  justify-content: flex-end;\n  min-width: 80px;\n  padding: 0 9px;\n}\n\n.text-1-2 {\n  height: 10px;\n  letter-spacing: 0;\n  line-height: normal;\n  text-align: center;\n  white-space: nowrap;\n  width: 61px;\n}\n\n.view-45 {\n  height: 30px;\n  position: relative;\n  width: 83px;\n}\n\n.overlap-group1-10 {\n  align-items: flex-end;\n  background-color: var(--monza);\n  border-radius: 4px;\n  display: flex;\n  height: 30px;\n  min-width: 81px;\n  padding: 9.2px 17px;\n}\n\n.text-1-3 {\n  height: 11px;\n  letter-spacing: 0;\n  line-height: normal;\n  text-align: center;\n  white-space: nowrap;\n  width: 46px;\n}\n\n.view-46 {\n  height: 30px;\n  margin-right: -2px;\n  position: relative;\n  width: 82px;\n}\n\n.overlap-group2-5 {\n  align-items: center;\n  background-color: var(--torea-bay);\n  border-radius: 4px;\n  display: flex;\n  height: 30px;\n  min-width: 80px;\n  padding: 0 14px;\n}\n\n.text-1-4 {\n  height: 10px;\n  letter-spacing: 0;\n  line-height: normal;\n  text-align: center;\n  white-space: nowrap;\n  width: 52px;\n}\n\n.frame-7736.frame-773,\n.frame-7736.frame-773-1,\n.frame-7736.frame-773-2,\n.frame-7736.frame-773-3,\n.frame-7736.frame-773-4,\n.frame-7736.frame-773-5,\n.frame-7736.frame-773-6,\n.frame-7736.frame-773-7,\n.frame-7736.frame-773-8,\n.frame-7736.frame-773-9,\n.frame-7736.frame-773-10,\n.frame-7736.frame-773-11,\n.frame-7736.frame-773-12,\n.frame-7736.frame-773-13,\n.frame-7736.frame-773-14,\n.frame-7736.frame-773-15,\n.frame-7736.frame-773-16,\n.frame-7736.frame-773-17,\n.frame-7736.frame-773-18,\n.frame-7736.frame-773-19,\n.frame-7736.frame-773-20,\n.frame-7736.frame-773-21,\n.frame-7736.frame-773-22,\n.frame-7736.frame-773-23,\n.frame-7736.frame-773-24,\n.frame-7736.frame-773-25,\n.frame-7736.frame-773-26,\n.frame-7736.frame-773-27,\n.frame-7736.frame-773-28,\n.frame-7736.frame-773-29,\n.frame-7736.frame-773-30,\n.frame-7736.frame-773-31,\n.frame-7736.frame-773-32,\n.frame-7736.frame-773-33,\n.frame-7736.frame-773-34,\n.frame-7736.frame-773-35,\n.frame-7736.frame-773-36,\n.frame-7736.frame-773-37,\n.frame-7736.frame-773-38,\n.frame-7736.frame-773-39,\n.frame-7736.frame-773-40 {\n  border-top-style: unset;\n  border-top-width: unset;\n}\n\n.frame-7737-42 {\n  align-items: flex-start;\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  position: relative;\n  gap: 0px !important;\n  width: 244px;\n}\n\n.frame-7734 {\n  align-items: center;\n  align-self: stretch;\n  display: flex;\n  flex: 0 0 auto;\n  gap: 4px;\n  position: relative;\n  width: 100%;\n}\n\n.text-1-9 {\n  letter-spacing: 0;\n  line-height: normal;\n  margin-top: -1px;\n  position: relative;\n  white-space: nowrap;\n  width: fit-content;\n}\n\n.text-1-10 {\n  letter-spacing: 0;\n  line-height: 23px;\n  position: relative;\n  width: fit-content;\n}\n\n.frame-7737-41.frame-7954 {\n  align-items: flex-start;\n  align-self: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-left: 20px;\n  margin-top: 31px;\n  position: relative;\n  width: 244px;\n}\n\n.frame-7737-41.frame-7954 .text-1-10 {\n  white-space: nowrap;\n}\n\n.frame-7741 {\n  margin-bottom: 140px\n}\n.map-container {\n  width: 100%;\n  height: 100%;\n}\n</style>\n "],"mappings":"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","ignoreList":[]}]}