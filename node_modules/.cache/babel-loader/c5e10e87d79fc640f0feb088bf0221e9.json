{"remainingRequest":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js!/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerRoom.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerRoom.vue","mtime":1734938085664},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js","mtime":1728542748260},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lml0ZXJhdG9yLmZvci1lYWNoLmpzIjsKaW1wb3J0IE1hbmFnZXJSZXNlcnZhdGlvbk1vZGFsIGZyb20gIi4vTWFuYWdlclJlc2VydmF0aW9uTW9kYWwudnVlIjsKaW1wb3J0IE1hbmFnZXJIZWFkZXIgZnJvbSAiLi9NYW5hZ2VySGVhZGVyLnZ1ZSI7CmltcG9ydCBNYW5hZ2VyTmF2YmFyIGZyb20gIi4vTWFuYWdlck5hdmJhci52dWUiOwppbXBvcnQgeyBtYW5hZ2VyU3RvcmUgfSBmcm9tICdAL3N0b3JlL21hbmFnZXJTdG9yZSc7IC8vIEFQSSDtmLjstpwKaW1wb3J0IHsgcmVmIH0gZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNYW5hZ2VyUm9vbSIsCiAgY29tcG9uZW50czogewogICAgTWFuYWdlclJlc2VydmF0aW9uTW9kYWwsCiAgICBNYW5hZ2VySGVhZGVyLAogICAgTWFuYWdlck5hdmJhcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkUmVzZXJ2YXRpb246IG51bGwsCiAgICAgIGlzTW9kYWxWaXNpYmxlOiBmYWxzZSwKICAgICAgc2VsZWN0ZWREYXRlOiAiMjAyNC0xMi0xNSIsCiAgICAgIGN1cnJlbnREYXRlOiAiIiwKICAgICAgY3VycmVudFRpbWU6ICIiLAogICAgICBjdXJyZW50RGF0ZVRpbWU6ICIiLAogICAgICBhdmFpbGFibGVSb29tOiBbXSwKICAgICAgZGVsZXRlZFJlc2VydmF0aW9uOiBudWxsLAogICAgICBzZWxlY3RlZFJvb206IG51bGwsCiAgICAgIHJvb21EdDogW10sCiAgICAgIHJvb21zOiBbewogICAgICAgIGlkOiAxLAogICAgICAgIG5hbWU6ICIx67KI67CpIiwKICAgICAgICBzdGF0dXNUZXh0OiAi7J207Jqp7KSRIiwKICAgICAgICBzdGF0dXNDbGFzczogImF2YWlsYWJsZSIsCiAgICAgICAgY3VycmVudFJlc2VydmF0aW9uOiAiMTI6MDAgfiAxNDowMCIsCiAgICAgICAgcmVzZXJ2YXRpb25zOiBbewogICAgICAgICAgaWQ6IDEsCiAgICAgICAgICB0aW1lOiAiMDg6MDAgfiAxMDowMCIKICAgICAgICB9LCB7CiAgICAgICAgICBpZDogMiwKICAgICAgICAgIHRpbWU6ICIxMjowMCB+IDE0OjAwIgogICAgICAgIH0sIHsKICAgICAgICAgIGlkOiAzLAogICAgICAgICAgdGltZTogIjEyOjAwIH4gMTQ6MDAiCiAgICAgICAgfSwgewogICAgICAgICAgaWQ6IDQsCiAgICAgICAgICB0aW1lOiAiMTI6MDAgfiAxNDowMCIKICAgICAgICB9XSwKICAgICAgICBzaG93TW9yZTogZmFsc2UKICAgICAgfV0KICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g7Iuk7KCc66GcIO2ZlOuptOyXkCDrgrTsmqnsnbQg6re466Ck7KeEIOynge2bhOyXkCDtmZXsnbguCiAgICAvLyB0aGlzLmdldFJvb21EdCgpCiAgICB0aGlzLnVwZGF0ZUN1cnJlbnREYXRlVGltZSgpOwogICAgLy8gc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVDdXJyZW50RGF0ZVRpbWUsIDEwMDApOyAvLyAx7LSI66eI64ukIOyXheuNsOydtO2KuAogICAgY29uc29sZS5sb2coIuuqqOuLrOuhnCDsoITri6zrkJwg7ISg7YOd65CcIOuCoOynnDoiLCB0aGlzLnNlbGVjdGVkRGF0ZSk7CiAgfSwKICB3YXRjaDogewogICAgLy8g642w7J207YSwIOuzgOqyveyLnCDtmLjstpwKICAgIHNlbGVjdGVkRGF0ZShuZXdEYXRlLCBvbGREYXRlKSB7CiAgICAgIGNvbnNvbGUubG9nKGBzZWxlY3RlZERhdGUgY2hhbmdlZCBmcm9tICR7b2xkRGF0ZX0gdG8gJHtuZXdEYXRlfWApOwoKICAgICAgLy8g7ISg7YOd7ZWcIOuCoOynnOyXkCDrlLDrnbwg7IOI66Gc7Jq0IOuNsOydtO2EsOulvCDqsIDsoLjsmKTqsbDrgpgsIOuLpOuluCDsnpHsl4XsnYQg7IiY7ZaJCgogICAgICB0aGlzLmdldFJlc2VydmF0aW9uRHQobmV3RGF0ZSk7CiAgICB9LAogICAgZGF0ZShuZXdEYXRlKSB7CiAgICAgIHRoaXMuZ2V0UmVzZXJ2YXRpb25EdChuZXdEYXRlKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOujuCDsmIjslb0g7KCV67O0IOyCreygnAogICAgYXN5bmMgZGVsUmVzZXJ2YXRpb24ocmVzZXJ2YXRpb25JZCkgewogICAgICB0cnkgewogICAgICAgIC8vIOyCreygnO2VmOugpOuKlCDsmIjslb0g7KCV67O066W8IOywvuq4sAogICAgICAgIGxldCByZXNlcnZhdGlvblRvRGVsZXRlID0gbnVsbDsKICAgICAgICBsZXQgcm9vbVRvRGVsZXRlID0gbnVsbDsKICAgICAgICBmb3IgKGNvbnN0IHJvb20gb2YgdGhpcy5hdmFpbGFibGVSb29tKSB7CiAgICAgICAgICByZXNlcnZhdGlvblRvRGVsZXRlID0gcm9vbS5yZXNlcnZhdGlvbnMuZmluZChyZXMgPT4gcmVzLmlkID09PSByZXNlcnZhdGlvbklkKTsKICAgICAgICAgIGlmIChyZXNlcnZhdGlvblRvRGVsZXRlKSB7CiAgICAgICAgICAgIHJvb21Ub0RlbGV0ZSA9IHJvb207IC8vIO2VtOuLuSDrsKkg7KCV67O064+EIO2VqOq7mCDsoIDsnqUKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmICghcmVzZXJ2YXRpb25Ub0RlbGV0ZSB8fCAhcm9vbVRvRGVsZXRlKSB7CiAgICAgICAgICBhbGVydCgi7IKt7KCc7ZWgIOyYiOyVvSDsoJXrs7Trpbwg7LC+7J2EIOyImCDsl4bsirXri4jri6QuIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGNvbnN0IGZvcm1hdFRpbWUgPSB0aW1lID0+IHRpbWUuc2xpY2UoMTEsIDE2KTsKICAgICAgICAvLyDsmIjslb0g7KCV67O0IOyggOyepQogICAgICAgIHRoaXMuZGVsZXRlZFJlc2VydmF0aW9uID0gewogICAgICAgICAgcGhvbmVOdW1iZXI6IHJlc2VydmF0aW9uVG9EZWxldGUucmVzZXJfcGhvbmUgfHwgIiIsCiAgICAgICAgICB1c2VyTmFtZTogcmVzZXJ2YXRpb25Ub0RlbGV0ZS5yZXNlcl91c2VyIHx8ICIiLAogICAgICAgICAgYXZhaWxhYmxlVGltZTogYCR7Zm9ybWF0VGltZShyZXNlcnZhdGlvblRvRGVsZXRlLnN0YXJ0VGltZSl9IH4gJHtmb3JtYXRUaW1lKHJlc2VydmF0aW9uVG9EZWxldGUuZW5kVGltZSl9YCwKICAgICAgICAgIHJvb21OYW1lOiByb29tVG9EZWxldGUucm9vbV9pZCAvLyDrsKkg7J2066aEIOuYkOuKlCBJRCDsoIDsnqUKICAgICAgICB9OwogICAgICAgIGNvbnNvbGUubG9nKCLsgq3soJztlaAg7JiI7JW9IOygleuztDoiLCB0aGlzLmRlbGV0ZWRSZXNlcnZhdGlvbik7CgogICAgICAgIC8vIOyYiOyVvSDsgq3soJwgQVBJIO2YuOy2nAogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbWFuYWdlclN0b3JlLmRlbGV0ZVRhc2soYHJlc2VydmF0aW9ucy8ke3Jlc2VydmF0aW9uSWR9YCk7CiAgICAgICAgY29uc29sZS5sb2coIuyCreygnCBBUEkg7J2R64u1OiIsIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CiAgICAgICAgYWxlcnQoIu2VtOuLuSDsmIjslb3snbQg7KCV7IOB7KCB7Jy866GcIOyCreygnOuQmOyXiOyKteuLiOuLpC4iKTsKCiAgICAgICAgLy8gY2FuY2VsTXNnIO2YuOy2nAogICAgICAgIHRoaXMuY2FuY2VsTXNnKHRoaXMuZGVsZXRlZFJlc2VydmF0aW9uKTsKCiAgICAgICAgLy8g7JiI7JW9IOuNsOydtO2EsCDqsLHsi6AKICAgICAgICB0aGlzLmdldFJlc2VydmF0aW9uRHQodGhpcy5zZWxlY3RlZERhdGUpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIltkZWxSZXNlcnZhdGlvbl0g7JiI7JW9IOyCreygnCDsmKTrpZg6IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLsmIjslb0g7IKt7KCcIOykkSDsmKTrpZjqsIAg67Cc7IOd7ZaI7Iq164uI64ukLiIpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgY2FuY2VsTXNnKGRlbGV0ZWRSZXNlcnZhdGlvbikgewogICAgICBjb25zdCBtYW5hZ2VySW5mbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oIm1hbmFnZXJJbmZvIikpOwogICAgICBjb25zb2xlLmxvZygiW2NhbmNlbE1zZ10gTWFuYWdlciBJbmZvOiIsIG1hbmFnZXJJbmZvKTsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHBob25lTnVtYmVyOiBkZWxldGVkUmVzZXJ2YXRpb24ucGhvbmVOdW1iZXIsCiAgICAgICAgdXNlck5hbWU6IGRlbGV0ZWRSZXNlcnZhdGlvbi51c2VyTmFtZSwKICAgICAgICBhdmFpbGFibGVUaW1lOiBkZWxldGVkUmVzZXJ2YXRpb24uYXZhaWxhYmxlVGltZSwKICAgICAgICBzdG9yZU5hbWU6IG1hbmFnZXJJbmZvLmlkZW50aWZpZXIKICAgICAgfTsKICAgICAgY29uc29sZS5sb2coIltjYW5jZWxNc2ddIFNlbmRpbmcgcGFyYW1zOiIsIHBhcmFtcyk7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBtYW5hZ2VyU3RvcmUucG9zdFRhc2soYHYxL3Ntcy9jYW5jZWxSZXNlcnZhdGlvbmAsIHBhcmFtcyk7CiAgICAgICAgY29uc29sZS5sb2coIltjYW5jZWxNc2ddIFJlc3BvbnNlIHJlY2VpdmVkOiIsIHJlc3BvbnNlKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJbY2FuY2VsTXNnXSBBUEkgY2FsbCBmYWlsZWQ6IiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g7LKY7J2MIDLqsJzsnZgg7JiI7JW97J2EIO2RnOyLnO2VmOqxsOuCmCwgc2hvd01vcmXqsIAgdHJ1ZeydvCDrlYzripQg66qo65OgIOyYiOyVveydhCDtkZzsi5wKICAgIHZpc2libGVSZXNlcnZhdGlvbnMocm9vbSkgewogICAgICBjb25zb2xlLmxvZygnZmlsdGVyZWRSZXNlcnZhdGlvbnMgOiA6ICcsIEpTT04uc3RyaW5naWZ5KHJvb20pKTsKICAgICAgY29uc3QgZmlsdGVyZWRSZXNlcnZhdGlvbnMgPSByb29tLnJlc2VydmF0aW9ucy5maWx0ZXIocmVzZXJ2YXRpb24gPT4gewogICAgICAgIHJldHVybiAocmVzZXJ2YXRpb24uY2hlY2sgPT09ICfsgqzsnbTqsJInIHx8IHJlc2VydmF0aW9uLmNoZWNrID09PSAn7LSI6rO86rCSJykgJiYgcmVzZXJ2YXRpb24uc3RhdHVzID09PSAnY29uZmlybSc7CiAgICAgIH0pOwoKICAgICAgLy8gc2hvd01vcmUg7IOB7YOc7JeQIOuUsOudvCDqsrDqs7wg67CY7ZmYCiAgICAgIGlmIChyb29tLnNob3dNb3JlKSB7CiAgICAgICAgcmV0dXJuIGZpbHRlcmVkUmVzZXJ2YXRpb25zOyAvLyDrqqjrk6Ag7ZWE7YSw65CcIOyYiOyVveydhCDtkZzsi5wKICAgICAgfQogICAgICByZXR1cm4gZmlsdGVyZWRSZXNlcnZhdGlvbnMuc2xpY2UoMCwgMik7IC8vIOyymOydjCAy6rCc7J2YIO2VhO2EsOuQnCDsmIjslb3rp4wg7ZGc7IucCiAgICB9LAogICAgLy8gK01PUkUg67KE7Yq87J2EIO2RnOyLnO2VoOyngCDsl6zrtoAKICAgIHNob3VsZFNob3dNb3JlQnV0dG9uKHJvb20pIHsKICAgICAgY29uc3QgZmlsdGVyZWRSZXNlcnZhdGlvbnMgPSByb29tLnJlc2VydmF0aW9ucy5maWx0ZXIocmVzZXJ2YXRpb24gPT4gcmVzZXJ2YXRpb24uc3RhdHVzID09PSAnY29uZmlybScgLy8gc3RhdHVz6rCAIGNvbmZpcm3snbgg7JiI7JW966eMIO2PrO2VqAogICAgICApOwogICAgICByZXR1cm4gZmlsdGVyZWRSZXNlcnZhdGlvbnMubGVuZ3RoID4gMiAmJiAhcm9vbS5zaG93TW9yZTsKICAgIH0sCiAgICAvLyArTU9SRSDrsoTtirzsnYQg7YG066at7ZaI7J2EIOuVjCDrgpjrqLjsp4Ag7JiI7JW97J2EIO2RnOyLnAogICAgc2hvd01vcmVSZXNlcnZhdGlvbnMocm9vbSkgewogICAgICBjb25zdCBmaWx0ZXJlZFJlc2VydmF0aW9ucyA9IHJvb20ucmVzZXJ2YXRpb25zLmZpbHRlcihyZXNlcnZhdGlvbiA9PiByZXNlcnZhdGlvbi5zdGF0dXMgPT09ICdjb25maXJtJyAvLyBzdGF0dXPqsIAgY29uZmlybeyduCDsmIjslb3rp4wg7Y+s7ZWoCiAgICAgICk7CiAgICAgIGlmIChmaWx0ZXJlZFJlc2VydmF0aW9ucy5sZW5ndGggPiAyKSB7CiAgICAgICAgcm9vbS5zaG93TW9yZSA9IHRydWU7CiAgICAgIH0KICAgIH0sCiAgICAvLyDsmIjslb3snbQgNOqwnCDsnbTsg4Hsnbwg65WM66eMIOyKpO2BrOuhpOuwlOulvCDrs7TsnbTqsowg7ZWY64qUIOyhsOqxtAogICAgc2hvdWxkU2Nyb2xsQmVWaXNpYmxlKHJvb20pIHsKICAgICAgLy8gY29uc29sZS5sb2coIlJvb29vb20gOiA6IDogIiAsIHJvb20pCiAgICAgIHJldHVybiByb29tLnNob3dNb3JlICYmIHJvb20ucmVzZXJ2YXRpb25zLmxlbmd0aCA+IDM7IC8vICtNT1JFIO2BtOumrSDtm4QgNOqwnCDsnbTsg4Hsnbwg65WMIOyKpO2BrOuhpCDtkZzsi5wKICAgIH0sCiAgICBvcGVuTW9kYWwocm9vbSkgewogICAgICB0aGlzLnNlbGVjdGVkUm9vbSA9IHJvb207CiAgICAgIHRoaXMuaXNFZGl0TW9kZSA9IGZhbHNlOwogICAgICB0aGlzLnNlbGVjdGVkUmVzZXJ2YXRpb24gPSBudWxsOwogICAgICBjb25zb2xlLmxvZygib3Blbk1vZGFsIHNlbGVjdGVkRGF0ZToiLCB0aGlzLnNlbGVjdGVkRGF0ZSk7CiAgICAgIHRoaXMuaXNNb2RhbFZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGVkaXRSZXNlcnZhdGlvbihyZXNlcnZhdGlvbiwgcm9vbSkgewogICAgICB0aGlzLnNlbGVjdGVkUmVzZXJ2YXRpb24gPSByZXNlcnZhdGlvbjsKICAgICAgdGhpcy5zZWxlY3RlZFJvb20gPSByb29tOyAvLyDrsKkg7KCV67O064+EIO2VqOq7mCDshKTsoJUKICAgICAgdGhpcy5pc0VkaXRNb2RlID0gdHJ1ZTsKICAgICAgdGhpcy5pc01vZGFsVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgY2xvc2VNb2RhbCgpIHsKICAgICAgdGhpcy5pc01vZGFsVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmlzRWRpdE1vZGUgPSBmYWxzZTsKICAgICAgdGhpcy5zZWxlY3RlZFJvb20gPSBudWxsOwogICAgICB0aGlzLnNlbGVjdGVkUmVzZXJ2YXRpb24gPSBudWxsOwogICAgICB0aGlzLmdldFJlc2VydmF0aW9uRHQodGhpcy5zZWxlY3RlZERhdGUpOwogICAgfSwKICAgIGFzeW5jIGdldFJvb21EdCgpIHsKICAgICAgY29uc3QgbWFuYWdlckluZm8gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdtYW5hZ2VySW5mbycpKTsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBtYW5hZ2VyU3RvcmUuZ2V0VGFzayhgcm9vbXNgKTsKICAgICAgdGhpcy5hdmFpbGFibGVSb29tID0gW107CiAgICAgIGNvbnNvbGUubG9nKCJyb29tTnVtYmVyaW5nIDogOiA6IDogOiA6ICIsIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CiAgICAgIHRoaXMuYXZhaWxhYmxlUm9vbSA9IHRoaXMuZmlsdGVyQnlNYW5hZ2VySWQocmVzcG9uc2UsIHBhcnNlSW50KG1hbmFnZXJJbmZvLmlkKSk7CiAgICAgIGNvbnNvbGUubG9nKCJyb29tTnVtYmVyaW5nIDogOiA6IDogOiA6IO2VhO2EsOungSDtm4QgIiwgSlNPTi5zdHJpbmdpZnkodGhpcy5hdmFpbGFibGVSb29tKSk7CiAgICB9LAogICAgZmlsdGVyQnlNYW5hZ2VySWQoZGF0YSwgbWFuYWdlcklkKSB7CiAgICAgIHJldHVybiBkYXRhLmZpbHRlcihpdGVtID0+IGl0ZW0ubWFuYWdlcmlkID09PSBtYW5hZ2VySWQpOwogICAgfSwKICAgIGFzeW5jIGdldFJlc2VydmF0aW9uRHQoZGF0ZSkgewogICAgICBjb25zdCBtYW5hZ2VySW5mbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21hbmFnZXJJbmZvJykpOwogICAgICBjb25zb2xlLmxvZygibWFuYWdlckluZm9tYW5hZ2VySW5mb21hbmFnZXJJbmZvIDogOjo6ICIsIG1hbmFnZXJJbmZvLmlkKTsKICAgICAgLy8gYXdhaXQgdGFza1N0b3JlLmFkZFRhc2sodGFzayk7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJBUEkg7Ya17IugIOyLnOyekSIpCiAgICAgIC8vIOujuCDsoJXrs7Qg6rCA7KC47Jik64qUIOq1rOusuCAoR0VUKQogICAgICBhd2FpdCB0aGlzLmdldFJvb21EdCgpOwogICAgICB0aGlzLnJvb21EdCA9IFtdOyAvLyDstIjquLDtmZQKICAgICAgdGhpcy5yb29tRHQgPSBhd2FpdCBtYW5hZ2VyU3RvcmUuZ2V0VGFzayhgcmVzZXJ2YXRpb25zL2RhdGUvJHtkYXRlfS9tYW5hZ2VyP21hbmFnZXJJZD0ke21hbmFnZXJJbmZvLmlkfWApOwogICAgICBjb25zb2xlLmxvZygi66O4642w7J207YSwIOqwgOyguOyYpOq4sCA6IDogOiA6IDogOiAiLCBKU09OLnN0cmluZ2lmeSh0aGlzLnJvb21EdCkpOwogICAgICB0aGlzLnVwZGF0ZVJvb21TdGF0dXMoKTsKICAgICAgLy8gY29uc29sZS5sb2coInJvb21EdFswXS5yZXNlcl91c2VyIDogOiA6ICIgICwgdGhpcy5yb29tRHRbMF0ucmVzZXJfdXNlcikKICAgICAgLy8gbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Jvb21EdCcsIEpTT04uc3RyaW5naWZ5KHRoaXMucm9vbUR0KSk7CiAgICAgIC8vIHRoaXMuaXNBZGRpbmcgPSBmYWxzZTsKICAgICAgLy8gdGhpcy5pc0VkaXRNb2RlID0gZmFsc2U7CiAgICAgIC8vIHRoaXMuY3VycmVudFRhc2sgPSBudWxsOwogICAgfSwKICAgIC8vIO2YhOyerCDsi5zqsIQg6rWs7ZWY6riwCiAgICB1cGRhdGVDdXJyZW50RGF0ZVRpbWUoKSB7CiAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7CgogICAgICAvLyBVVEMrOeuhnCDrs4DtmZgKICAgICAgY29uc3Qgb2Zmc2V0ID0gOSAqIDYwOyAvLyA57Iuc6rCEICogNjDrtoQKICAgICAgY29uc3Qga3N0RGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyBvZmZzZXQgKiA2MCAqIDEwMDApOwoKICAgICAgLy8g64Kg7Kec7JmAIOyLnOqwhCDtmJXsi50g7KeA7KCVCiAgICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBgJHtrc3REYXRlLmdldFVUQ0Z1bGxZZWFyKCl9LSR7U3RyaW5nKGtzdERhdGUuZ2V0VVRDTW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyl9LSR7U3RyaW5nKGtzdERhdGUuZ2V0VVRDRGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpfWA7CiAgICAgIGNvbnN0IGZvcm1hdHRlZFRpbWUgPSBgJHtTdHJpbmcoa3N0RGF0ZS5nZXRVVENIb3VycygpKS5wYWRTdGFydCgyLCAnMCcpfToke1N0cmluZyhrc3REYXRlLmdldFVUQ01pbnV0ZXMoKSkucGFkU3RhcnQoMiwgJzAnKX06JHtTdHJpbmcoa3N0RGF0ZS5nZXRVVENTZWNvbmRzKCkpLnBhZFN0YXJ0KDIsICcwJyl9YDsKCiAgICAgIC8vIFVUQys57JeQIOunnuy2mCBJU08gODYwMSDtmJXsi53snLzroZwg7Lac66ClCiAgICAgIHRoaXMuY3VycmVudERhdGVUaW1lID0gYCR7Zm9ybWF0dGVkRGF0ZX1UJHtmb3JtYXR0ZWRUaW1lfS4wMDBaYDsKICAgICAgdGhpcy5jdXJyZW50RGF0ZSA9IGZvcm1hdHRlZERhdGU7CiAgICAgIHRoaXMuY3VycmVudFRpbWUgPSBmb3JtYXR0ZWRUaW1lOwogICAgICB0aGlzLnNlbGVjdGVkRGF0ZSA9IHRoaXMuY3VycmVudERhdGU7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY3VycmVudERhdGVUaW1lKTsgLy8g7JiIOiAyMDI0LTExLTA2VDA0OjQ5OjA1KzA5OjAwCgogICAgICBjb25zb2xlLmxvZygi7ZiE7J6sIOuCoOynnCDsi5zqsIQiICsgdGhpcy5jdXJyZW50RGF0ZVRpbWUpOwogICAgICB0aGlzLmdldFJlc2VydmF0aW9uRHQodGhpcy5jdXJyZW50RGF0ZSk7CiAgICB9LAogICAgZ2V0Rm9ybWF0dGVkVGltZSgpIHsKICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsKICAgICAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuY3VycmVudERhdGVUaW1lKS5nZXRUaW1lKCk7IC8vIElTTyDtmJXsi53snLzroZwg67OA7ZmYCiAgICB9LAogICAgdXBkYXRlUm9vbVN0YXR1cygpIHsKICAgICAgY29uc29sZS5sb2coInRoaXMucm9vbUR0IDogOjogIiwgdGhpcy5yb29tRHQpOwogICAgICBjb25zdCBmb3JtYXR0ZWRUaW1lID0gdGhpcy5nZXRGb3JtYXR0ZWRUaW1lKCk7IC8vIO2YhOyerCDsi5zqsIQg6rCA7KC47Jik6riwCgogICAgICB0aGlzLnJvb21EdC5mb3JFYWNoKChyb29tLCByb29tSW5kZXgpID0+IHsKICAgICAgICB0aGlzLnJvb21EdFtyb29tSW5kZXhdLnJlc2VydmF0aW9ucyA9IHJvb20ucmVzZXJ2YXRpb25zLmZpbHRlcihyZXNlcnZhdGlvbiA9PiB7CiAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKHJlc2VydmF0aW9uLnN0YXJ0VGltZSkuZ2V0VGltZSgpOwogICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUocmVzZXJ2YXRpb24uZW5kVGltZSkuZ2V0VGltZSgpOwogICAgICAgICAgaWYgKHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gImNvbmZpcm0iKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJSZXNlcnZhdGlvbiBwYXNzZWQgc3RhdHVzIGNoZWNrOiAiLCByZXNlcnZhdGlvbik7CiAgICAgICAgICAgIGlmIChmb3JtYXR0ZWRUaW1lID49IHN0YXJ0ICYmIGZvcm1hdHRlZFRpbWUgPD0gZW5kKSB7CiAgICAgICAgICAgICAgcmVzZXJ2YXRpb24uY2hlY2sgPSAi7IKs7J206rCSIjsKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIGlmIChmb3JtYXR0ZWRUaW1lIDwgc3RhcnQpIHsKICAgICAgICAgICAgICByZXNlcnZhdGlvbi5jaGVjayA9ICLstIjqs7zqsJIiOwogICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZygiUmVzZXJ2YXRpb24gZGlkIG5vdCBwYXNzIHN0YXR1cyBjaGVjazogIiwgcmVzZXJ2YXRpb24pOwogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgaWYgKHRoaXMucm9vbUR0Lmxlbmd0aCA+IDApIHsKICAgICAgICBjb25zb2xlLmxvZygiRmlsdGVyZWQgcm9vbUR0OiAiLCBKU09OLnN0cmluZ2lmeSh0aGlzLnJvb21EdCkpOwogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hdmFpbGFibGVSb29tLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBmb3IgKGxldCBhID0gMDsgYSA8IHRoaXMucm9vbUR0Lmxlbmd0aDsgYSsrKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnJvb21EdFthXS5yb29tX2lkID09PSB0aGlzLmF2YWlsYWJsZVJvb21baV0ucm9vbV9pZCkgewogICAgICAgICAgICAgIHRoaXMuYXZhaWxhYmxlUm9vbVtpXS5yZXNlcnZhdGlvbnMgPSB0aGlzLnJvb21EdFthXS5yZXNlcnZhdGlvbnM7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5hdmFpbGFibGVSb29tLmZvckVhY2gocm9vbSA9PiB7CiAgICAgICAgICBpZiAocm9vbS5yZXNlcnZhdGlvbnMgJiYgcm9vbS5yZXNlcnZhdGlvbnMubGVuZ3RoID4gMCkgewogICAgICAgICAgICBjb25zdCBjaGVja1ZhbHVlID0gcm9vbS5yZXNlcnZhdGlvbnNbMF0uY2hlY2s7CiAgICAgICAgICAgIGlmIChjaGVja1ZhbHVlID09PSAi7LSI6rO86rCSIikgewogICAgICAgICAgICAgIHJvb20uc3RhdHVzID0gInVwY29taW5nIjsKICAgICAgICAgICAgfSBlbHNlIGlmIChjaGVja1ZhbHVlID09PSAi7IKs7J206rCSIikgewogICAgICAgICAgICAgIHJvb20uc3RhdHVzID0gImF2YWlsYWJsZSI7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgcm9vbS5zdGF0dXMgPSAid2FpdGluZyI7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJvb20uc3RhdHVzID0gIndhaXRpbmciOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMuYXZhaWxhYmxlUm9vbSA9IFsuLi50aGlzLmF2YWlsYWJsZVJvb21dOwogICAgICAgIGNvbnNvbGUubG9nKCJVcGRhdGVkIGF2YWlsYWJsZVJvb206ICIsIEpTT04uc3RyaW5naWZ5KHRoaXMuYXZhaWxhYmxlUm9vbSkpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuYXZhaWxhYmxlUm9vbSA9IFsuLi50aGlzLmF2YWlsYWJsZVJvb21dOwogICAgICAgIGNvbnNvbGUubG9nKCJObyByb29tIGRhdGEgZm91bmQ6ICIsIEpTT04uc3RyaW5naWZ5KHRoaXMuYXZhaWxhYmxlUm9vbSkpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["ManagerReservationModal","ManagerHeader","ManagerNavbar","managerStore","ref","name","components","data","selectedReservation","isModalVisible","selectedDate","currentDate","currentTime","currentDateTime","availableRoom","deletedReservation","selectedRoom","roomDt","rooms","id","statusText","statusClass","currentReservation","reservations","time","showMore","mounted","updateCurrentDateTime","console","log","watch","newDate","oldDate","getReservationDt","date","methods","delReservation","reservationId","reservationToDelete","roomToDelete","room","find","res","alert","formatTime","slice","phoneNumber","reser_phone","userName","reser_user","availableTime","startTime","endTime","roomName","room_id","response","deleteTask","JSON","stringify","cancelMsg","error","managerInfo","parse","localStorage","getItem","params","storeName","identifier","postTask","visibleReservations","filteredReservations","filter","reservation","check","status","shouldShowMoreButton","length","showMoreReservations","shouldScrollBeVisible","openModal","isEditMode","editReservation","closeModal","getRoomDt","getTask","filterByManagerId","parseInt","managerId","item","managerid","updateRoomStatus","now","Date","offset","kstDate","getTime","formattedDate","getUTCFullYear","String","getUTCMonth","padStart","getUTCDate","formattedTime","getUTCHours","getUTCMinutes","getUTCSeconds","getFormattedTime","forEach","roomIndex","start","end","i","a","checkValue"],"sources":["src/components/manager/ManagerRoom.vue"],"sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box \">\n            <h2 class=\"pretendard-bold-normal-black-28px\">예약관리</h2>\n          </div>\n\n          <!-- 날짜 선택 부분 -->\n          <div class=\"date-picker-box\">\n            <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px \" v-model=\"selectedDate\" />\n          </div>\n\n\n          <!-- 룸 리스트 부분 -->\n          <div class=\"room-list-box\" v-if=\"availableRoom.length > 0\">\n            <div v-for=\"room in availableRoom\" :key=\"room.id\" :class=\"['room-box', room.status]\">\n              <div class=\"room-header\">\n                <span class=\"pretendard-bold-normal-black-28px\">{{ room.room_id }} 번방</span>\n                <button class=\"reserve-btn pretendard-medium-white-14px\" @click=\"openModal(room)\">예약하기</button>\n              </div>\n\n              <div class=\"room-status\">\n                <span class=\"status-label pretendard-medium-white-12px\" :class=\"room.status\">{{ room.status ===\n                  \"available\" ? \"이용중\" : room.status === \"waiting\" ? \"대기중\" : \"예약\" }}</span>\n                <div v-if=\"room.reservations && room.reservations.length\">\n                  <span v-if=\"room.status !== 'waiting' && room.reservations[0].check === '사이값'\"\n                    class=\"reservation-time pretendard-bold-24px\">{{ room.reservations[0].startTime.slice(11, 16) }} ~\n                    {{ room.reservations[0].endTime.slice(11, 16) }}</span>\n                </div>\n              </div>\n\n            \n\n              <!-- 예약 목록 -->\n              <!--   <div v-if=\"room.reservations && room.reservations.length\">aaabbbccc</div> -->\n              <div :class=\"['scroll-container', { 'scrollable': shouldScrollBeVisible(room) }]\"\n                v-if=\"room.status !== 'waiting'\">\n                <div v-if=\"room.reservations && room.reservations.length\">\n                  <!-- 처음 2개의 예약을 항상 표시 -->\n                  <div v-for=\"(reservation) in visibleReservations(room)\" :key=\"reservation.id\"\n                    class=\"reservation-details\" v-if=\"reservation.check === '초과값' || reservation.check === '사이값'\">\n                    <div class=\"reservation-time-block pretendard-regular-normal-black-14px\">\n\n                      예약 {{ reservation.startTime.slice(11, 16) }} ~ {{ reservation.endTime.slice(11, 16) }}\n                    </div>\n                    \n                    <div class=\"reservation-actions\">\n                      <button class=\"delete-btn pretendard-medium-normal-granite-gray-12px\" @click=\"delReservation(reservation.id)\">삭제</button>\n                      <span>|</span>\n                      <button class=\"edit-btn pretendard-medium-normal-granite-gray-12px\" @click=\"editReservation(reservation, room)\">수정</button>\n                    </div>\n                  </div>\n\n                  <!-- +MORE 버튼 -->\n\n                  <div v-show=\"shouldShowMoreButton(room)\" class=\"more-btn\" @click=\"showMoreReservations(room)\">\n                    + MORE\n                  </div>\n\n                </div>\n\n              </div>\n\n            </div>\n           \n            <ManagerReservationModal v-if=\"isModalVisible\" @close=\"closeModal\" :selectedRoom = selectedRoom :selectedReservation= selectedReservation    :isEditMode=\"isEditMode\"    :selectedDate=\"selectedDate\" />\n          </div>\n          <div v-else>홈페이지 관리에서 룸을 등록해주세요.</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport ManagerReservationModal from \"./ManagerReservationModal.vue\";\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport { managerStore } from '@/store/managerStore';  // API 호출\nimport { ref } from 'vue';\n\n\nexport default {\n  name: \"ManagerRoom\",\n  components: {\n    ManagerReservationModal,\n    ManagerHeader,\n    ManagerNavbar,\n  },\n  data() {\n    return {\n      selectedReservation: null,\n      isModalVisible: false,\n      selectedDate: \"2024-12-15\",\n      currentDate: \"\",\n      currentTime: \"\",\n      currentDateTime: \"\",\n      availableRoom: [],\n      deletedReservation: null,\n      selectedRoom : null, \n      roomDt: [],\n      rooms: [\n        {\n          id: 1,\n          name: \"1번방\",\n          statusText: \"이용중\",\n          statusClass: \"available\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n            { id: 3, time: \"12:00 ~ 14:00\" },\n\n            { id: 4, time: \"12:00 ~ 14:00\" },\n          ],\n          showMore: false,\n        }\n       \n      ],\n    };\n  },\n  mounted() { // 실제로 화면에 내용이 그려진 직후에 확인.\n    // this.getRoomDt()\n    this.updateCurrentDateTime();\n    // setInterval(this.updateCurrentDateTime, 1000); // 1초마다 업데이트\n    console.log(\"모달로 전달된 선택된 날짜:\", this.selectedDate);\n\n  },\n  watch: { // 데이터 변경시 호출\n    selectedDate(newDate, oldDate) {\n      console.log(`selectedDate changed from ${oldDate} to ${newDate}`);\n\n      // 선택한 날짜에 따라 새로운 데이터를 가져오거나, 다른 작업을 수행\n\n      this.getReservationDt(newDate);\n    },\n    date(newDate) {\n    this.getReservationDt(newDate);\n  },\n  },\n  methods: {\n    // 룸 예약 정보 삭제\n    async delReservation(reservationId) {\n  try {\n    // 삭제하려는 예약 정보를 찾기\n    let reservationToDelete = null;\n    let roomToDelete = null;\n\n    for (const room of this.availableRoom) {\n      reservationToDelete = room.reservations.find(\n        (res) => res.id === reservationId\n      );\n      if (reservationToDelete) {\n        roomToDelete = room; // 해당 방 정보도 함께 저장\n        break;\n      }\n    }\n\n    if (!reservationToDelete || !roomToDelete) {\n      alert(\"삭제할 예약 정보를 찾을 수 없습니다.\");\n      return;\n    }\n    const formatTime = (time) => time.slice(11, 16); \n    // 예약 정보 저장\n    this.deletedReservation = {\n      phoneNumber: reservationToDelete.reser_phone || \"\",\n      userName: reservationToDelete.reser_user || \"\",\n      availableTime: `${formatTime(reservationToDelete.startTime)} ~ ${formatTime(\n        reservationToDelete.endTime\n      )}`, \n      roomName: roomToDelete.room_id, // 방 이름 또는 ID 저장\n    };\n\n    console.log(\"삭제할 예약 정보:\", this.deletedReservation);\n\n    // 예약 삭제 API 호출\n    const response = await managerStore.deleteTask(\n      `reservations/${reservationId}`\n    );\n    console.log(\"삭제 API 응답:\", JSON.stringify(response));\n    alert(\"해당 예약이 정상적으로 삭제되었습니다.\");\n\n    // cancelMsg 호출\n    this.cancelMsg(this.deletedReservation);\n\n    // 예약 데이터 갱신\n    this.getReservationDt(this.selectedDate);\n  } catch (error) {\n    console.error(\"[delReservation] 예약 삭제 오류:\", error);\n    alert(\"예약 삭제 중 오류가 발생했습니다.\");\n  }\n},\n    async cancelMsg(deletedReservation) {\n      const managerInfo = JSON.parse(localStorage.getItem(\"managerInfo\"));\n      console.log(\"[cancelMsg] Manager Info:\", managerInfo);\n\n      const params = {\n        phoneNumber: deletedReservation.phoneNumber,\n    userName: deletedReservation.userName,\n    availableTime:deletedReservation.availableTime,\n      storeName: managerInfo.identifier,\n      };\n\n      console.log(\"[cancelMsg] Sending params:\", params);\n\n      try {\n        const response = await managerStore.postTask(\n          `v1/sms/cancelReservation`,\n          params\n        );\n        console.log(\"[cancelMsg] Response received:\", response);\n      } catch (error) {\n        console.error(\"[cancelMsg] API call failed:\", error);\n      }\n    },\n    // 처음 2개의 예약을 표시하거나, showMore가 true일 때는 모든 예약을 표시\n    visibleReservations(room) {\n      console.log('filteredReservations : : ', JSON.stringify(room))\n\n      const filteredReservations = room.reservations.filter(reservation => {\n        return (\n          ( reservation.check === '사이값' || reservation.check === '초과값') &&\n        reservation.status === 'confirm' \n      );\n      });\n\n      // showMore 상태에 따라 결과 반환\n      if (room.showMore) {\n        return filteredReservations; // 모든 필터된 예약을 표시\n      }\n\n\n      return filteredReservations.slice(0, 2); // 처음 2개의 필터된 예약만 표시\n    },\n\n    // +MORE 버튼을 표시할지 여부\n    shouldShowMoreButton(room) {\n  const filteredReservations = room.reservations.filter(\n    reservation => reservation.status === 'confirm' // status가 confirm인 예약만 포함\n  );\n  return filteredReservations.length > 2 && !room.showMore;\n}\n,\n\n    // +MORE 버튼을 클릭했을 때 나머지 예약을 표시\n    showMoreReservations(room) {\n  const filteredReservations = room.reservations.filter(\n    reservation => reservation.status === 'confirm' // status가 confirm인 예약만 포함\n  );\n  if (filteredReservations.length > 2) {\n    room.showMore = true;\n  }\n},\n\n    // 예약이 4개 이상일 때만 스크롤바를 보이게 하는 조건\n    shouldScrollBeVisible(room) {\n      // console.log(\"Rooooom : : : \" , room)\n      return room.showMore && room.reservations.length > 3; // +MORE 클릭 후 4개 이상일 때 스크롤 표시\n    },\n    openModal(room) {\n    this.selectedRoom = room;\n    this.isEditMode = false; \n    this.selectedReservation = null;\n    console.log(\"openModal selectedDate:\", this.selectedDate);\n    this.isModalVisible = true;\n  },\n  editReservation(reservation, room) {\n  this.selectedReservation = reservation;\n  this.selectedRoom = room; // 방 정보도 함께 설정\n  this.isEditMode = true;\n  this.isModalVisible = true;\n},\n  closeModal() {\n    this.isModalVisible = false;\n    this.isEditMode = false; \n    this.selectedRoom = null;\n    this.selectedReservation = null;\n\n    this.getReservationDt(this.selectedDate);\n  },\n    async getRoomDt() {\n      const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n      const response = await managerStore.getTask(`rooms`);\n      this.availableRoom = [];\n      console.log(\"roomNumbering : : : : : : \", JSON.stringify(response))\n      this.availableRoom = this.filterByManagerId(response, parseInt(managerInfo.id));\n\n      console.log(\"roomNumbering : : : : : : 필터링 후 \", JSON.stringify(this.availableRoom))\n\n    },\n    filterByManagerId(data, managerId) {\n      return data.filter(item => item.managerid === managerId);\n    },\n    async getReservationDt(date) {\n        const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n        console.log(\"managerInfomanagerInfomanagerInfo : ::: \" , managerInfo.id)\n      // await taskStore.addTask(task);\n      // console.log(\"API 통신 시작\")\n      // 룸 정보 가져오는 구문 (GET)\n      await this.getRoomDt();\n      this.roomDt = []; // 초기화\n      this.roomDt = await managerStore.getTask(`reservations/date/${date}/manager?managerId=${managerInfo.id}`);\n      \n      console.log(\"룸데이터 가져오기 : : : : : : \", JSON.stringify(this.roomDt))\n      this.updateRoomStatus()\n      // console.log(\"roomDt[0].reser_user : : : \"  , this.roomDt[0].reser_user)\n      // localStorage.setItem('roomDt', JSON.stringify(this.roomDt));\n      // this.isAdding = false;\n      // this.isEditMode = false;\n      // this.currentTask = null;\n    },\n    // 현재 시간 구하기\n    updateCurrentDateTime() {\n      const now = new Date();\n\n      // UTC+9로 변환\n      const offset = 9 * 60; // 9시간 * 60분\n      const kstDate = new Date(now.getTime() + offset * 60 * 1000);\n\n      // 날짜와 시간 형식 지정\n      const formattedDate = `${kstDate.getUTCFullYear()}-${String(kstDate.getUTCMonth() + 1).padStart(2, '0')}-${String(kstDate.getUTCDate()).padStart(2, '0')}`;\n      const formattedTime = `${String(kstDate.getUTCHours()).padStart(2, '0')}:${String(kstDate.getUTCMinutes()).padStart(2, '0')}:${String(kstDate.getUTCSeconds()).padStart(2, '0')}`;\n\n      // UTC+9에 맞춘 ISO 8601 형식으로 출력\n      this.currentDateTime = `${formattedDate}T${formattedTime}.000Z`;\n      this.currentDate = formattedDate;\n      this.currentTime = formattedTime;\n      this.selectedDate = this.currentDate\n      console.log(this.currentDateTime); // 예: 2024-11-06T04:49:05+09:00\n\n      console.log(\"현재 날짜 시간\" + this.currentDateTime)\n      this.getReservationDt(this.currentDate);\n    },\n\n    getFormattedTime() {\n      const now = new Date();\n      return new Date(this.currentDateTime).getTime(); // ISO 형식으로 변환\n    },\n    updateRoomStatus() {\n  console.log(\"this.roomDt : :: \", this.roomDt);\n\n  const formattedTime = this.getFormattedTime(); // 현재 시간 가져오기\n\n  this.roomDt.forEach((room, roomIndex) => {\n    this.roomDt[roomIndex].reservations = room.reservations.filter(reservation => {\n      const start = new Date(reservation.startTime).getTime();\n      const end = new Date(reservation.endTime).getTime();\n\n      if (reservation.status === \"confirm\") {\n        console.log(\"Reservation passed status check: \", reservation);\n        if (formattedTime >= start && formattedTime <= end) {\n          reservation.check = \"사이값\";\n          return true;\n        } else if (formattedTime < start) {\n          reservation.check = \"초과값\";\n          return true;\n        }\n      } else {\n        console.log(\"Reservation did not pass status check: \", reservation);\n      }\n      return false;\n    });\n  });\n\n  if (this.roomDt.length > 0) {\n    console.log(\"Filtered roomDt: \", JSON.stringify(this.roomDt));\n    for (let i = 0; i < this.availableRoom.length; i++) {\n      for (let a = 0; a < this.roomDt.length; a++) {\n        if (this.roomDt[a].room_id === this.availableRoom[i].room_id) {\n          this.availableRoom[i].reservations = this.roomDt[a].reservations;\n        }\n      }\n    }\n\n    this.availableRoom.forEach(room => {\n      if (room.reservations && room.reservations.length > 0) {\n        const checkValue = room.reservations[0].check;\n        if (checkValue === \"초과값\") {\n          room.status = \"upcoming\";\n        } else if (checkValue === \"사이값\") {\n          room.status = \"available\";\n        } else {\n          room.status = \"waiting\";\n        }\n      } else {\n        room.status = \"waiting\";\n      }\n    });\n\n    this.availableRoom = [...this.availableRoom];\n    console.log(\"Updated availableRoom: \", JSON.stringify(this.availableRoom));\n  } else {\n    this.availableRoom = [...this.availableRoom];\n    console.log(\"No room data found: \", JSON.stringify(this.availableRoom));\n  }\n}\n\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n/* 24.12.23 수정 */\n.wrapper {\n    width: 100%;\n    padding: 30px;\n    /* gap: 20px; */\n    height: 100vh;\n}\n\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 날짜 선택 박스 */\n.date-picker-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 24.11.11 수정 */\n.date {\n  width: 250px;\n  height: 60px;\n  border: 1px solid #ddd;\n  padding: 0 20px;\n}\n\n/* 방 리스트 박스 */\n.room-list-box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  background-color: #fff;\n  padding: 20px;\n  padding-bottom: 130px;\n}\n\n/* 개별 방 박스 */\n.room-box {\n  background-color: #fff;\n  padding: 40px 30px;\n  width: 270px;\n  height: 270px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* 방 제목과 예약 버튼 */\n.room-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.reserve-btn {\n  background-color: #E34D55;\n  color: #fff;\n  border: none;\n  padding: 5px;\n  border-radius: 4px;\n}\n\n/* 상태 표시 */\n.room-status {\n  display: flex;\n  justify-content: space-between;\n  gap: 6px;\n  margin-bottom: 10px;\n}\n\n.status-label {\n  padding: 7.5px 6.5px;\n  border-radius: 4px;\n  color: #fff;\n}\n\n.room-box.available {\n  border-color: #14B655;\n}\n\n.room-box.waiting {\n  border-color: #D30F1A;\n}\n\n.room-box.upcoming {\n  border-color: #184199;\n\n}\n\n.available .status-label {\n  background-color: #14B655;\n}\n\n.available .reservation-time {\n  color: #14B655;\n}\n\n.waiting .status-label {\n  background-color: #D30F1A;\n\n}\n\n.waiting .reservation-time {\n  color: #D30F1A\n}\n\n.upcoming .status-label {\n  background-color: #184199;\n}\n\n.upcoming .reservation-time {\n  color: #184199;\n}\n\n.reservation-time {\n  color: #333;\n}\n\n/* 예약 상세 */\n.reservation-details {\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: none;\n}\n\n.reservation-time {\n\n  letter-spacing: -1px;\n}\n\n.reservation-actions {\n  display: flex;\n}\n\n.reservation-time-block {\n  letter-spacing: -1px;\n}\n\n.delete-btn,\n.edit-btn {\n  letter-spacing: -2px;\n  background: none;\n  border: none;\n  color: #D30F1A;\n  gap: 6px;\n  cursor: pointer;\n}\n\n.edit-btn {\n  color: #184199;\n}\n\n/* +More 버튼 */\n.more-btn {\n  text-align: center;\n  color: #bbb;\n  cursor: pointer;\n}\n\n.scroll-container {\n  max-height: none;\n  overflow-y: hidden;\n}\n\n/* 스크롤 가능한 상태일 때 스크롤바 적용 */\n.scroll-container.scrollable {\n  max-height: 150px;\n  /* 4개 이상의 예약이 있을 때 스크롤바가 생김 */\n  overflow-y: auto;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}