{"remainingRequest":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/EventList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/EventList.vue","mtime":1734572733661},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQuaXRlcmF0b3IubWFwLmpzIjsKaW1wb3J0IEhlYWRlciBmcm9tICIuL0hlYWRlciI7CmltcG9ydCBSalpzV2kgZnJvbSAiLi9SalpzV2kiOwppbXBvcnQgWEZvb3RlciBmcm9tICIuL1hGb290ZXIiOwppbXBvcnQgeyB0YXNrU3RvcmUgfSBmcm9tICJAL3N0b3JlL3Rhc2tTdG9yZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRXZlbnRMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXIsCiAgICBSalpzV2ksCiAgICBYRm9vdGVyCiAgfSwKICBwcm9wczogWyJySlpzV0lQcm9wcyJdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJzOiBbIuyghOyytCDsnbTrsqTtirgiLCAi7KeE7ZaJ7KSRIOydtOuypO2KuCIsICLsooXro4wg7J2067Kk7Yq4Il0sCiAgICAgIHNlbGVjdGVkVGFiOiAi7KCE7LK0IOydtOuypO2KuCIsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBpdGVtc1BlclBhZ2U6IDYsCiAgICAgIGV2ZW50czogW10sCiAgICAgIGFycm93TGVmdEltYWdlOiAiaHR0cHM6Ly9jZG4uYW5pbWFhcHAuY29tL3Byb2plY3RzLzY2ZGE1MTJkMGMyMmQ0NzgwMTVlMGUwNy9yZWxlYXNlcy82NmRhNTFkOGNmNTAxNTNjZWY5OTUyZGYvaW1nL2ljb25hbW9vbi1hcnJvdy11cC0yLXRoaW4uc3ZnIiwKICAgICAgYXJyb3dSaWdodEltYWdlOiAiaHR0cHM6Ly9jZG4uYW5pbWFhcHAuY29tL3Byb2plY3RzLzY2ZGE1MTJkMGMyMmQ0NzgwMTVlMGUwNy9yZWxlYXNlcy82NmRhNTFkOGNmNTAxNTNjZWY5OTUyZGYvaW1nL2ljb25hbW9vbi1hcnJvdy11cC0yLXRoaW4uc3ZnIgogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldEV2ZW50cygpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIGZpbHRlcmVkRXZlbnRzKCkgewogICAgLy8gICBpZiAodGhpcy5zZWxlY3RlZFRhYiA9PT0gIuyghOyytCDsnbTrsqTtirgiKSB7CiAgICAvLyAgICAgcmV0dXJuIHRoaXMuZXZlbnRzOwogICAgLy8gICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0ZWRUYWIgPT09ICLsp4TtlonspJEg7J2067Kk7Yq4IikgewogICAgLy8gICAgIHJldHVybiB0aGlzLmV2ZW50cy5maWx0ZXIoKGV2ZW50KSA9PiBldmVudC50eXBlID09PSAi7KeE7ZaJ7KSRIik7CiAgICAvLyAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RlZFRhYiA9PT0gIuyiheujjCDsnbTrsqTtirgiKSB7CiAgICAvLyAgICAgcmV0dXJuIHRoaXMuZXZlbnRzLmZpbHRlcigoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09ICLsooXro4wiKTsKICAgIC8vICAgfQogICAgLy8gfSwKICAgIC8vIHRvdGFsUGFnZXMoKSB7CiAgICAvLyAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5maWx0ZXJlZEV2ZW50cy5sZW5ndGggLyB0aGlzLml0ZW1zUGVyUGFnZSk7CiAgICAvLyB9LAogICAgLy8gcGFnaW5hdGVkRXZlbnRzKCkgewogICAgLy8gICBjb25zdCBzdGFydCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLml0ZW1zUGVyUGFnZTsKICAgIC8vICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRFdmVudHMuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgdGhpcy5pdGVtc1BlclBhZ2UpOwogICAgLy8gfSwKCiAgICAvLyAyNC4xMi4xOSDsiJjsoJUgLSDstpTqsIAgOiDrj5nsoIHsnLzroZwg7ZGc7Iuc7ZWgIO2OmOydtOyngCDrsojtmLgg6rOE7IKwCiAgICB2aXNpYmxlUGFnZXMoKSB7CiAgICAgIGNvbnN0IHRvdGFsUGFnZXMgPSB0aGlzLnRvdGFsUGFnZXM7CiAgICAgIGNvbnN0IGN1cnJlbnRQYWdlID0gdGhpcy5jdXJyZW50UGFnZTsKICAgICAgY29uc3QgbWF4VmlzaWJsZVBhZ2VzID0gNTsKICAgICAgbGV0IHN0YXJ0UGFnZSA9IE1hdGgubWF4KDEsIGN1cnJlbnRQYWdlIC0gTWF0aC5mbG9vcihtYXhWaXNpYmxlUGFnZXMgLyAyKSk7CiAgICAgIGxldCBlbmRQYWdlID0gc3RhcnRQYWdlICsgbWF4VmlzaWJsZVBhZ2VzIC0gMTsKICAgICAgaWYgKGVuZFBhZ2UgPiB0b3RhbFBhZ2VzKSB7CiAgICAgICAgZW5kUGFnZSA9IHRvdGFsUGFnZXM7CiAgICAgICAgc3RhcnRQYWdlID0gTWF0aC5tYXgoMSwgZW5kUGFnZSAtIG1heFZpc2libGVQYWdlcyArIDEpOwogICAgICB9CiAgICAgIHJldHVybiBBcnJheS5mcm9tKHsKICAgICAgICBsZW5ndGg6IGVuZFBhZ2UgLSBzdGFydFBhZ2UgKyAxCiAgICAgIH0sIChfLCBpKSA9PiBzdGFydFBhZ2UgKyBpKTsKICAgIH0sCiAgICAvLyAyNC4xMS4yMiDsiJjsoJUgLSDtg60g7KCB7JqpCiAgICB0b3RhbFBhZ2VzKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuZmlsdGVyZWRFdmVudHModGhpcy5zZWxlY3RlZFRhYikubGVuZ3RoIC8gdGhpcy5pdGVtc1BlclBhZ2UpOwogICAgfSwKICAgIHBhZ2luYXRlZEV2ZW50cygpIHsKICAgICAgY29uc3Qgc3RhcnQgPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5pdGVtc1BlclBhZ2U7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkRXZlbnRzKHRoaXMuc2VsZWN0ZWRUYWIpLnNsaWNlKHN0YXJ0LCBzdGFydCArIHRoaXMuaXRlbXNQZXJQYWdlKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEV2ZW50cygpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyDshJzrsoTsl5DshJwg7J2067Kk7Yq4IOuNsOydtO2EsOulvCDqsIDsoLjsmLXri4jri6QuCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUuZ2V0U2VsZWN0VGFza3MoJ2V2ZW50cycpOwogICAgICAgIGNvbnNvbGUubG9nKCJGZXRjaGVkIGV2ZW50cyBkYXRhOiIsIHJlc3BvbnNlKTsKCiAgICAgICAgLy8g642w7J207YSw66W8IOqwgOqzte2VmOyXrCBldmVudHMg67Cw7Je07JeQIO2VoOuLuQogICAgICAgIHRoaXMuZXZlbnRzID0gcmVzcG9uc2UubWFwKGl0ZW0gPT4gewogICAgICAgICAgdmFyIF9pdGVtJHN0YXJ0VGltZSwgX2l0ZW0kZW5kVGltZTsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlkOiBpdGVtLmlkLAogICAgICAgICAgICBkZXNjcmlwdGlvbjogaXRlbS50aXRsZSwKICAgICAgICAgICAgLy8gdGl0bGXsnYQgZGVzY3JpcHRpb27snLzroZwg7IKs7JqpCiAgICAgICAgICAgIHBlcmlvZDogYCR7KF9pdGVtJHN0YXJ0VGltZSA9IGl0ZW0uc3RhcnRUaW1lKSA9PT0gbnVsbCB8fCBfaXRlbSRzdGFydFRpbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9pdGVtJHN0YXJ0VGltZS5zcGxpdCgnVCcpWzBdfSB+ICR7KF9pdGVtJGVuZFRpbWUgPSBpdGVtLmVuZFRpbWUpID09PSBudWxsIHx8IF9pdGVtJGVuZFRpbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9pdGVtJGVuZFRpbWUuc3BsaXQoJ1QnKVswXX1gLAogICAgICAgICAgICAvLyBzdGFydFRpbWXqs7wgZW5kVGltZeyXkOyEnCDrgqDsp5zrp4wg7LaU7LacCiAgICAgICAgICAgIG1hc2tHcm91cDogaXRlbS5pbWFnZVVybCwKICAgICAgICAgICAgLy8gaW1hZ2VVcmzsnYQgbWFza0dyb3Vw7JeQIO2VoOuLuQogICAgICAgICAgICAvLyB0eXBlOiBpdGVtLnN0YXR1cywgLy8g7KeE7ZaJIOyDge2DnCAoJ+ynhO2WieykkScsICfsooXro4wnIOuTsSkKICAgICAgICAgICAgLy8gMjQuMTEuMjIg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgICAgIHN0YXJ0RGF0ZTogbmV3IERhdGUoaXRlbS5zdGFydFRpbWUpLAogICAgICAgICAgICBlbmREYXRlOiBuZXcgRGF0ZShpdGVtLmVuZFRpbWUpCiAgICAgICAgICB9OwogICAgICAgIH0pOwoKICAgICAgICAvLyAyNC4xMS4yMiDsiJjsoJUgLSDstpTqsIAKICAgICAgICAvLyBzdGFydERhdGUg7Jet7Iic7Jy866GcIOygleugrAogICAgICAgIHRoaXMuZXZlbnRzLnNvcnQoKGEsIGIpID0+IGIuc3RhcnREYXRlIC0gYS5zdGFydERhdGUpOwogICAgICAgIGNvbnNvbGUubG9nKCJQcm9jZXNzZWQgZXZlbnRzOiIsIHRoaXMuZXZlbnRzKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gZmV0Y2ggZXZlbnRzIGRhdGE6IiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8gMjQuMTEuMjIg7IiY7KCVIC0g7LaU6rCACiAgICBmaWx0ZXJlZEV2ZW50cyh0YWIpIHsKICAgICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICB0b2RheS5zZXRIb3VycygwLCAwLCAwLCAwKTsgLy8g7Iuc6rCEIDAwOjAwOjAwIOyEpOyglQoKICAgICAgcmV0dXJuIHRoaXMuZXZlbnRzLmZpbHRlcihldmVudCA9PiB7CiAgICAgICAgY29uc3Qgc3RhcnREYXRlID0gbmV3IERhdGUoZXZlbnQuc3RhcnREYXRlKS5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgICBjb25zdCBlbmREYXRlID0gbmV3IERhdGUoZXZlbnQuZW5kRGF0ZSkuc2V0SG91cnMoMCwgMCwgMCwgMCk7CiAgICAgICAgbGV0IHR5cGUgPSAiZ2FtZSI7CiAgICAgICAgaWYgKHN0YXJ0RGF0ZSA8PSB0b2RheSAmJiB0b2RheSA8PSBlbmREYXRlKSB7CiAgICAgICAgICB0eXBlID0gIuynhO2WieykkSI7CiAgICAgICAgfSBlbHNlIGlmIChlbmREYXRlIDwgdG9kYXkpIHsKICAgICAgICAgIHR5cGUgPSAi7KKF66OMIjsKICAgICAgICB9CiAgICAgICAgZXZlbnQudHlwZSA9IHR5cGU7IC8vIO2DgOyehSDshKTsoJUKCiAgICAgICAgLy8gMjQuMTEuMjYg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgLy8g7Jik64qYIOydtO2bhOydmCBzdGFydERhdGXripQg7ZWE7YSw66eBCiAgICAgICAgaWYgKHN0YXJ0RGF0ZSA+IHRvZGF5KSByZXR1cm4gZmFsc2U7CgogICAgICAgIC8vIO2VhO2EsOungQogICAgICAgIGlmICh0YWIgPT09ICLsoITssrQg7J2067Kk7Yq4IikgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKHRhYiA9PT0gIuynhO2WieykkSDsnbTrsqTtirgiICYmIGV2ZW50LnR5cGUgPT09ICLsp4TtlonspJEiKSByZXR1cm4gdHJ1ZTsKICAgICAgICBpZiAodGFiID09PSAi7KKF66OMIOydtOuypO2KuCIgJiYgZXZlbnQudHlwZSA9PT0gIuyiheujjCIpIHJldHVybiB0cnVlOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgc2VsZWN0VGFiKHRhYikgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGFiOwogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsgLy8gUmVzZXQgdG8gdGhlIGZpcnN0IHBhZ2Ugd2hlbiB0YWIgaXMgY2hhbmdlZAogICAgfSwKICAgIG5leHRQYWdlKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50UGFnZSA8IHRoaXMudG90YWxQYWdlcykgewogICAgICAgIHRoaXMuY3VycmVudFBhZ2UrKzsKICAgICAgfQogICAgfSwKICAgIHByZXZQYWdlKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50UGFnZSA+IDEpIHsKICAgICAgICB0aGlzLmN1cnJlbnRQYWdlLS07CiAgICAgIH0KICAgIH0sCiAgICBnb1RvUGFnZShwYWdlKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSBwYWdlOwogICAgfSwKICAgIHRvR29FdmVudERldGFpbChldmVudCkgewogICAgICBjb25zb2xlLmxvZygiTmF2aWdhdGluZyB0byBldmVudCBkZXRhaWwgd2l0aCBJRDoiLCBldmVudCk7IC8vIOy9mOyGlOyXkCBpZCDstpzroKUKCiAgICAgIC8vIDI0LjExLjIyIOy2lOqwgAogICAgICAvLyDsooXro4zrkJwg7J2067Kk7Yq47J28IOqyveyasCDtgbTrpq0g67Cp7KeACiAgICAgIGlmIChldmVudC50eXBlID09PSAi7KKF66OMIikgewogICAgICAgIGFsZXJ0KCLsooXro4zrkJwg7J2067Kk7Yq47J6F64uI64ukLiIpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogIi9ldmVudC1kZXRhaWwiLAogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICBpZDogZXZlbnQuaWQsCiAgICAgICAgICB0eXBlOiBldmVudC50eXBlCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["Header","RjZsWi","XFooter","taskStore","name","components","props","data","tabs","selectedTab","currentPage","itemsPerPage","events","arrowLeftImage","arrowRightImage","created","getEvents","computed","visiblePages","totalPages","maxVisiblePages","startPage","Math","max","floor","endPage","Array","from","length","_","i","ceil","filteredEvents","paginatedEvents","start","slice","methods","response","getSelectTasks","console","log","map","item","_item$startTime","_item$endTime","id","description","title","period","startTime","split","endTime","maskGroup","imageUrl","startDate","Date","endDate","sort","a","b","error","tab","today","setHours","filter","event","type","selectTab","nextPage","prevPage","goToPage","page","toGoEventDetail","alert","$router","push","path","query"],"sources":["src/components/EventList.vue"],"sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"events-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title_center\">\n        <div class=\"title pretendard-bold-log-cabin-38px\">이벤트</div>\n      </div>\n      <div class=\"events_wrap\">\n        <!-- Tabs section -->\n        <div class=\"events_tab\">\n          <!-- 24.12.19 수정 - 폰트 변경  -->\n          <div v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"selectTab(tab)\"\n            class=\"pretendard-medium-granite-gray-18px\" :class=\"['tab', { active: selectedTab === tab }]\">\n            {{ tab }}\n          </div>\n        </div>\n        <!-- 전체 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '전체 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 진행중 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '진행중 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 종료 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '종료 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box  pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div> -->\n\n        <!-- 24.11.22 수정 - 코드 간결하게 수정 및 type 나오도록 수정 -->\n        <div class=\"frame-7820\" v-for=\"tab in tabs\" :key=\"tab\" v-if=\"selectedTab === tab\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <!--  24.11.22 수정 - 추가  -->\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event)\" :class=\"{ 'disabled-card': event.type === '종료' }\">\n                <!-- 24.11.22 수정 -->\n                <!-- 24.12.19 수정 - 폰트 수정 -->\n                <div class=\"label-box pretendard-semi-bold-white-14px\" :class=\"{\n                  'label-progress': event.type === '진행중',\n                  'label-completed': event.type === '종료'\n                }\">\n                  {{ event.type }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Pagination controls -->\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <!-- 24.12.19 수정 - totalPages - visiblePages 변경 -->\n                <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"EventList\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      tabs: [\"전체 이벤트\", \"진행중 이벤트\", \"종료 이벤트\"],\n      selectedTab: \"전체 이벤트\",\n      currentPage: 1,\n      itemsPerPage: 6,\n      events: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n    };\n  },\n  created() {\n    this.getEvents();\n  },\n  computed: {\n    // filteredEvents() {\n    //   if (this.selectedTab === \"전체 이벤트\") {\n    //     return this.events;\n    //   } else if (this.selectedTab === \"진행중 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"진행중\");\n    //   } else if (this.selectedTab === \"종료 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"종료\");\n    //   }\n    // },\n    // totalPages() {\n    //   return Math.ceil(this.filteredEvents.length / this.itemsPerPage);\n    // },\n    // paginatedEvents() {\n    //   const start = (this.currentPage - 1) * this.itemsPerPage;\n    //   return this.filteredEvents.slice(start, start + this.itemsPerPage);\n    // },\n\n    // 24.12.19 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    // 24.11.22 수정 - 탭 적용\n    totalPages() {\n      return Math.ceil(this.filteredEvents(this.selectedTab).length / this.itemsPerPage);\n    },\n    paginatedEvents() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredEvents(this.selectedTab).slice(start, start + this.itemsPerPage);\n    },\n  },\n  methods: {\n    async getEvents() {\n      try {\n        // 서버에서 이벤트 데이터를 가져옵니다.\n        const response = await taskStore.getSelectTasks('events');\n        console.log(\"Fetched events data:\", response);\n\n        // 데이터를 가공하여 events 배열에 할당\n        this.events = response.map(item => ({\n          id: item.id,\n          description: item.title, // title을 description으로 사용\n          period: `${item.startTime?.split('T')[0]} ~ ${item.endTime?.split('T')[0]}`, // startTime과 endTime에서 날짜만 추출\n          maskGroup: item.imageUrl, // imageUrl을 maskGroup에 할당\n          // type: item.status, // 진행 상태 ('진행중', '종료' 등)\n          // 24.11.22 수정 - 추가\n          startDate: new Date(item.startTime),\n          endDate: new Date(item.endTime),\n        }));\n\n        // 24.11.22 수정 - 추가\n        // startDate 역순으로 정렬\n        this.events.sort((a, b) => b.startDate - a.startDate);\n\n        console.log(\"Processed events:\", this.events);\n      } catch (error) {\n        console.error(\"Failed to fetch events data:\", error);\n      }\n    },\n    // 24.11.22 수정 - 추가\n    filteredEvents(tab) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // 시간 00:00:00 설정\n\n      return this.events.filter(event => {\n        const startDate = new Date(event.startDate).setHours(0, 0, 0, 0);\n        const endDate = new Date(event.endDate).setHours(0, 0, 0, 0);\n        let type = \"game\";\n\n        if (startDate <= today && today <= endDate) {\n          type = \"진행중\";\n        } else if (endDate < today) {\n          type = \"종료\";\n        }\n\n        event.type = type; // 타입 설정\n\n        // 24.11.26 수정 - 추가\n        // 오늘 이후의 startDate는 필터링\n        if (startDate > today) return false;\n\n        // 필터링\n        if (tab === \"전체 이벤트\") return true;\n        if (tab === \"진행중 이벤트\" && event.type === \"진행중\") return true;\n        if (tab === \"종료 이벤트\" && event.type === \"종료\") return true;\n\n        return false;\n      });\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.currentPage = 1; // Reset to the first page when tab is changed\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n\n    toGoEventDetail(event) {\n      console.log(\"Navigating to event detail with ID:\", event); // 콘솔에 id 출력\n\n      // 24.11.22 추가\n      // 종료된 이벤트일 경우 클릭 방지\n      if (event.type === \"종료\") {\n        alert(\"종료된 이벤트입니다.\");\n        return;\n      }\n\n      this.$router.push({\n        path: \"/event-detail\",\n        query: { id: event.id, type: event.type }\n      });\n    }\n  },\n};\n</script>\n\n<style scoped src=\"@/style/community/eventlist.css\"></style>"],"mappings":"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","ignoreList":[]}]}