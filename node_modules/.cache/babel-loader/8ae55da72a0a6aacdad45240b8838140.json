{"remainingRequest":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js!/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js!/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js??ref--1-0!/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminStatistics.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminStatistics.vue","mtime":1734315885122},{"path":"/usr/vue/lezuro_all/babel.config.js","mtime":1728542743944},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js","mtime":1728542748260},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AdminHeader","AdminNavbar","Line","Bar","adminStore","Chart","ChartJS","Title","Tooltip","Legend","LineElement","LinearScale","BarElement","CategoryScale","PointElement","register","name","components","LineChart","data","chartData","labels","datasets","startDt","endDt","selectedTab","tabs","statistics","id","date","totalMembers","visitors","returningMembers","newMembers","returnRate","newVisitRate","pointData","title","value","borderClass","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","position","scales","x","grid","y","beginAtZero","min","max","ticks","stepSize","label","backgroundColor","graphData","graphOptions","computed","chartStyle","width","length","height","mounted","today","Date","formatDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","console","log","getStatistics","getTimeDt","getCourseDt","methods","selectTab","tab","initializeDates","initializeWeekDates","initializeMonthDates","initializeYearDates","dayOfWeek","getDay","diffToMonday","diffToSunday","monday","setDate","sunday","firstDayOfMonth","lastDayOfMonth","firstDayOfYear","lastDayOfYear","fetchDateRangeData","warn","getTask","JSON","stringify","times","start","end","combinedLabels","combinedData","weeklyData","d","dateKey","toISOString","split","usage","forEach","yearData","months","monthData","days","dayData","Object","keys","time","push","count","maxCount","Math","borderColor","fill","error","courses","map","course","courseName"],"sources":["src/components/admin/AdminStatistics.vue"],"sourcesContent":["<template>\n  <div class=\"all\">\n    <AdminHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <AdminNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">통계</h2>\n          </div>\n          <!-- Select box 부분 -->\n          <div class=\"search-box\">\n            <div class=\"date-search\">\n              <span class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                >날짜검색</span\n              >\n              <!-- 날짜 선택 부분 -->\n              <div class=\"tabs\">\n                <div\n                  v-for=\"tab in tabs\"\n                  :key=\"tab\"\n                  :class=\"[\n                    'tab-btn pretendard-regular-normal-mine-shaft-18px ',\n                    { active: selectedTab === tab },\n                  ]\"\n                  @click=\"selectTab(tab)\"\n                >\n                  {{ tab }}\n                </div>\n              </div>\n              <input\n                type=\"date\"\n                class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                v-model=\"startDt\"\n                @change=\"fetchDateRangeData\"\n              />\n              ~\n              <input\n                type=\"date\"\n                class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                v-model=\"endDt\"\n                @change=\"fetchDateRangeData\"\n              />\n            </div>\n            <div class=\"user-search\">\n              <span class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                >회원별 검색</span\n              >\n              <!-- select box -->\n\n              <select\n                class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n              >\n                <option value=\"\" disabled selected>전체등급</option>\n                <option value=\"tournament1\">등급 1</option>\n                <option value=\"tournament2\">등급 2</option>\n                <option value=\"tournament3\">등급 3</option>\n              </select>\n\n              <select\n                class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n              >\n                <option value=\"\" disabled selected>전체성별</option>\n                <option value=\"tournament1\">남자</option>\n                <option value=\"tournament2\">여자</option>\n              </select>\n              <select\n                class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n              >\n                <option value=\"\" disabled selected>전체나이</option>\n                <option value=\"tournament1\">나이1</option>\n                <option value=\"tournament2\">나이2</option>\n              </select>\n            </div>\n          </div>\n          <!-- 카드 -->\n          <div class=\"data-box\">\n            <div class=\"pretendard-bold-24px\">\n              전체회원 <span> {{ statistics[0].totalMembers }} </span>\n            </div>\n            <div class=\"point-cards\">\n              <div\n                v-for=\"(point, index) in pointData\"\n                :key=\"index\"\n                :class=\"['point-card', point.borderClass]\"\n              >\n                <span\n                  class=\"point-title pretendard-regular-normal-log-cabin-18px\"\n                  >{{ point.title }}</span\n                >\n                <span class=\"point-value pretendard-bold-normal-black-28px\"\n                  >{{ point.value }} {{ index < 3 ? \"명\" : \"%\" }}</span\n                >\n              </div>\n            </div>\n          </div>\n\n          <!-- 차트 -->\n          <div class=\"chart-title pretendard-medium-black-18px\">\n            시간대별 이용현황\n          </div>\n          <div\n            class=\"chart-container\"\n           \n          >\n            <LineChart\n           :style=\"chartStyle\"\n              :chart-data=\"{\n                labels: chartData.labels,\n                datasets: chartData.datasets,\n              }\"\n              :chartOptions=\"chartOptions\"\n            />\n          </div>\n\n          <!-- 차트 -->\n          <div class=\"chart-title pretendard-medium-black-18px\">\n            코스 이용 통계\n          </div>\n          <div class=\"graph-container\">\n            <Bar :chart-data=\"graphData\" :options=\"chartOptions\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AdminHeader from \"./AdminHeader.vue\";\nimport AdminNavbar from \"./AdminNavbar.vue\";\nimport { Line, Bar } from \"vue-chartjs\";\nimport { adminStore } from \"@/store/adminStore\"; // API 호출\n\nimport {\n  Chart as ChartJS,\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  LinearScale,\n  BarElement,\n  CategoryScale,\n  PointElement,\n} from \"chart.js\";\n\nChartJS.register(\n  Title,\n  Tooltip,\n  Legend,\n  LineElement,\n  LinearScale,\n  BarElement,\n  CategoryScale,\n  PointElement\n);\n\nexport default {\n  name: \"AdminStatistics\",\n  components: {\n    AdminHeader,\n    AdminNavbar,\n    LineChart: Line, // Line 차트를 LineChart로 등록\n    Bar, // Line 차트 컴포넌트를 등록\n  },\n  data() {\n    return {\n      chartData: {\n        labels: [],\n        datasets: [],\n      },\n      startDt: \"\",\n      endDt: \"\",\n      selectedTab: \"일간\",\n      tabs: [\"일간\", \"주간\", \"월간\", \"연간\"],\n      statistics: [\n        {\n          id: 1,\n          date: \"2024-10-31\",\n          totalMembers: 111,\n          visitors: 11,\n          returningMembers: 22,\n          newMembers: 33,\n          returnRate: 200,\n          newVisitRate: 300,\n        },\n      ],\n      pointData: [\n        { title: \"방문자 수\", value: 45, borderClass: \"blue-border\" },\n        { title: \"재방문자 수\", value: 555, borderClass: \"yellow-border\" },\n        { title: \"신규방문자 수\", value: 300, borderClass: \"red-border\" },\n        { title: \"신규 방문자율\", value: 30.33, borderClass: \"green-border\" },\n        {\n          title: \"일일 신규방문율\",\n          value: \"28.42%\",\n          borderClass: \"purple-border\",\n        },\n      ],\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n            },\n          },\n          y: {\n            beginAtZero: true,\n            min: 0, // 최소값 설정\n            max: 80, // 최대값 설정\n            ticks: {\n              stepSize: 1, // 눈금 간격 설정\n            },\n          },\n        },\n      },\n\n      chartData: {\n        labels: [\n          \"2024-10-01 /09시\",\n          \"10시\",\n          \"11시\",\n          \"12시\",\n          \"13시\",\n          \"14시\",\n          \"15시\",\n          \"16시\",\n          \"17시\",\n          \"18시\",\n        ],\n        datasets: [\n          {\n            label: \"시간대별 시간\",\n            backgroundColor: \"#184199\",\n            data: [0, 25, 100, 100, 110, 200, 225, 100, 50, 0],\n          },\n        ],\n      },\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        y: {\n          beginAtZero: true,\n          max: 400,\n        },\n      },\n\n      graphData: {\n        labels: [\n          \"코스A\",\n          \"코스B\",\n          \"코스C\",\n          \"코스D\",\n          \"코스E\",\n          \"코스F\",\n          \"코스G\",\n          \"코스H\",\n          \"코스I\",\n        ],\n        datasets: [\n          {\n            label: \"코스 이용 시간\",\n            backgroundColor: \"#8BA0CC\",\n            data: [160, 270, 180, 130, 210, 190, 135, 70, 140],\n          },\n        ],\n      },\n      graphOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            beginAtZero: true,\n          },\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    };\n  },\n  computed: {\n  chartStyle() {\n    return {\n      width: this.chartData.labels.length >= 8 ? `${200 * this.chartData.labels.length}px` : '100%',\n      height: '800px',\n    };\n  },\n},\n  mounted() {\n\n    const today = new Date();\n\n    // 오늘 날짜를 yyyy-mm-dd 형식으로 포맷하는 함수\n    const formatDate = (date) => {\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, \"0\"); // 월은 0부터 시작하므로 +1 필요\n      const day = String(date.getDate()).padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    };\n\n    // 오늘 날짜로 startDt와 endDt 초기화\n    this.startDt = formatDate(today);\n    this.endDt = formatDate(today);\n\n    console.log(\"일간 데이터 시작일:\", this.startDt, \"종료일:\", this.endDt);\n\n    // 통계 및 일간 데이터 불러오기\n    this.getStatistics();\n    this.getTimeDt(this.startDt, this.endDt);\n\n    // 코스 데이터는 고정된 기간으로 불러오기\n    this.getCourseDt(\"2024-01-01\", \"2024-12-31\");\n  },\n  methods: {\n    selectTab(tab) {\n      this.selectedTab = tab;\n\n      if (tab === \"일간\") {\n        this.initializeDates();\n        this.getTimeDt(this.startDt, this.endDt);\n      } else if (tab === \"주간\") {\n        this.initializeWeekDates();\n        this.getTimeDt(this.startDt, this.endDt);\n      } else if (tab === \"월간\") {\n        this.initializeMonthDates();\n        this.getTimeDt(this.startDt, this.endDt);\n      } else if (tab === \"연간\") {\n        this.initializeYearDates();\n        this.getTimeDt(this.startDt, this.endDt);\n      }\n    },\n    initializeDates() {\n      const today = new Date();\n      const formatDate = (date) => {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      };\n      this.startDt = formatDate(today);\n      this.endDt = formatDate(today);\n    },\n    initializeWeekDates() {\n      const today = new Date();\n      const dayOfWeek = today.getDay();\n      const diffToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\n      const diffToSunday = dayOfWeek === 0 ? 0 : 7 - dayOfWeek;\n\n      const monday = new Date(today);\n      monday.setDate(today.getDate() + diffToMonday);\n\n      const sunday = new Date(today);\n      sunday.setDate(today.getDate() + diffToSunday);\n\n      const formatDate = (date) => {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      };\n\n      this.startDt = formatDate(monday);\n      this.endDt = formatDate(sunday);\n    },\n    initializeMonthDates() {\n      const today = new Date();\n      const firstDayOfMonth = new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        1\n      );\n      const lastDayOfMonth = new Date(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        0\n      );\n\n      const formatDate = (date) => {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      };\n\n      this.startDt = formatDate(firstDayOfMonth);\n      this.endDt = formatDate(lastDayOfMonth);\n    },\n    initializeYearDates() {\n      const today = new Date();\n      const firstDayOfYear = new Date(today.getFullYear(), 0, 1);\n      const lastDayOfYear = new Date(today.getFullYear(), 11, 31);\n\n      const formatDate = (date) => {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      };\n\n      this.startDt = formatDate(firstDayOfYear);\n      this.endDt = formatDate(lastDayOfYear);\n    },\n    fetchDateRangeData() {\n      // 입력된 날짜가 유효한지 확인\n      if (this.startDt && this.endDt && this.startDt <= this.endDt) {\n        console.log(\"Fetching data for range:\", this.startDt, this.endDt);\n\n        // 선택된 날짜 범위로 데이터를 가져옴\n        this.getTimeDt(this.startDt, this.endDt);\n      } else {\n        console.warn(\n          \"Invalid date range. Ensure start date is before end date.\"\n        );\n      }\n    },\n    async getStatistics() {\n      this.statistics = await adminStore.getTask(`statistics/member`);\n      console.log(\"statistics : : : \", JSON.stringify(this.statistics));\n      this.pointData[0].value = this.statistics[0].visitors;\n      this.pointData[1].value = this.statistics[0].returningMembers;\n      this.pointData[2].value = this.statistics[0].newMembers;\n      this.pointData[3].value = this.statistics[0].returnRate;\n      this.pointData[4].value = this.statistics[0].newVisitRate;\n\n      // console.log(\"this.pointData.value : : : \" ,  this.pointData.value)\n      console.log(\"this.pointData.value : : : \", this.pointData);\n    },\n    async getTimeDt(startDt, endDt) {\n  try {\n    const times = await adminStore.getTask(\n      `statistics/time-usage?startDate=${startDt}&endDate=${endDt}`\n    );\n\n    const start = new Date(startDt);\n    const end = new Date(endDt);\n\n    const combinedLabels = [];\n    const combinedData = [];\n\n    const weeklyData = {};\n    for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n      const dateKey = d.toISOString().split(\"T\")[0];\n      weeklyData[dateKey] = [];\n    }\n\n    times.usage.forEach((yearData) => {\n      yearData.months.forEach((monthData) => {\n        monthData.days.forEach((dayData) => {\n          const dateKey = `${yearData.year}-${monthData.month.padStart(\n            2,\n            \"0\"\n          )}-${dayData.day.padStart(2, \"0\")}`;\n          if (weeklyData[dateKey]) {\n            weeklyData[dateKey] = dayData.times;\n          }\n        });\n      });\n    });\n\n    Object.keys(weeklyData).forEach((dateKey) => {\n      const dayData = weeklyData[dateKey];\n      dayData.forEach((time) => {\n        const label = `${dateKey} ${time.time}`;\n        combinedLabels.push(label);\n        combinedData.push(time.count);\n      });\n    });\n\n    // 데이터의 최대값 계산\n    const maxCount = Math.max(...combinedData, 0);\n\n    // 차트 데이터 및 옵션 업데이트\n    this.chartData = {\n      labels: combinedLabels,\n      datasets: [\n        {\n          label: \"시간대별 이용현황\",\n          backgroundColor: \"#184199\",\n          borderColor: \"#184199\",\n          data: combinedData,\n          fill: false,\n        },\n      ],\n    };\n\n    // Y축 최대값 동적으로 설정\n    this.chartOptions.scales.y.max = maxCount + 10; // 최대값보다 10 더 크게 설정\n    console.log(\"Updated chart options:\", this.chartOptions);\n\n  } catch (error) {\n    console.error(\"Error fetching time data:\", error);\n    this.chartData = { labels: [], datasets: [] };\n  }\n},\n    async getCourseDt(startDt, endDt) {\n      const courses = await adminStore.getTask(\n        `statistics/course-usage?startDate=${startDt}&endDate=${endDt}`\n      );\n      console.log(\"manager : : : \", courses);\n      this.graphData.labels = [];\n      this.graphData.datasets.data = [];\n      this.graphData.labels = courses.map((course) => course.courseName);\n      this.graphData.datasets[0].data = courses.map((course) => course.count);\n\n      console.log(\"this.graphData : : : :\", this.graphData);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background-color: #f5f6f6;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n.wrapper {\n  flex-grow: 1;\n  /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  width: 80%;\n  gap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* search-box */\n.search-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 190px;\n  width: 100%;\n}\n\n.tabs {\n  background-color: #fff;\n  display: flex;\n  gap: 10px;\n  height: 60px;\n}\n\n.tab-btn {\n  padding: 16px 30px;\n  border: 1px solid #ddd;\n  gap: 10px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n}\n\n.tab-btn.active {\n  background-color: #184199;\n  color: #fff;\n  display: flex;\n  align-items: center;\n}\n\n.date-search {\n  display: flex;\n  align-items: center;\n  height: 60px;\n  gap: 10px;\n}\n\n.date-search input {\n  width: 250px;\n  height: 60px;\n  border: 1px solid #ddd;\n  margin: 12px;\n  padding: 0 20px;\n}\n\n.user-search {\n  display: flex;\n  align-items: center;\n}\n\nselect {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 250px;\n  border: 1px solid #ddd;\n  margin: 12px;\n}\n\n.data-box {\n  background-color: #fff;\n  padding: 30px;\n  margin: 20px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 187px;\n  width: 100%;\n}\n\n.pretendard-bold-24px span {\n  color: #d30f1a;\n}\n\n.point-cards {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.point-card {\n  flex: 1;\n  padding: 20px;\n  background-color: #fff;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.point-title {\n  display: block;\n  margin-bottom: 10px;\n}\n\n.point-value {\n  color: #333;\n}\n\n/* 개별 카드 테두리 색상 */\n.blue-border {\n  border-bottom: 4px solid #184199;\n}\n\n.yellow-border {\n  border-bottom: 4px solid #f4bc1c;\n}\n\n.red-border {\n  border-bottom: 4px solid #d30f1a;\n}\n\n.green-border {\n  border-bottom: 4px solid #4caf50;\n}\n\n.purple-border {\n  border-bottom: 4px solid #9c27b0;\n}\n\n.chart-container {\n  width: 100%;\n  background-color: #fff;\n  margin-bottom: 20px;\n  overflow-x: auto; /* X축 스크롤 활성화 */\n  white-space: nowrap; /* 캔버스가 줄바꿈되지 않도록 설정 */\n}\n\n.chart-container canvas {\n  max-height: 800px;\n  display: inline-block; /* 캔버스를 가로 정렬 */\n}\n\n.chart-title {\n  background-color: #fff;\n  padding: 20px;\n  height: 63px;\n  width: 100%;\n  border-bottom: 0.5px solid #ccc;\n}\n\n.graph-container {\n  max-width: 100%;\n  height: auto;\n  padding: 30px;\n  background-color: #fff;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}