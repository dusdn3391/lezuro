{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/ContactWrite.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/ContactWrite.vue","mtime":1734661234110},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ContactWrite.vue"],"names":[],"mappings":";AAgfile":"ContactWrite.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"contact-write screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">1:1문의</div>\n      <div class=\"content-wrap\">\n        <div class=\"write-wrap\">\n          <!-- 제목 입력 -->\n          <div class=\"title-box\">\n            <!-- 24.11.13 수정 - input,textarea, select font 수정 -->\n            <div class=\"content-title pretendard-medium-black-18px\">제목</div>\n            <input type=\"text\" v-model=\"title\" placeholder=\"제목을 입력해주세요\"\n              class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\" />\n          </div>\n\n          <!-- 매장 선택 -->\n          <div class=\"select-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">매장</div>\n            <div class=\"branch-select-container pretendard-regular-normal-mountain-mist-16px\">\n              <select class=\"pretendard-regular-normal-mine-shaft-16px\" v-model=\"selectedBranchId\" @click=\"getGameshop\">\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"\" disabled>매장명 선택</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" v-for=\"shop in shopOptions\" :key=\"shop.id\"\n                  :value=\"shop.id\">\n                  {{ shop.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n\n          <!-- 내용 입력 -->\n          <div class=\"content-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">내용</div>\n            <textarea v-model=\"content\" placeholder=\"내용을 입력해주세요\"\n              class=\"frame-7281-9 pretendard-regular-normal-mine-shaft-16px\"></textarea>\n          </div>\n\n          <!-- 파일 업로드 -->\n          <div class=\"title-box\">\n            <div class=\"content-title pretendard-medium-black-18px\">파일</div>\n            <div class=\"file-align\">\n              <div class=\"frame-7487-4\">\n                <label for=\"file-upload\" class=\"file-upload-label\">\n                  <img class=\"fluentfolder-20-filled-4\"\n                    src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                    alt=\"fluent:folder-20-filled\" />\n                </label>\n                <!-- 24.12.20 수정 - 폰트 추가 -->\n                <input id=\"file-upload\" type=\"file\" accept=\"image/*\" @change=\"onFileChange\"\n                  class=\"pretendard-regular-normal-mine-shaft-14px\" />\n                <div class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\">\n                  <!-- {{ selectedFileName }} -->\n                  <!-- 24.12.20 수정 -->\n                  <!-- {{ selectedFileName || (imageUrl ? imageUrl.split('/').pop() : '파일을 선택해주세요') }} -->\n                </div>\n\n              </div>\n              <!-- 24.12.20 수정 - 추가 : 미리보기  -->\n              <div class=\"image-preview\">\n                <img v-if=\"previewImageUrl\" :src=\"previewImageUrl\" alt=\"미리보기\" class=\"preview-image\" />\n              </div>\n            </div>\n          </div>\n\n          <!-- 버튼들 -->\n          <!-- 24.11.13 수정 -font style, align 변경 -->\n          <div class=\"frame-7859-3\">\n            <!-- 24.12.20 수정 - 폰트 수정 -->\n            <button class=\"cancel-btn pretendard-medium-white-18px\" @click=\"cancel\">취소하기</button>\n            <!-- 24.12.20 수정 - 폰트 수정, class 명 수정 -->\n            <button class=\"submit-btn pretendard-medium-white-18px\" @click=\"postContactDt\">확인하기</button>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { taskStore } from \"@/store/taskStore\";\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"ContactWrite\",\n  components: { Header, RjZsWi, XFooter },\n  data() {\n    return {\n      title: \"\",\n      selectedBranchId: \"\", // 단일 매장 선택\n      shopOptions: [], // 매장 목록\n      content: \"\",\n      file: null,\n      imageUrl: \"\", // 업로드된 이미지 URL 저장\n      selectedFileName: \"\",\n      previewImageUrl: '', // 24.12.20 수정 - 추가 : 미리보기 이미지 URL\n    };\n  },\n  props: [\"rJZsWIProps\"],\n  mounted() {\n    // this.getGameshop();\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    if (loginInfo && loginInfo.id) {\n      this.loginInfo = loginInfo;\n      console.log(\"초기화된 this.loginInfo:\", this.loginInfo);\n    } else {\n      console.warn(\"로그인 정보가 없습니다.\");\n    }\n  },\n  computed: {\n    selectedBranchName() {\n      // shopOptions에서 selectedBranchId와 일치하는 매장 이름 찾기\n      const selectedShop = this.shopOptions.find(\n        (shop) => shop.id === this.selectedBranchId\n      );\n      return selectedShop ? selectedShop.name : ''; // 매칭된 매장 이름 반환\n    },\n  },\n  methods: {\n    async getGameshop() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        const response = await axios.get(\"http://13.124.62.68:3000/api/v1/branch/list\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        this.shopOptions = response.data.map((shop) => ({\n          id: shop.id,\n          name: shop.name,\n        }));\n      } catch (error) {\n        console.error(\"매장 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n\n      // 24.12.20 수정 - 추가\n      this.selectedFileName = file.name\n\n      // 24.12.20 수정 - 추가 : 미리보기 처리\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewImageUrl = e.target.result; // 미리보기 이미지 URL 설정\n      };\n      reader.readAsDataURL(file);\n\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      // const response = await taskStore.postTask(\n      //   \"v1/files/presigned-url\",\n      //   params\n      // );\n      const token = localStorage.getItem(\"Token\");\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*',\n          'Authorization': `Bearer ` + token\n        },\n      };\n      const response = await axios.post(\"http://13.124.62.68:3000/api/v1/files/presigned-url\", params, config);\n\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response.data.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n\n    async postContactDt() {\n      // 필수 입력 항목 체크\n      if (!this.title || !this.content || !this.selectedBranchId) {\n        alert(\"모든 필수 항목을 입력해주세요.\");\n        return;\n      }\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      const userId = loginInfo ? loginInfo.id : null;\n\n      if (!userId) {\n        alert(\"로그인 정보가 없습니다. 다시 로그인 해주세요.\");\n        return;\n      }\n\n      try {\n        // const params ={}\n        console.log(\"this.imageUr : : :\", this.selectedBranchName)\n\n        const params = this.imageUrl\n          ? {\n            title: this.title,\n            content: this.content,\n            branchId: parseInt(this.selectedBranchId),\n            branchName: this.selectedBranchName,\n            userId: parseInt(userId),\n            imageUrl: this.imageUrl, // 업로드된 이미지 URL\n            user_name: this.loginInfo.name,\n          }\n          : {\n            title: this.title,\n            content: this.content,\n            branchId: parseInt(this.selectedBranchId),\n            branchName: this.selectedBranchName,\n            userId: parseInt(userId),\n            user_name: this.loginInfo.name,\n          };\n\n\n        console.log(\"문의 등록 요청 데이터:\", params);\n        const token = localStorage.getItem(\"Token\");\n        const response = await axios.post(\n          \"http://13.124.62.68:3000/api/inquiries\",\n          params,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        alert(\"등록이 완료되었습니다.\");\n\n        // 24.11.25 수정 - 추가\n        // 폼 초기화\n        this.title = \"\";\n        this.content = \"\";\n        this.selectedBranchId = \"\";\n        this.selectedFileName = \"\";\n        this.imageUrl = \"\"; // 이미지 URL 초기화\n        this.file = null; // 파일도 초기화\n        // window.location.reload();\n        // this.$router.push({ path: \"/myprofile\" });\n        // 24.12.11 수정 - 추가\n        this.$router.push({\n          path: \"/myprofile\",\n          query: { tab: \"1:1 문의내역\" }\n        });\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n\n    cancel() {\n      this.$router.push({ path: \"/myprofile\" });\n    },\n  },\n};\n</script>\n\n\n<style scoped src=\"@/style/cs/contactwrite.css\"></style>\n"]}]}