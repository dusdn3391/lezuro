{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerHeader.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerHeader.vue","mtime":1735528668970},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/thread-loader/dist/cjs.js","mtime":1728542748260},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIZWFkZXJDb21wb25lbnQnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc0xvZ2dlZEluOiBmYWxzZSwgLy8g66Gc6re47J24IOyDge2DnAogICAgICBhY3RpdmVNZW51OiAnJywgLy8g7ZiE7J6sIO2ZnOyEsSDrqZTribQg7ZWt66qpCiAgICAgIHVzZXJOYW1lIDogJycsCiAgICAgIGNudCA6IDAKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g66Gc6re47J24IOyDge2DnOulvCDtmZXsnbggKOyYiDog66Gc7LusIOyKpO2GoOumrOyngOyXkOyEnCDthqDtgbAg7ZmV7J24KQogICAgY29uc3QgbWFuYWdlclRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIm1hbmFnZXJUb2tlbiIpOwogICAgCiAgICBjb25zb2xlLmxvZygibWFuYWdlclRva2VuIDogOiA6ICIgLCBtYW5hZ2VyVG9rZW4pCiAgICAgCiAgICBpZihtYW5hZ2VyVG9rZW4pewogICAgCiAgICAgIHRoaXMuaXNMb2dnZWRJbiA9ICB0cnVlOwogICAgICAvLyBjb25zb2xlLmxvZygibG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xvZ2luSW5mbycpIDogOiA6IiAsbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xvZ2luSW5mbycpKQogICAgICBjb25zdCBtYW5hZ2VySW5mbyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ21hbmFnZXJJbmZvJykpOwogICAgICBjb25zb2xlLmxvZygibWFuYWdlclRva2VuIDogOiA6ICIgLCBtYW5hZ2VySW5mbykgICAgICAKICAgICAgdGhpcy5jaGVja0F1dGgobWFuYWdlckluZm8uaWQsIG1hbmFnZXJUb2tlbikKICAgICAgY29uc3QgaXNGaXJzdExvZ2luID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImlzRmlyc3RMb2dpbiIpOwogICAgICBpZiAoaXNGaXJzdExvZ2luID09PSAidHJ1ZSIpIHsKICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiaXNGaXJzdExvZ2luIiwgImZhbHNlIik7IC8vIOyDiOuhnOqzoOy5qCDtm4Qg7ZSM656Y6re466W8IGZhbHNl66GcIOuzgOqyvQogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgfQogICAgfWVsc2V7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtwYXRoOiIvbWFuYWdlcmxvZ2luIn0pCiAgICAgIHRoaXMuaXNMb2dnZWRJbiA9ICBmYWxzZTsKICAgIH0KICAgIC8vIHNldFRpbWVvdXQoKCkgPT4gewogICAgLy8gICAgICAgdGhpcy5sb2dPdXQoKTsgLy8g66Gc6re47JWE7JuDIOuplOyEnOuTnCDtmLjstpwKICAgIC8vICAgICB9LCA2MCAqIDYwICogMTAwMCk7IC8vIDHsi5zqsIQgPSA2MOu2hCAqIDYw7LSIICogMTAwMOuwgOumrOy0iAogICAgCiAgICAKCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBjaGVja0F1dGgoaWR4LCB0b2tlbnMpewogICAgCiAgICB0cnkgewogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHBzOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL2FkbWluaXN0cmF0b3JzLyR7aWR4fWAsIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dG9rZW5zfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZSA6IDogOiA6ICIgLCByZXNwb25zZSkKICAgICAgICAgIC8vIHRoaXMuZ2V0UmVmcmVzaFRva2VuKHRva2VucykKCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIu2GoO2BsCDqsLHsi6Ag7JeQ65+sOiIsIGVycm9yKTsKICAgICAgICAgIC8vIOyXrOq4sOyEnCDrpqztlITroIjsi5wg7Yag7YGwIOuwjyDsl5HshLjsiqQg7Yag7YGwIOyerCDqsLHsi6AKICAgICAgICAgIHRoaXMubG9nT3V0KCk7CiAgICAgICAgICAvLyAgdGhpcy5nZXRSZWZyZXNoVG9rZW4oaWR4LHRva2VucykKICAgICAgICAgIC8vICAgLnRoZW4oKGRhdGEpID0+IHsKICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygi6rCx7Iug65CcIOuNsOydtO2EsDoiLCBkYXRhKTsKICAgICAgICAgIC8vICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbWFuYWdlclRva2VuJywgZGF0YS50b2tlbik7fSk7CiAgICAgICAgICAvLyAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImlzRmlyc3RMb2dpbiIsICJ0cnVlIik7IAogICAgICAgICAgICAvLyAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgIAogICAgICAgICAgdGhyb3cgZXJyb3I7IC8vIOyXkOufrOulvCDtmLjstpztlZwg6rOz7Jy866GcIOuLpOyLnCDrjZjsp5AKICAgICAgICB9CiAgIH0sCiAgICBzZXRBY3RpdmVNZW51KG1lbnUpIHsKICAgICAgdGhpcy5hY3RpdmVNZW51ID0gbWVudTsgLy8g7YG066at7ZWcIOuplOuJtCDtla3rqqnsnYQg7Zmc7ISx7ZmUCiAgICB9LAogICAgbG9nT3V0KCl7CiAgICAgIAogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgibWFuYWdlclRva2VuIik7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCJtYW5hZ2VySW5mbyIpOwogICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICB9LAogICAgYXN5bmMgZ2V0UmVmcmVzaFRva2VuKGlkeCx0b2tlbnMpewogICAgICBjb25zb2xlLmxvZygi7J206rGw7YOA64KY7JqUPyIrIHRva2VucykKICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwczovLzEzLjEyNC42Mi42ODozMDAwL2FwaS92MS9hdXRoL3JlZnJlc2gvJHtpZHh9YCwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAvLyAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0b2tlbnN9YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pOwogICAgICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlPyIgLCBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpCgogICAgICAgICAgLy8gUmVzcG9uc2Ug7JiI7KCcOiAKICAgICAgICAgIC8vIHsidG9rZW4iOiIuLi4iLCAicmVmcmVzaFRva2VuIjoiLi4uIiwgInRva2VuRXhwaXJlcyI6Li4ufQoKICAgICAgICAgIC8vIO2VhOyalO2VnCDrjbDsnbTthLDrp4wg66as7YS0CiAgICAgICAgICBjb25zdCB7IHRva2VuLCByZWZyZXNoVG9rZW4sIHRva2VuRXhwaXJlcyB9ID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgICBjb25zb2xlLmxvZygi7IOI66Gc7Jq0IO2GoO2BsDoiLCB0b2tlbik7CiAgICAgICAgICBjb25zb2xlLmxvZygi7IOI66Gc7Jq0IOumrO2UhOugiOyLnCDthqDtgbA6IiwgcmVmcmVzaFRva2VuKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCLthqDtgbAg66eM66OMIOyLnOqwhDoiLCB0b2tlbkV4cGlyZXMpOwoKICAgICAgICAgIC8vIOqwneyytCDtmJXtg5zroZwg66as7YS0CiAgICAgICAgICByZXR1cm4geyB0b2tlbiwgcmVmcmVzaFRva2VuLCB0b2tlbkV4cGlyZXMgfTsKCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIu2GoO2BsCDqsLHsi6Ag7JeQ65+sOiIsIGVycm9yKTsKICAgICAgICAgIHRocm93IGVycm9yOyAvLyDsl5Drn6zrpbwg7Zi47Lac7ZWcIOqzs+ycvOuhnCDri6Tsi5wg642Y7KeQCiAgICAgICAgfQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["ManagerHeader.vue"],"names":[],"mappings":";AAoBA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ManagerHeader.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n  <header>\n    <div class=\"center\">\n    <!-- 로고 섹션 -->\n    <div class=\"logo-container\">\n      <img src=\"../../../img/lezuro-logo-white-2-3@2x.png\" alt=\"Logo\" class=\"logo-image\" />\n    </div>\n    <!-- 우측 메뉴 섹션 -->\n    <div class=\"menu-container\">\n      <div class=\"menu-link\" @click=\"$router.push('/')\">\n        <img src=\"../../../img/Vector-2.png\" alt=\"\" >\n        홈페이지</div>\n      <span class=\"separator\">|</span>\n      <div class=\"menu-link\" @click=\"logOut()\">로그아웃</div>\n    </div>\n    </div>\n  </header>\n</template>\n\n<script>\nimport axios from 'axios';\n\n\nexport default {\n  name: 'HeaderComponent',\n  data() {\n    return {\n      isLoggedIn: false, // 로그인 상태\n      activeMenu: '', // 현재 활성 메뉴 항목\n      userName : '',\n      cnt : 0\n    };\n  },\n  mounted() {\n    // 로그인 상태를 확인 (예: 로컬 스토리지에서 토큰 확인)\n    const managerToken = localStorage.getItem(\"managerToken\");\n    \n    console.log(\"managerToken : : : \" , managerToken)\n     \n    if(managerToken){\n    \n      this.isLoggedIn =  true;\n      // console.log(\"localStorage.getItem('loginInfo') : : :\" ,localStorage.getItem('loginInfo'))\n      const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n      console.log(\"managerToken : : : \" , managerInfo)      \n      this.checkAuth(managerInfo.id, managerToken)\n      const isFirstLogin = localStorage.getItem(\"isFirstLogin\");\n      if (isFirstLogin === \"true\") {\n        localStorage.setItem(\"isFirstLogin\", \"false\"); // 새로고침 후 플래그를 false로 변경\n        window.location.reload();\n      }\n    }else{\n      this.$router.push({path:\"/managerlogin\"})\n      this.isLoggedIn =  false;\n    }\n    // setTimeout(() => {\n    //       this.logOut(); // 로그아웃 메서드 호출\n    //     }, 60 * 60 * 1000); // 1시간 = 60분 * 60초 * 1000밀리초\n    \n    \n\n  },\n  methods: {\n    async checkAuth(idx, tokens){\n    \n    try {\n          const response = await axios.get(`https://13.124.62.68:3000/api/administrators/${idx}`, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${tokens}`,\n            },\n          });\n          console.log(\"response : : : : \" , response)\n          // this.getRefreshToken(tokens)\n\n        } catch (error) {\n          console.error(\"토큰 갱신 에러:\", error);\n          // 여기서 리프레시 토큰 및 엑세스 토큰 재 갱신\n          this.logOut();\n          //  this.getRefreshToken(idx,tokens)\n          //   .then((data) => {\n          //     console.log(\"갱신된 데이터:\", data);\n          //     localStorage.setItem('managerToken', data.token);});\n          //     localStorage.setItem(\"isFirstLogin\", \"true\"); \n            //   window.location.reload();\n          \n          throw error; // 에러를 호출한 곳으로 다시 던짐\n        }\n   },\n    setActiveMenu(menu) {\n      this.activeMenu = menu; // 클릭한 메뉴 항목을 활성화\n    },\n    logOut(){\n      \n      localStorage.removeItem(\"managerToken\");\n      localStorage.removeItem(\"managerInfo\");\n      window.location.reload();\n    },\n    async getRefreshToken(idx,tokens){\n      console.log(\"이거타나요?\"+ tokens)\n      try {\n          const response = await axios.get(`https://13.124.62.68:3000/api/v1/auth/refresh/${idx}`, {\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Authorization': `Bearer ${tokens}`,\n            },\n          });\n          console.log(\"response?\" , JSON.stringify(response))\n\n          // Response 예제: \n          // {\"token\":\"...\", \"refreshToken\":\"...\", \"tokenExpires\":...}\n\n          // 필요한 데이터만 리턴\n          const { token, refreshToken, tokenExpires } = response.data;\n\n          console.log(\"새로운 토큰:\", token);\n          console.log(\"새로운 리프레시 토큰:\", refreshToken);\n          console.log(\"토큰 만료 시간:\", tokenExpires);\n\n          // 객체 형태로 리턴\n          return { token, refreshToken, tokenExpires };\n\n        } catch (error) {\n          console.error(\"토큰 갱신 에러:\", error);\n          throw error; // 에러를 호출한 곳으로 다시 던짐\n        }\n    },\n  }\n};\n</script>\n\n<style scoped>\nheader {\n  height: 90px;\n  background-color: #333;\n}\n.center{  display: flex;\n  align-items: center;\n    padding: 25px 41px;\n  justify-content: space-between;}\n.logo-container {\n  display: flex;\n  align-items: center;\n  margin-left:76px;\n}\n\n.logo-image {\n    width:126px;\n}\n\n.logo-text {\n  color: white;\n  margin-left: 10px;\n}\n\n.menu-container {\n  display: flex;\n  align-items: center;\n  color: white;\n}\n\n.menu-link {\n  color: white;\n  text-decoration: none;\n  margin: 0 15px;\n}\n\n.separator {\n  color: white;\n}\n</style>\n"]}]}