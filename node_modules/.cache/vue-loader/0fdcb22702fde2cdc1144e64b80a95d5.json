{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminCourseManagementWrite.vue?vue&type=style&index=0&id=308e1092&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminCourseManagementWrite.vue","mtime":1732085179386},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZG1pbi1tYW5hZ2VtZW50LWNvbnRhaW5lciB7CmJhY2tncm91bmQ6ICNmNWY2ZjY7CmRpc3BsYXk6IGZsZXg7CmhlaWdodDogMTAwJTsKZmxleC1kaXJlY3Rpb246IHJvdzsKfQoKLndyYXBwZXIgewpmbGV4LWdyb3c6IDE7CnBhZGRpbmc6IDMwcHg7CmdhcDogMjBweDsKfQoKLyog7YOA7J207YuAIOuwleyKpCAqLwoudGl0bGUtYm94IHsKd2lkdGg6IDEwMCU7CmJhY2tncm91bmQtY29sb3I6ICNmZmY7CnBhZGRpbmc6IDI0cHggMzBweDsKbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyogRm9ybSBTZWN0aW9uICovCi5jb3Vyc2UtbWFuYWdlbWVudC1mb3JtIHsKYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKcGFkZGluZzogMzBweDsKZGlzcGxheTogZmxleDsKZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKbWFyZ2luLWJvdHRvbTogMTBweDsKfQoKLmZvcm0tZ3JvdXAgewpkaXNwbGF5OiBmbGV4OwphbGlnbi1pdGVtczogY2VudGVyOwptYXJnaW4tYm90dG9tOiAyMHB4Owp9CgouZm9ybS1ncm91cCBsYWJlbCB7CndpZHRoOiAxNTBweDsKY29sb3I6ICMzMzM7Cn0KCi5mb3JtLWdyb3VwIGlucHV0ewpmbGV4LWdyb3c6IDE7CnBhZGRpbmc6IDEwcHg7CmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CmJvcmRlci1yYWRpdXM6IDRweDsKaGVpZ2h0OiA1MHB4Owp9CgouZm9ybS1ncm91cCBzZWxlY3QgewpwYWRkaW5nOiAxMHB4Owpib3JkZXI6IDFweCBzb2xpZCAjZGRkOwpib3JkZXItcmFkaXVzOiA0cHg7CndpZHRoOjI1MHB4OwpoZWlnaHQ6IDUwcHg7Cn0KLmZvcm0tZ3JvdXAgdGV4dGFyZWEgewpmbGV4LWdyb3c6IDE7CnBhZGRpbmc6IDEwcHg7CmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CmJvcmRlci1yYWRpdXM6IDRweDsKfQoKdGV4dGFyZWEgewpoZWlnaHQ6IDEyMHB4OyAvKiBMYXJnZXIgaGVpZ2h0IGZvciDqt5zsuZkgaW5wdXQgKi8KcmVzaXplOiB2ZXJ0aWNhbDsgLyogQWxsb3cgcmVzaXppbmcgKi8KfQoKLyogUmFuayBJbmZvcm1hdGlvbiBTZWN0aW9uICovCi5yYW5rLWluZm8gewpkaXNwbGF5OiBmbGV4OwphbGlnbi1pdGVtczogY2VudGVyOwpqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cm1hcmdpbi10b3A6IDIwcHg7Cm1hcmdpbi1ib3R0b206IDIwcHg7Cgp9CgoucmFuay1sYWJlbCB7CmNvbG9yOiAjMzMzOwptYXJnaW4tYm90dG9tOiAxMHB4Owp3aWR0aDoxNTBweDsKfQoKLnJhbmstY29udGFpbmVyIHsKYm9yZGVyOjFweCBzb2xpZCAjZGRkOwpwYWRkaW5nOjIwcHg7CmRpc3BsYXk6IGZsZXg7CndpZHRoOjkwJTsKanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwpnYXA6IDIwcHg7IC8qIEFkZHMgc3BhY2luZyBiZXR3ZWVuIHRoZSByYW5rIGNvbHVtbnMgKi8KfQoKLnJhbmstY29sdW1uIHsKZGlzcGxheTogZmxleDsKdGV4dC1hbGlnbjogY2VudGVyOwpmbGV4LWRpcmVjdGlvbjogY29sdW1uOwphbGlnbi1pdGVtczogY2VudGVyOwp9CgoucmFuay1jb2x1bW4gaW5wdXQgewp3aWR0aDogMTcwcHg7IC8qIEFkanVzdCB3aWR0aCBhcyBuZWVkZWQgKi8KaGVpZ2h0OiA0OHB4Owp0ZXh0LWFsaWduOiBjZW50ZXI7CmJhY2tncm91bmQtY29sb3I6ICNmNWY2ZjY7CmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7Cn0KCi5yYW5rLWNvbHVtbiAucmFuay1sYWJlbCB7Cm1hcmdpbi1ib3R0b206IDVweDsKY29sb3I6ICM1NTU7Cn0KLmNvdXJzZV9uYW1lewp3aWR0aDoxMDAlOwpwYWRkaW5nOjIwcHg7CmJvcmRlcjoxcHggc29saWQgI2RkZDsKfQouY291cnNlX25hbWUgaW5wdXR7d2lkdGg6MTAwJTt9Ci8qIEhvbGUgRGV0YWlscyBUYWJsZSAqLwouaG9sZS1kZXRhaWxzIHsKbWFyZ2luLXRvcDoyMHB4OwptYXJnaW4tYm90dG9tOiAyMHB4OwpkaXNwbGF5OiBmbGV4Owp9Ci5ob2xlLWRldGFpbHMgbGFiZWx7CndoaXRlLXNwYWNlOm5vd3JhcDsKbWFyZ2luLXJpZ2h0OjkwcHg7Cn0KCi5ob2xlLWRldGFpbHMgdGFibGUgewp3aWR0aDogMTAwJTsKYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKbWFyZ2luLXRvcDogMTBweDsKfQoKLmhvbGUtZGV0YWlscyB0aCwKLmhvbGUtZGV0YWlscyB0ZCB7CnBhZGRpbmc6IDEwcHg7CmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CnRleHQtYWxpZ246IGNlbnRlcjsKfQouaG9sZS1kZXRhaWxzIHRoewpwYWRkaW5nOjIzLjVweCA0MHB4OwpiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjQ7Cn0KCi5ob2xlLWRldGFpbHMgdHI6bnRoLWNoaWxkKDYpewpiYWNrZ3JvdW5kLWNvbG9yOiNmNGY0ZjQ7Cn0KLmhvbGUtZGV0YWlscyBpbnB1dCB7CndpZHRoOiA2MHB4OwpwYWRkaW5nOiA1cHg7CmJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CnRleHQtYWxpZ246IGNlbnRlcjsKYm9yZGVyLXJhZGl1czogNHB4Owp9Ci5jb3Vyc2VfbmFtZSBpbnB1dHt3aWR0aDoxMDAlOwogICAgICAgICAgICAgICAgaGVpZ2h0OjUwcHg7fQouaG9sZS1kZXRhaWxzIGltZyB7CndpZHRoOiAyMHB4OwpoZWlnaHQ6IDIwcHg7CmN1cnNvcjogcG9pbnRlcjsKfQoKLmJ1dHRvbi1ncm91cCB7CmRpc3BsYXk6IGZsZXg7Cmp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKbWFyZ2luLXRvcDogMjBweDsKfQoKLmJ1dHRvbi1ncm91cCBidXR0b24gewp3aWR0aDogNDcwcHg7CmhlaWdodDogNTBweDsKYm9yZGVyOiBub25lOwpjb2xvcjogI2ZmZjsKY3Vyc29yOiBwb2ludGVyOwp9CgouY2FuY2VsLWJ0biB7CmJhY2tncm91bmQtY29sb3I6ICNhMGEwYTA7Cn0KCi5jb25maXJtLWJ0biB7CmJhY2tncm91bmQtY29sb3I6ICMxODQxOTk7Cn0KCi5kZWxldGUtYnRuIHsKYmFja2dyb3VuZC1jb2xvcjogI2QzMGYxYTsKfQo="},{"version":3,"sources":["AdminCourseManagementWrite.vue"],"names":[],"mappings":";AA4WA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AdminCourseManagementWrite.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class=\"all\">\n    <AdminHeader />\n    <div class=\"wrap\">\n      <div class=\"admin-management-container\">\n        <AdminNavbar />\n        <div class=\"wrapper\">\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">코스 관리</h2>\n          </div>\n\n          <div class=\"course-management-form\">\n            <!-- Basic Course Information -->\n            <div class=\"form-group\">\n              <label for=\"course-name\">코스명</label>\n              <input type=\"text\" id=\"course-name\" v-model=\"courseName\" placeholder=\"코스명을 입력해주세요\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"region\">지역</label>\n              <input type=\"text\" id=\"region\" v-model=\"region\" placeholder=\"지역을 입력해주세요\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"total-distance\">총 거리</label>\n              <input type=\"number\" id=\"total-distance\" v-model.number=\"totalDistance\" placeholder=\"총 거리를 입력해주세요\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"difficulty\">난이도</label>\n              <select id=\"difficulty\" v-model=\"difficulty\">\n                <option disabled selected>코스 난이도</option>\n                <option value=\"Easy\">쉬움</option>\n                <option value=\"Medium\">중간</option>\n                <option value=\"Hard\">어려움</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"people-limit\">인원 제한</label>\n              <select id=\"people-limit\" v-model=\"maxPeople\">\n                <option disabled selected>제한</option>\n                <option value=\"no-limit\">무제한</option>\n                <option value=\"10\">10명</option>\n                <option value=\"20\">20명</option>\n              </select>\n            </div>\n\n\n          <div class=\"rank-info\">\n              <label class=\"rank-label\">평균타수</label>\n              <div class=\"rank-container\">\n                <div\n                  v-for=\"(rank, index) in ranks\"\n                  :key=\"index\"\n                  class=\"rank-column\"\n                >\n                  <div class=\"rank-label\">{{ rank.label }}</div>\n                  <input type=\"text\"  v-model=\"rankValues[index]\" :placeholder=\"rank.placeholder\"/>\n                </div>\n              </div>\n            </div>\n            <!-- Hole Details for First 9 Holes -->\n            <div class=\"hole-details\">\n              <label>홀 상세1</label>\n              <div class=\"course_name\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Hole</th>\n                      <th v-for=\"n in 9\" :key=\"'header1-' + n\">{{ n }}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <!-- Rows for Each Tee Box Color -->\n                    <tr v-for=\"(color, colorIndex) in colors\" :key=\"'color1-' + color\">\n                      <td>{{ color }}</td>\n                      <td v-for=\"hole in holes.slice(0, 9)\" :key=\"'hole1-' + hole.holeNumber\">\n                        <input type=\"number\" v-model.number=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\" />\n                      </td>\n                    </tr>\n                    <!-- PAR Row -->\n                    <tr>\n                      <td>PAR</td>\n                      <td v-for=\"hole in holes.slice(0, 9)\" :key=\"'par1-' + hole.holeNumber\">\n                        <input type=\"number\"  v-model.number=\"hole.par\" placeholder=\"PAR\" />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>MAP</td>\n                      <td v-for=\"(hole, index) in holes.slice(0, 9)\" :key=\"'map1-' + index\">\n  <div class=\"file-upload-container\" @click=\"triggerFileInput(index)\">\n    <!-- 미리보기 이미지 -->\n    <img v-if=\"selectedFiles[index]\" :src=\"selectedFiles[index]\" alt=\"map preview\" />\n    <!-- <img v-else-if=\"hole.teeBoxes[0].mapImage\" :src=\"hole.teeBoxes[0].mapImage\" alt=\"uploaded map\" /> -->\n    <img v-else src=\"../../../img/lets-icons_img-box-light.png\" alt=\"map\" />\n  </div>\n  <input\n    type=\"file\"\n    ref=\"fileInputs\"\n    @change=\"(event) => { handlePreview(event, index); onFileSelected(event, index); }\"\n    style=\"display: none\"\n  />\n</td>\n\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <!-- Hole Details for Second 9 Holes -->\n            <div class=\"hole-details\">\n              <label>홀 상세2</label>\n              <div class=\"course_name\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Hole</th>\n                      <th v-for=\"n in 9\" :key=\"'header2-' + (n + 9)\">{{ n + 9 }}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <!-- Rows for Each Tee Box Color -->\n                    <tr v-for=\"(color, colorIndex) in colors\" :key=\"'color2-' + color\">\n                      <td>{{ color }}</td>\n                      <td v-for=\"hole in holes.slice(9, 18)\" :key=\"'hole2-' + hole.holeNumber\">\n                        <input type=\"number\" v-model.number=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\" />\n                      </td>\n                    </tr>\n                    <!-- PAR Row -->\n                    <tr>\n                      <td>PAR</td>\n                      <td v-for=\"hole in holes.slice(9, 18)\" :key=\"'par2-' + hole.holeNumber\">\n                        <input type=\"number\" v-model.number=\"hole.par\" placeholder=\"PAR\" />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>MAP</td>\n                      <td v-for=\"(hole, index) in holes.slice(9, 18)\" :key=\"'map2-' + index\">\n  <div class=\"file-upload-container\" @click=\"triggerFileInput(index + 9)\">\n    <!-- 미리보기 이미지 -->\n    <img v-if=\"selectedFiles[index + 9]\" :src=\"selectedFiles[index + 9]\" alt=\"map preview\" />\n    <!-- <img v-else-if=\"hole.teeBoxes[0].mapImage\" :src=\"hole.teeBoxes[0].mapImage\" alt=\"uploaded map\" /> -->\n    <img v-else src=\"../../../img/lets-icons_img-box-light.png\" alt=\"map\" />\n  </div>\n  <input\n    type=\"file\"\n    ref=\"fileInputs\"\n    @change=\"(event) => { handlePreview(event, index, 9); onFileSelected(event, index, 9); }\"\n    style=\"display: none\"\n  />\n</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"course-rules\">규칙</label>\n              <textarea id=\"course-rules\" v-model=\"rules\" placeholder=\"규칙을 입력해주세요\"></textarea>\n            </div>\n            <!-- Image Upload -->\n            <div class=\"form-group\">\n              <label for=\"course-image\">대표 이미지</label>\n              <input type=\"file\" id=\"course-image\" @change=\"onImageChange\" />\n            </div>\n\n            <!-- Submit Button -->\n            <div class=\"button-group\">\n              <button class=\"confirm-btn\" @click=\"postCourseMg\">코스 등록</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from \"./AdminHeader.vue\";\nimport AdminNavbar from \"./AdminNavbar.vue\";\nimport { adminStore } from '@/store/adminStore';  // API 호출\nimport axios from \"axios\";\n\nexport default {\n  name: \"AdminCourseManagementWrite\",\n  components: {\n    AdminHeader,\n    AdminNavbar,\n  },\n  data() {\n    return {\n      selectedFiles: Array(18).fill(null),\n      courseName: '',\n      region: '',\n      totalDistance: 0,\n      difficulty: '',\n      maxPeople: 0,\n      imageUrl: \"\",\n      rules: '',\n      mainImage: '',\n      colors: [\"Black\", \"Blue\", \"White\", \"Yellow\", \"Red\"],\n       ranks: [\n        { label: \"등급1\", placeholder: \"70타\" },\n        { label: \"등급2\", placeholder: \"70타\" },\n        { label: \"등급3\", placeholder: \"70타\" },\n        { label: \"등급4\", placeholder: \"70타\" },\n        { label: \"등급5\", placeholder: \"70타\" },\n        { label: \"등급6\", placeholder: \"70타\" },\n      ],\n      \n        rankValues :[70,70,70,70,70,70],\n      // Holes structure with 18 holes, each containing 5 teeBoxes with different colors\n        holes: Array.from({ length: 18 }, (_, i) => ({\n        holeNumber: i + 1,\n        par: 0,\n        teeBoxes: [\n          { color: \"Black\", distance: \"\", par: 0, mapImage: \"string\" },\n          { color: \"Blue\", distance: \"\", par: 0, mapImage: \"string\" },\n          { color: \"White\", distance: \"\", par: 0, mapImage: \"string\" },\n          { color: \"Yellow\", distance: \"\", par: 0, mapImage: \"string\" },\n          { color: \"Red\", distance: \"\", par: 0, mapImage: \"string\" }\n        ]\n      }))\n    };\n  },\n  \n  methods: {\n    onImageChange(event) {\n      const file = event.target.files[0];\n      this.mainImage = file;\n    },\n    triggerFileInput(index) {\n      this.$refs.fileInputs[index].click();\n    },\n    handlePreview(event, index, offset = 0) {\n  const file = event.target.files[0];\n  if (file) {\n    const actualIndex = index + offset;\n    this.$set(this.selectedFiles, actualIndex, URL.createObjectURL(file));\n  }\n},\nasync onFileSelected(event, index, offset = 0) {\n  const file = event.target.files[0];\n  if (file) {\n    const actualIndex = index + offset;\n    // 프리사인 URL 요청 파라미터 설정\n    const params = {\n      fileName: file.name,\n      fileSize: file.size,\n      mimeType: file.type,\n    };\n\n    // 프리사인 URL 생성 및 S3 업로드\n    const response = await adminStore.postTask(\"v1/files/presigned-url\", params);\n    console.log(\"response : : : : :\" + JSON.stringify(response));\n\n    const url = response[response.length - 1]?.presignedUrl;\n    console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n    const urlName = new URL(url).origin + new URL(url).pathname\n    console.log(\"response.file.path : : : : :\" + JSON.stringify(urlName));\n\n    // S3 URL 저장\n    this.holes[actualIndex].teeBoxes[0].mapImage = new URL(url).origin + new URL(url).pathname;\n    console.log(\"this.holes[actualIndex].teeBoxes[0].mapImage : : : \", this.holes[actualIndex].teeBoxes[0].mapImage)\n    try {\n      // S3에 파일 업로드\n      await axios.put(url, file, {\n        headers: {\n          \"Content-Type\": file.type,\n        },\n      });\n      console.log(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  }\n},\n    async onImageChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await adminStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response[response.length - 1]?.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    // async \n    postCourseMg() {\n      console.log(\"Submitted rank values:\", this.holes);\n      const params = {\n        courseName: this.courseName,\n        region: this.region,\n        totalDistance: parseFloat(this.totalDistance) || 0,\n        difficulty: this.difficulty,\n        maxPeople: this.maxPeople === 'no-limit' ? -1 : parseInt(this.maxPeople) || 0,\n        rules: this.rules,\n        mainImage: this.imageUrl,\n        averageScores :this.rankValues.map(value => Number(value)),\n        holes: this.holes.map(hole => ({\n          holeNumber: hole.holeNumber,\n          par : hole.par,\n          teeBoxes: hole.teeBoxes.map(teeBox => ({\n            color: teeBox.color,\n            distance: parseInt(teeBox.distance) || 0,\n            par: hole.par,\n            mapImage: teeBox.mapImage\n          }))\n        }))\n      };\n      \n      console.log(\"params:\", params);\n      console.log(\"this.selectedFiles:\", this.selectedFiles);\n\n      try {\n        const res = adminStore.postTask('course-management', params);\n        console.log(\"API Response:\", res);\n        // if(res.hole.length > 1){\n          alert('코스 정보가 정상적으로 등록이 되었습니다.');\n          this.$router.replace('/admincourse-management')\n        // }else{\n        //   alert('정보를 다시 입력해 주세요.');\n        // }\n        \n      } catch (error) {\n        console.error(\"Error submitting course:\", error);\n        alert('Failed to submit course. Please try again.');\n        // this.$router.replace('/admincourse-management')\n      }\n\n    }\n  }\n};\n</script>\n\n \n<style scoped>\n.admin-management-container {\nbackground: #f5f6f6;\ndisplay: flex;\nheight: 100%;\nflex-direction: row;\n}\n\n.wrapper {\nflex-grow: 1;\npadding: 30px;\ngap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\nwidth: 100%;\nbackground-color: #fff;\npadding: 24px 30px;\nmargin-bottom: 20px;\n}\n\n/* Form Section */\n.course-management-form {\nbackground-color: #fff;\npadding: 30px;\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 10px;\n}\n\n.form-group {\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 20px;\n}\n\n.form-group label {\nwidth: 150px;\ncolor: #333;\n}\n\n.form-group input{\nflex-grow: 1;\npadding: 10px;\nborder: 1px solid #ddd;\nborder-radius: 4px;\nheight: 50px;\n}\n\n.form-group select {\npadding: 10px;\nborder: 1px solid #ddd;\nborder-radius: 4px;\nwidth:250px;\nheight: 50px;\n}\n.form-group textarea {\nflex-grow: 1;\npadding: 10px;\nborder: 1px solid #ddd;\nborder-radius: 4px;\n}\n\ntextarea {\nheight: 120px; /* Larger height for 규칙 input */\nresize: vertical; /* Allow resizing */\n}\n\n/* Rank Information Section */\n.rank-info {\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-top: 20px;\nmargin-bottom: 20px;\n\n}\n\n.rank-label {\ncolor: #333;\nmargin-bottom: 10px;\nwidth:150px;\n}\n\n.rank-container {\nborder:1px solid #ddd;\npadding:20px;\ndisplay: flex;\nwidth:90%;\njustify-content: space-between;\ngap: 20px; /* Adds spacing between the rank columns */\n}\n\n.rank-column {\ndisplay: flex;\ntext-align: center;\nflex-direction: column;\nalign-items: center;\n}\n\n.rank-column input {\nwidth: 170px; /* Adjust width as needed */\nheight: 48px;\ntext-align: center;\nbackground-color: #f5f6f6;\nborder: 1px solid #ddd;\n}\n\n.rank-column .rank-label {\nmargin-bottom: 5px;\ncolor: #555;\n}\n.course_name{\nwidth:100%;\npadding:20px;\nborder:1px solid #ddd;\n}\n.course_name input{width:100%;}\n/* Hole Details Table */\n.hole-details {\nmargin-top:20px;\nmargin-bottom: 20px;\ndisplay: flex;\n}\n.hole-details label{\nwhite-space:nowrap;\nmargin-right:90px;\n}\n\n.hole-details table {\nwidth: 100%;\nborder-collapse: collapse;\nmargin-top: 10px;\n}\n\n.hole-details th,\n.hole-details td {\npadding: 10px;\nborder: 1px solid #ddd;\ntext-align: center;\n}\n.hole-details th{\npadding:23.5px 40px;\nbackground-color:#f4f4f4;\n}\n\n.hole-details tr:nth-child(6){\nbackground-color:#f4f4f4;\n}\n.hole-details input {\nwidth: 60px;\npadding: 5px;\nborder: 1px solid #ddd;\ntext-align: center;\nborder-radius: 4px;\n}\n.course_name input{width:100%;\n                height:50px;}\n.hole-details img {\nwidth: 20px;\nheight: 20px;\ncursor: pointer;\n}\n\n.button-group {\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 20px;\n}\n\n.button-group button {\nwidth: 470px;\nheight: 50px;\nborder: none;\ncolor: #fff;\ncursor: pointer;\n}\n\n.cancel-btn {\nbackground-color: #a0a0a0;\n}\n\n.confirm-btn {\nbackground-color: #184199;\n}\n\n.delete-btn {\nbackground-color: #d30f1a;\n}\n</style>\n"]}]}