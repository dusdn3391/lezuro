{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerReservation.vue?vue&type=style&index=0&id=a41dfd9e&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerReservation.vue","mtime":1734938038112},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi8qIDI0LjEyLjIzIOyImOyglSAqLwoud3JhcHBlciB7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDMwcHg7CiAgICAvKiBnYXA6IDIwcHg7ICovCiAgICBoZWlnaHQ6IDEwMHZoOwp9CgovKiDtg4DsnbTti4Ag67CV7IqkICovCi50aXRsZS1ib3ggewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMzBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgovKiDrgqDsp5wg7ISg7YOdIOuwleyKpCAqLwouZGF0ZS1waWNrZXItYm94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7CiAgLyogMjQuMTIuMTEg7IiY7KCVIC0g7LaU6rCAICovCiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyogMjQuMTEuMTEg7IiY7KCVICovCi5kYXRlIHsKICB3aWR0aDogMjUwcHg7CiAgaGVpZ2h0OiA2MHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgcGFkZGluZzogMCAyMHB4Owp9CgovKiDrsKkg66as7Iqk7Yq4IOuwleyKpCAqLwoucm9vbS1saXN0LWJveCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMzBweDsKfQoKLyogMjQuMTIuMTEg7IiY7KCVIC0gd2lkdGgg7IKt7KCcICovCi50YWJzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIC8qIHdpZHRoOiA0MCU7ICovCiAgZGlzcGxheTogZmxleDsKICBnYXA6IDEwcHg7Cn0KCi50YWItYnRuIHsKICBmbGV4OiAxOwogIHBhZGRpbmc6IDE1cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJvcmRlcjogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwogIGN1cnNvcjogcG9pbnRlcjsKICB3aWR0aDogMTUwcHg7Cn0KCi50YWItYnRuLmFjdGl2ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMzM5OTsKICBjb2xvcjogI2ZmZjsKfQoKLyog7YWM7J2067iUIOyKpO2DgOydvCAqLwoudGFibGUtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93LXg6IGF1dG87Cn0KCnRhYmxlIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwp9Cgp0aCwKdGQgewogIHBhZGRpbmc6IDI2cHggMHB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKdGggewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7Cn0KCi5zdGF0dXMtcGVuZGluZyB7CiAgY29sb3I6ICNkMzBmMWE7CiAgYm9yZGVyOiAxcHggc29saWQgI2QzMGYxYTsKICB3aWR0aDogODBweDsKICBwYWRkaW5nOiAxMXB4IDBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8qIOyFgCDslYjsl5DshJwg7KSR7JWZ7JeQIOychOy5mO2VmOuPhOuhnSDrs4Dqsr0gKi8KICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgLyog7YWN7Iqk7Yq464+EIOqwgOyatOuNsCDsoJXroKwgKi8KfQoKLnN0YXR1cy1jb21wbGV0ZSB7CiAgY29sb3I6ICMxODQxOTk7CiAgYm9yZGVyOiAxcHggc29saWQgIzE4NDE5OTsKICB3aWR0aDogODBweDsKICBwYWRkaW5nOiAxMXB4IDBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLyogMjQuMTIuMTEg7IiY7KCVIC0g7IOJ7IOBIOuzgOqyvSAqLwouc3RhdHVzLWNhbmNlbCB7CiAgY29sb3I6ICMwMDAwMDA4MDsKICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwODA7CiAgd2lkdGg6IDgwcHg7CiAgcGFkZGluZzogMTFweCAwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi8qIDI0LjExLjExIOyImOyglSAqLwoucmVzZXJ2ZS1zdGF0dXMgewogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktcHJldGVuZGFyZC1zZW1pYm9sZCk7CiAgZm9udC13ZWlnaHQ6IDYwMDsKfQoKLyogMjQuMTIuMTEg7IiY7KCVIC0g7LaU6rCAICovCi5kaXNhYmxlZCB7CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7IC8qIO2BtOumrSDsnbTrsqTtirgg67mE7Zmc7ISx7ZmUICovCiAgb3BhY2l0eTogMC41OyAvKiDsi5zqsIHsoIHsnLzroZwg67mE7Zmc7ISx7ZmU65CcIOyDge2DnCDtkZztmIQgKi8KfQoKLnBhZ2luYXRpb24tY29udHJvbHMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZ2FwOiAyMHB4OwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDEwMCU7Cn0KCi8qIDI0LjExLjExIOyImOyglSAqLwoucGFnZS1udW1iZXJzIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZ2FwOiAyMHB4Owp9CgovKiAyNC4xMi4xMSDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVyIHsKICB3aWR0aDogNDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLyogMjQuMTIuMTEg7IiY7KCVICovCi5wYWdlLW51bWJlci5hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6ICNkMzBmMWE7CiAgY29sb3I6IHdoaXRlOwp9CgovKiAyNC4xMi4xMSDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVyOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOwp9CgoucGFnaW5hdGlvbi1hcnJvdyB7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoucGFnaW5hdGlvbi1hcnJvdy5kaXNhYmxlZCB7CiAgb3BhY2l0eTogMC41OwogIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0KCi5wYWdpbmF0aW9uLWFycm93LmZsaXBwZWQgewogIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7Cn0K"},{"version":3,"sources":["ManagerReservation.vue"],"names":[],"mappings":";AA2YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ManagerReservation.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">예약 접수 관리</h2>\n          </div>\n\n          <!-- 날짜 선택 부분 -->\n          <div class=\"date-picker-box\">\n            <input\n              type=\"date\"\n              class=\"date pretendard-regular-normal-mine-shaft-18px\"\n              v-model=\"selectedDate\"\n            />\n          </div>\n\n          <!-- 룸 리스트 부분 -->\n          <div class=\"room-list-box\">\n            <div class=\"tabs\">\n              <button\n                v-for=\"tab in tabs\"\n                :key=\"tab\"\n                :class=\"[\n                  'tab-btn pretendard-semibold-mountain-mist-16px',\n                  { active: selectedTab === tab },\n                ]\"\n                @click=\"selectTab(tab)\"\n              >\n                {{ tab }}\n              </button>\n            </div>\n\n            <!-- 테이블 리스트 -->\n            <div class=\"table-container\">\n              <table>\n                <thead>\n                  <!-- 24.12.11 수정 - 폰트 추가 -->\n                  <tr class=\"pretendard-bold-mine-shaft-18px\">\n                    <th><input type=\"checkbox\" /></th>\n                    <th>번호</th>\n                    <th>예약자</th>\n                    <th>연락처</th>\n                    <th>인원</th>\n                    <!-- 24.12.11 수정 -->\n                    <th>예약일시</th>\n                    <th>상태</th>\n                    <!-- <th>접수 시간</th> -->\n                  </tr>\n                </thead>\n                <tbody>\n                  <!-- 24.11.11 font style 수정 -->\n                  <tr\n                    v-for=\"(reservation, index) in paginatedReservations\"\n                    :key=\"index\"\n                    class=\"pretendard-regular-normal-granite-gray-18px\"\n                  >\n                    <td><input type=\"checkbox\" /></td>\n                    <td>{{ reservation.id }}</td>\n                    <td>{{ reservation.reser_user }}</td>\n                    <td>{{ reservation.reser_phone }}</td>\n                    <td>{{ reservation.member }}</td>\n                    <td>\n                      <!-- 24.12.11 수정 -->\n                      {{ reservation.startTime.split(\"T\")[0] }} \n                      ({{ reservation.startTime.split(\"T\")[1].slice(0, 5) }} -\n                      {{ reservation.endTime.split(\"T\")[1].slice(0, 5) }})\n                    </td>\n                    <!-- 24.11.11 수정 -->\n                     <!-- 24.12.11 수정 - :class 추가  -->\n                    <td class=\"reserve-status\" @click=\"showModal(reservation.id, reservation.status)\" \n                     :class=\"{'disabled': isPastReservation(reservation.startTime)}\">\n                      <span :class=\"statusClass(reservation.status)\">\n                        {{\n                          reservation.status === \"confirm\"\n                            ? \"예약완료\"\n                            : reservation.status === \"cancel\"\n                              ? \"예약취소\"\n                              : \"접수중\"\n                        }}</span>\n                    </td>\n\n                    <!-- <td>{{ reservation.startTime.split(\"T\")[0] }}</td> -->\n                  </tr>\n                </tbody>\n              </table>\n              <ManagerReservationConformModal\n                v-if=\"isModalVisible\"\n                :reserId=\"reserId\"\n                :reserStatus=\"reserStatus\"\n                @close=\"closeModal\"\n                @confirm=\"confirmModal\"\n              />\n            </div>\n\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <!-- 24.12.11 수정 - 폰트 수정 -->\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <!-- 24.12.11 수정 - totalPages - visiblePages 변경 -->\n                <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img\n                class=\"pagination-arrow flipped\"\n                @click=\"nextPage\"\n                :src=\"arrowRightImage\"\n                :alt=\"'Next'\"\n                :class=\"{ disabled: currentPage === totalPages }\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport { managerStore } from \"@/store/managerStore\"; // API 호출\nimport ManagerReservationConformModal from \"./ManagerReservationConformModal.vue\";\n\nexport default {\n  name: \"ManagerReservation\",\n  components: {\n    ManagerReservationConformModal,\n    ManagerHeader,\n    ManagerNavbar,\n  },\n  data() {\n    return {\n      reserId: 0,\n      reserStatus: \"\",\n      selectedDate: \"\",\n      selectedTab: \"전체\",\n      tabs: [\"전체\", \"접수중\", \"예약완료\", \"예약취소\"],\n      isModalVisible: false,\n      reservations: [ ],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      currentPage: 1,\n      itemsPerPage: 5, // Display 6 courses per page\n      currentPage: 1, // 현재 페이지\n    };\n  },\n  watch: {\n    // selectedDate 변경 시 호출\n    selectedDate(newDate) {\n      if (newDate) {\n        console.log(\"날짜 선택됨:\", newDate);\n        this.getReservationsDt(newDate); // 날짜에 따라 API 호출\n      } else {\n        console.log(\"날짜 선택 안됨, 전체 데이터 호출\");\n        this.getReservationDt(); // 전체 데이터 호출\n      }\n    },\n  },\n  computed: {\n    filteredReservations() {\n      if (this.selectedTab === \"전체\") {\n        return this.reservations; // 모든 예약 표시\n      }\n      return this.reservations.filter((reservation) => {\n        // 상태에 따라 필터링\n        if (this.selectedTab === \"접수중\")\n          return reservation.status === \"waiting\";\n        if (this.selectedTab === \"예약완료\")\n          return reservation.status === \"confirm\";\n        if (this.selectedTab === \"예약취소\")\n          return reservation.status === \"cancel\";\n      });\n    },\n    // 24.12.11 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    paginatedReservations() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredReservations.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredReservations.length / this.itemsPerPage);\n    },\n  },\n  mounted() {\n    this.getReservationDt();\n  },\n  methods: {\n     // 24.12.11 수정 - 추가 : 현재시간 이전 예약 수정 불가\n     isPastReservation(startTime) {\n      // 현재 시간 구하기\n      const now = new Date();\n      // 예약 시작 시간 변환\n      const reservationStartTime = new Date(startTime);\n      // 예약이 현재 시간 이후인지 확인\n      return now > reservationStartTime;\n    },\n// 예약 취소 알림 \nasync confirmMsg() {\n  const managerInfo = JSON.parse(localStorage.getItem(\"managerInfo\"));\n  console.log(\"[confirmMsg] Manager Info:\", managerInfo);\n\n  const params = {\n    phoneNumber: this.reservations.find((res) => res.id === this.reserId).reser_phone,\n    userName: this.reservations.find((res) => res.id === this.reserId).reser_user,\n    availableTime: `${this.reservations.find((res) => res.id === this.reserId).startTime.split(\"T\")[1].slice(0, 5)} ~ ${this.reservations.find((res) => res.id === this.reserId).endTime.split(\"T\")[1].slice(0, 5)}`,\n    storeName: managerInfo.identifier,\n  };\n\n  console.log(\"[confirmMsg] Sending params:\", params);\n\n  try {\n    const response = await managerStore.postTask(`v1/sms/confirmReservation`, params);\n    console.log(\"[confirmMsg] Response received:\", response);\n  } catch (error) {\n    console.error(\"[confirmMsg] API call failed:\", error);\n  }\n},\n\nasync cancelMsg() {\n  const managerInfo = JSON.parse(localStorage.getItem(\"managerInfo\"));\n  console.log(\"[cancelMsg] Manager Info:\", managerInfo);\n\n  const params = {\n    phoneNumber: this.reservations.find((res) => res.id === this.reserId).reser_phone,\n    userName: this.reservations.find((res) => res.id === this.reserId).reser_user,\n    availableTime: `${this.reservations.find((res) => res.id === this.reserId).startTime.split(\"T\")[1].slice(0, 5)} ~ ${this.reservations.find((res) => res.id === this.reserId).endTime.split(\"T\")[1].slice(0, 5)}`,\n    storeName: managerInfo.identifier,\n  };\n\n  console.log(\"[cancelMsg] Sending params:\", params);\n\n  try {\n    const response = await managerStore.postTask(`v1/sms/cancelReservation`, params);\n    console.log(\"[cancelMsg] Response received:\", response);\n  } catch (error) {\n    console.error(\"[cancelMsg] API call failed:\", error);\n  }\n},\n\nconfirmModal(status) {\n    // 상태 로그 출력\n    console.log(\"[confirmModal] Received reserStatus:\", status);\n    const resolvedStatus = typeof status === 'object' && status.status ? status.status : status;\n    // 상태에 따라 로직 분기\n    if (resolvedStatus === \"예약완료\") {\n      console.log(\"[confirmModal] Executing confirmMsg...\");\n      this.confirmMsg(); // 예약 확정 메시지 전송\n    } else if (resolvedStatus === \"예약취소\") {\n      console.log(\"[confirmModal] Executing cancelMsg...\");\n      this.cancelMsg(); // 예약 취소 메시지 전송\n    } else {\n      console.log(\"[confirmModal] No matching status found. Skipping...\");\n    }\n\n    // 모달 닫기 및 데이터 갱신\n    console.log(\"[confirmModal] Closing modal and refreshing data...\");\n    this.isModalVisible = false;\n    this.getReservationDt();\n  },\n    closeModal() {\n      this.isModalVisible = false;\n      // alert(\"Close\")\n    },\n    showModal(reserId, reserStatus) {\n      this.reserId = reserId;\n      this.reserStatus = reserStatus;\n      this.isModalVisible = true;\n    },\n    async getReservationDt() {\n      try {\n        // Step 1: Retrieve managerInfo from localStorage\n        const managerInfo = JSON.parse(localStorage.getItem(\"managerInfo\"));\n\n        // Validate managerInfo\n        if (!managerInfo || !managerInfo.id) {\n          return;\n        }\n        console.log(\"Manager ID:\", managerInfo.id);\n\n        // Step 2: Fetch reservations data\n        // const roomDt = await managerStore.getTask(`reservations/${managerInfo.id}`);\n        const roomDt = await managerStore.getTask(\n          `reservations/managerId/${managerInfo.id}`\n        );\n        console.log(\"Manager ID:\", JSON.stringify(roomDt));\n\n        // Step 3: Log each reservation and its managerid\n        // roomDt.forEach((reservation, index) => {\n        //   console.log(`Reservation ${index}:`, reservation);\n        //   console.log(`Reservation ${index} managerid:`, reservation.managerid);\n        // });\n\n        // Step 4: Filter reservations by managerid\n        const filteredReservations = roomDt.filter(\n          (reservation) =>\n            Number(reservation.managerid) === Number(managerInfo.id) &&\n            reservation.managerid !== null\n        );\n\n        // Step 5: Update reservations data\n        console.log(\"Step 5: Updating reservations data...\");\n        this.reservations = filteredReservations;\n        console.log(\"Updated reservations data:\", this.reservations);\n      } catch (error) {\n        // Log errors\n        console.error(\"Error in getReservationDt:\", error);\n      }\n    },\n    async getReservationsDt(date) {\n      try {\n        const managerInfo = JSON.parse(localStorage.getItem(\"managerInfo\"));\n        if (!managerInfo || !managerInfo.id) {\n          console.error(\"Manager info is missing or invalid.\");\n          return;\n        }\n\n        const roomDt = await managerStore.getTask(\n          `reservations/date/${date}/manager?managerId=${managerInfo.id}`\n        );\n\n        console.log(\"Raw roomDt data:\", JSON.stringify(roomDt, null, 2));\n\n        const selectedReservations = roomDt\n          .map((room) => {\n            return room.reservations.map((reservation) => ({\n              ...reservation, // 예약 데이터\n              room_id: room.room_id, // room 정보 추가\n              roomtype: room.roomtype, // room 정보 추가\n            }));\n          })\n          .flat(); // 2차원 배열을 1차원 배열로 변환\n\n        console.log(\n          \"Transformed Reservations:\",\n          JSON.stringify(selectedReservations, null, 2)\n        );\n\n        this.reservations = selectedReservations;\n      } catch (error) {\n        console.error(\"Error in getReservationsDt:\", error);\n      }\n    },\n    selectTab(tab) {\n    this.selectedTab = tab;\n    this.currentPage = 1; // 탭 변경 시 페이지를 1번으로 초기화\n  },\n    statusClass(status) {\n      if (status === \"waiting\") return \"status-pending\";\n      if (status === \"confirm\") return \"status-complete\";\n      if (status === \"cancel\") return \"status-cancel\";\n      return \"\";\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n/* 24.12.23 수정 */\n.wrapper {\n    width: 100%;\n    padding: 30px;\n    /* gap: 20px; */\n    height: 100vh;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 날짜 선택 박스 */\n.date-picker-box {\n  background-color: #fff;\n  padding: 30px;\n  /* 24.12.11 수정 - 추가 */\n  margin-bottom: 20px;\n}\n\n/* 24.11.11 수정 */\n.date {\n  width: 250px;\n  height: 60px;\n  border: 1px solid #ddd;\n  padding: 0 20px;\n}\n\n/* 방 리스트 박스 */\n.room-list-box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  background-color: #fff;\n  padding: 30px;\n}\n\n/* 24.12.11 수정 - width 삭제 */\n.tabs {\n  background-color: #fff;\n  /* width: 40%; */\n  display: flex;\n  gap: 10px;\n}\n\n.tab-btn {\n  flex: 1;\n  padding: 15px;\n  text-align: center;\n  border: none;\n  background-color: #f5f5f5;\n  cursor: pointer;\n  width: 150px;\n}\n\n.tab-btn.active {\n  background-color: #003399;\n  color: #fff;\n}\n\n/* 테이블 스타일 */\n.table-container {\n  background-color: #fff;\n  width: 100%;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 26px 0px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n}\n\nth {\n  background-color: #f5f5f5;\n}\n\n.status-pending {\n  color: #d30f1a;\n  border: 1px solid #d30f1a;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  /* 셀 안에서 중앙에 위치하도록 변경 */\n  text-align: center;\n  /* 텍스트도 가운데 정렬 */\n}\n\n.status-complete {\n  color: #184199;\n  border: 1px solid #184199;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  text-align: center;\n}\n\n/* 24.12.11 수정 - 색상 변경 */\n.status-cancel {\n  color: #00000080;\n  border: 1px solid #00000080;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  text-align: center;\n}\n\n/* 24.11.11 수정 */\n.reserve-status {\n  font-size: 14px;\n  font-family: var(--font-family-pretendard-semibold);\n  font-weight: 600;\n}\n\n/* 24.12.11 수정 - 추가 */\n.disabled {\n  pointer-events: none; /* 클릭 이벤트 비활성화 */\n  opacity: 0.5; /* 시각적으로 비활성화된 상태 표현 */\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  width: 100%;\n}\n\n/* 24.11.11 수정 */\n.page-numbers {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n\n/* 24.12.11 수정 - 추가 */\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n/* 24.12.11 수정 */\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n/* 24.12.11 수정 - 추가 */\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n</style>"]}]}