{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/EventList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/EventList.vue","mtime":1734572733661},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAiQC9zdG9yZS90YXNrU3RvcmUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJFdmVudExpc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlciwKICAgIFJqWnNXaSwKICAgIFhGb290ZXIsCiAgfSwKICBwcm9wczogWyJySlpzV0lQcm9wcyJdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJzOiBbIuyghOyytCDsnbTrsqTtirgiLCAi7KeE7ZaJ7KSRIOydtOuypO2KuCIsICLsooXro4wg7J2067Kk7Yq4Il0sCiAgICAgIHNlbGVjdGVkVGFiOiAi7KCE7LK0IOydtOuypO2KuCIsCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBpdGVtc1BlclBhZ2U6IDYsCiAgICAgIGV2ZW50czogW10sCiAgICAgIGFycm93TGVmdEltYWdlOgogICAgICAgICJodHRwczovL2Nkbi5hbmltYWFwcC5jb20vcHJvamVjdHMvNjZkYTUxMmQwYzIyZDQ3ODAxNWUwZTA3L3JlbGVhc2VzLzY2ZGE1MWQ4Y2Y1MDE1M2NlZjk5NTJkZi9pbWcvaWNvbmFtb29uLWFycm93LXVwLTItdGhpbi5zdmciLAogICAgICBhcnJvd1JpZ2h0SW1hZ2U6CiAgICAgICAgImh0dHBzOi8vY2RuLmFuaW1hYXBwLmNvbS9wcm9qZWN0cy82NmRhNTEyZDBjMjJkNDc4MDE1ZTBlMDcvcmVsZWFzZXMvNjZkYTUxZDhjZjUwMTUzY2VmOTk1MmRmL2ltZy9pY29uYW1vb24tYXJyb3ctdXAtMi10aGluLnN2ZyIsCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0RXZlbnRzKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgLy8gZmlsdGVyZWRFdmVudHMoKSB7CiAgICAvLyAgIGlmICh0aGlzLnNlbGVjdGVkVGFiID09PSAi7KCE7LK0IOydtOuypO2KuCIpIHsKICAgIC8vICAgICByZXR1cm4gdGhpcy5ldmVudHM7CiAgICAvLyAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RlZFRhYiA9PT0gIuynhO2WieykkSDsnbTrsqTtirgiKSB7CiAgICAvLyAgICAgcmV0dXJuIHRoaXMuZXZlbnRzLmZpbHRlcigoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09ICLsp4TtlonspJEiKTsKICAgIC8vICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGVkVGFiID09PSAi7KKF66OMIOydtOuypO2KuCIpIHsKICAgIC8vICAgICByZXR1cm4gdGhpcy5ldmVudHMuZmlsdGVyKChldmVudCkgPT4gZXZlbnQudHlwZSA9PT0gIuyiheujjCIpOwogICAgLy8gICB9CiAgICAvLyB9LAogICAgLy8gdG90YWxQYWdlcygpIHsKICAgIC8vICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLmZpbHRlcmVkRXZlbnRzLmxlbmd0aCAvIHRoaXMuaXRlbXNQZXJQYWdlKTsKICAgIC8vIH0sCiAgICAvLyBwYWdpbmF0ZWRFdmVudHMoKSB7CiAgICAvLyAgIGNvbnN0IHN0YXJ0ID0gKHRoaXMuY3VycmVudFBhZ2UgLSAxKSAqIHRoaXMuaXRlbXNQZXJQYWdlOwogICAgLy8gICByZXR1cm4gdGhpcy5maWx0ZXJlZEV2ZW50cy5zbGljZShzdGFydCwgc3RhcnQgKyB0aGlzLml0ZW1zUGVyUGFnZSk7CiAgICAvLyB9LAoKICAgIC8vIDI0LjEyLjE5IOyImOyglSAtIOy2lOqwgCA6IOuPmeyggeycvOuhnCDtkZzsi5ztlaAg7Y6Y7J207KeAIOuyiO2YuCDqs4TsgrAKICAgIHZpc2libGVQYWdlcygpIHsKICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMudG90YWxQYWdlczsKICAgICAgY29uc3QgY3VycmVudFBhZ2UgPSB0aGlzLmN1cnJlbnRQYWdlOwogICAgICBjb25zdCBtYXhWaXNpYmxlUGFnZXMgPSA1OwoKICAgICAgbGV0IHN0YXJ0UGFnZSA9IE1hdGgubWF4KDEsIGN1cnJlbnRQYWdlIC0gTWF0aC5mbG9vcihtYXhWaXNpYmxlUGFnZXMgLyAyKSk7CiAgICAgIGxldCBlbmRQYWdlID0gc3RhcnRQYWdlICsgbWF4VmlzaWJsZVBhZ2VzIC0gMTsKCiAgICAgIGlmIChlbmRQYWdlID4gdG90YWxQYWdlcykgewogICAgICAgIGVuZFBhZ2UgPSB0b3RhbFBhZ2VzOwogICAgICAgIHN0YXJ0UGFnZSA9IE1hdGgubWF4KDEsIGVuZFBhZ2UgLSBtYXhWaXNpYmxlUGFnZXMgKyAxKTsKICAgICAgfQoKICAgICAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IGVuZFBhZ2UgLSBzdGFydFBhZ2UgKyAxIH0sIChfLCBpKSA9PiBzdGFydFBhZ2UgKyBpKTsKICAgIH0sCiAgICAvLyAyNC4xMS4yMiDsiJjsoJUgLSDtg60g7KCB7JqpCiAgICB0b3RhbFBhZ2VzKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuZmlsdGVyZWRFdmVudHModGhpcy5zZWxlY3RlZFRhYikubGVuZ3RoIC8gdGhpcy5pdGVtc1BlclBhZ2UpOwogICAgfSwKICAgIHBhZ2luYXRlZEV2ZW50cygpIHsKICAgICAgY29uc3Qgc3RhcnQgPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5pdGVtc1BlclBhZ2U7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkRXZlbnRzKHRoaXMuc2VsZWN0ZWRUYWIpLnNsaWNlKHN0YXJ0LCBzdGFydCArIHRoaXMuaXRlbXNQZXJQYWdlKTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRFdmVudHMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g7ISc67KE7JeQ7IScIOydtOuypO2KuCDrjbDsnbTthLDrpbwg6rCA7KC47Ji164uI64ukLgogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLmdldFNlbGVjdFRhc2tzKCdldmVudHMnKTsKICAgICAgICBjb25zb2xlLmxvZygiRmV0Y2hlZCBldmVudHMgZGF0YToiLCByZXNwb25zZSk7CgogICAgICAgIC8vIOuNsOydtO2EsOulvCDqsIDqs7XtlZjsl6wgZXZlbnRzIOuwsOyXtOyXkCDtlaDri7kKICAgICAgICB0aGlzLmV2ZW50cyA9IHJlc3BvbnNlLm1hcChpdGVtID0+ICh7CiAgICAgICAgICBpZDogaXRlbS5pZCwKICAgICAgICAgIGRlc2NyaXB0aW9uOiBpdGVtLnRpdGxlLCAvLyB0aXRsZeydhCBkZXNjcmlwdGlvbuycvOuhnCDsgqzsmqkKICAgICAgICAgIHBlcmlvZDogYCR7aXRlbS5zdGFydFRpbWU/LnNwbGl0KCdUJylbMF19IH4gJHtpdGVtLmVuZFRpbWU/LnNwbGl0KCdUJylbMF19YCwgLy8gc3RhcnRUaW1l6rO8IGVuZFRpbWXsl5DshJwg64Kg7Kec66eMIOy2lOy2nAogICAgICAgICAgbWFza0dyb3VwOiBpdGVtLmltYWdlVXJsLCAvLyBpbWFnZVVybOydhCBtYXNrR3JvdXDsl5Ag7ZWg64u5CiAgICAgICAgICAvLyB0eXBlOiBpdGVtLnN0YXR1cywgLy8g7KeE7ZaJIOyDge2DnCAoJ+ynhO2WieykkScsICfsooXro4wnIOuTsSkKICAgICAgICAgIC8vIDI0LjExLjIyIOyImOyglSAtIOy2lOqwgAogICAgICAgICAgc3RhcnREYXRlOiBuZXcgRGF0ZShpdGVtLnN0YXJ0VGltZSksCiAgICAgICAgICBlbmREYXRlOiBuZXcgRGF0ZShpdGVtLmVuZFRpbWUpLAogICAgICAgIH0pKTsKCiAgICAgICAgLy8gMjQuMTEuMjIg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgLy8gc3RhcnREYXRlIOyXreyInOycvOuhnCDsoJXroKwKICAgICAgICB0aGlzLmV2ZW50cy5zb3J0KChhLCBiKSA9PiBiLnN0YXJ0RGF0ZSAtIGEuc3RhcnREYXRlKTsKCiAgICAgICAgY29uc29sZS5sb2coIlByb2Nlc3NlZCBldmVudHM6IiwgdGhpcy5ldmVudHMpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkZhaWxlZCB0byBmZXRjaCBldmVudHMgZGF0YToiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICAvLyAyNC4xMS4yMiDsiJjsoJUgLSDstpTqsIAKICAgIGZpbHRlcmVkRXZlbnRzKHRhYikgewogICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7CiAgICAgIHRvZGF5LnNldEhvdXJzKDAsIDAsIDAsIDApOyAvLyDsi5zqsIQgMDA6MDA6MDAg7ISk7KCVCgogICAgICByZXR1cm4gdGhpcy5ldmVudHMuZmlsdGVyKGV2ZW50ID0+IHsKICAgICAgICBjb25zdCBzdGFydERhdGUgPSBuZXcgRGF0ZShldmVudC5zdGFydERhdGUpLnNldEhvdXJzKDAsIDAsIDAsIDApOwogICAgICAgIGNvbnN0IGVuZERhdGUgPSBuZXcgRGF0ZShldmVudC5lbmREYXRlKS5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgICBsZXQgdHlwZSA9ICJnYW1lIjsKCiAgICAgICAgaWYgKHN0YXJ0RGF0ZSA8PSB0b2RheSAmJiB0b2RheSA8PSBlbmREYXRlKSB7CiAgICAgICAgICB0eXBlID0gIuynhO2WieykkSI7CiAgICAgICAgfSBlbHNlIGlmIChlbmREYXRlIDwgdG9kYXkpIHsKICAgICAgICAgIHR5cGUgPSAi7KKF66OMIjsKICAgICAgICB9CgogICAgICAgIGV2ZW50LnR5cGUgPSB0eXBlOyAvLyDtg4DsnoUg7ISk7KCVCgogICAgICAgIC8vIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgAogICAgICAgIC8vIOyYpOuKmCDsnbTtm4TsnZggc3RhcnREYXRl64qUIO2VhO2EsOungQogICAgICAgIGlmIChzdGFydERhdGUgPiB0b2RheSkgcmV0dXJuIGZhbHNlOwoKICAgICAgICAvLyDtlYTthLDrp4EKICAgICAgICBpZiAodGFiID09PSAi7KCE7LK0IOydtOuypO2KuCIpIHJldHVybiB0cnVlOwogICAgICAgIGlmICh0YWIgPT09ICLsp4TtlonspJEg7J2067Kk7Yq4IiAmJiBldmVudC50eXBlID09PSAi7KeE7ZaJ7KSRIikgcmV0dXJuIHRydWU7CiAgICAgICAgaWYgKHRhYiA9PT0gIuyiheujjCDsnbTrsqTtirgiICYmIGV2ZW50LnR5cGUgPT09ICLsooXro4wiKSByZXR1cm4gdHJ1ZTsKCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBzZWxlY3RUYWIodGFiKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRUYWIgPSB0YWI7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOyAvLyBSZXNldCB0byB0aGUgZmlyc3QgcGFnZSB3aGVuIHRhYiBpcyBjaGFuZ2VkCiAgICB9LAogICAgbmV4dFBhZ2UoKSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRQYWdlIDwgdGhpcy50b3RhbFBhZ2VzKSB7CiAgICAgICAgdGhpcy5jdXJyZW50UGFnZSsrOwogICAgICB9CiAgICB9LAogICAgcHJldlBhZ2UoKSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRQYWdlID4gMSkgewogICAgICAgIHRoaXMuY3VycmVudFBhZ2UtLTsKICAgICAgfQogICAgfSwKICAgIGdvVG9QYWdlKHBhZ2UpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHBhZ2U7CiAgICB9LAoKICAgIHRvR29FdmVudERldGFpbChldmVudCkgewogICAgICBjb25zb2xlLmxvZygiTmF2aWdhdGluZyB0byBldmVudCBkZXRhaWwgd2l0aCBJRDoiLCBldmVudCk7IC8vIOy9mOyGlOyXkCBpZCDstpzroKUKCiAgICAgIC8vIDI0LjExLjIyIOy2lOqwgAogICAgICAvLyDsooXro4zrkJwg7J2067Kk7Yq47J28IOqyveyasCDtgbTrpq0g67Cp7KeACiAgICAgIGlmIChldmVudC50eXBlID09PSAi7KKF66OMIikgewogICAgICAgIGFsZXJ0KCLsooXro4zrkJwg7J2067Kk7Yq47J6F64uI64ukLiIpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6ICIvZXZlbnQtZGV0YWlsIiwKICAgICAgICBxdWVyeTogeyBpZDogZXZlbnQuaWQsIHR5cGU6IGV2ZW50LnR5cGUgfQogICAgICB9KTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["EventList.vue"],"names":[],"mappings":";AAifile":"EventList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"events-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title_center\">\n        <div class=\"title pretendard-bold-log-cabin-38px\">이벤트</div>\n      </div>\n      <div class=\"events_wrap\">\n        <!-- Tabs section -->\n        <div class=\"events_tab\">\n          <!-- 24.12.19 수정 - 폰트 변경  -->\n          <div v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"selectTab(tab)\"\n            class=\"pretendard-medium-granite-gray-18px\" :class=\"['tab', { active: selectedTab === tab }]\">\n            {{ tab }}\n          </div>\n        </div>\n        <!-- 전체 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '전체 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 진행중 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '진행중 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 종료 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '종료 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box  pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div> -->\n\n        <!-- 24.11.22 수정 - 코드 간결하게 수정 및 type 나오도록 수정 -->\n        <div class=\"frame-7820\" v-for=\"tab in tabs\" :key=\"tab\" v-if=\"selectedTab === tab\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <!--  24.11.22 수정 - 추가  -->\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event)\" :class=\"{ 'disabled-card': event.type === '종료' }\">\n                <!-- 24.11.22 수정 -->\n                <!-- 24.12.19 수정 - 폰트 수정 -->\n                <div class=\"label-box pretendard-semi-bold-white-14px\" :class=\"{\n                  'label-progress': event.type === '진행중',\n                  'label-completed': event.type === '종료'\n                }\">\n                  {{ event.type }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Pagination controls -->\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <!-- 24.12.19 수정 - totalPages - visiblePages 변경 -->\n                <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"EventList\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      tabs: [\"전체 이벤트\", \"진행중 이벤트\", \"종료 이벤트\"],\n      selectedTab: \"전체 이벤트\",\n      currentPage: 1,\n      itemsPerPage: 6,\n      events: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n    };\n  },\n  created() {\n    this.getEvents();\n  },\n  computed: {\n    // filteredEvents() {\n    //   if (this.selectedTab === \"전체 이벤트\") {\n    //     return this.events;\n    //   } else if (this.selectedTab === \"진행중 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"진행중\");\n    //   } else if (this.selectedTab === \"종료 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"종료\");\n    //   }\n    // },\n    // totalPages() {\n    //   return Math.ceil(this.filteredEvents.length / this.itemsPerPage);\n    // },\n    // paginatedEvents() {\n    //   const start = (this.currentPage - 1) * this.itemsPerPage;\n    //   return this.filteredEvents.slice(start, start + this.itemsPerPage);\n    // },\n\n    // 24.12.19 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    // 24.11.22 수정 - 탭 적용\n    totalPages() {\n      return Math.ceil(this.filteredEvents(this.selectedTab).length / this.itemsPerPage);\n    },\n    paginatedEvents() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredEvents(this.selectedTab).slice(start, start + this.itemsPerPage);\n    },\n  },\n  methods: {\n    async getEvents() {\n      try {\n        // 서버에서 이벤트 데이터를 가져옵니다.\n        const response = await taskStore.getSelectTasks('events');\n        console.log(\"Fetched events data:\", response);\n\n        // 데이터를 가공하여 events 배열에 할당\n        this.events = response.map(item => ({\n          id: item.id,\n          description: item.title, // title을 description으로 사용\n          period: `${item.startTime?.split('T')[0]} ~ ${item.endTime?.split('T')[0]}`, // startTime과 endTime에서 날짜만 추출\n          maskGroup: item.imageUrl, // imageUrl을 maskGroup에 할당\n          // type: item.status, // 진행 상태 ('진행중', '종료' 등)\n          // 24.11.22 수정 - 추가\n          startDate: new Date(item.startTime),\n          endDate: new Date(item.endTime),\n        }));\n\n        // 24.11.22 수정 - 추가\n        // startDate 역순으로 정렬\n        this.events.sort((a, b) => b.startDate - a.startDate);\n\n        console.log(\"Processed events:\", this.events);\n      } catch (error) {\n        console.error(\"Failed to fetch events data:\", error);\n      }\n    },\n    // 24.11.22 수정 - 추가\n    filteredEvents(tab) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // 시간 00:00:00 설정\n\n      return this.events.filter(event => {\n        const startDate = new Date(event.startDate).setHours(0, 0, 0, 0);\n        const endDate = new Date(event.endDate).setHours(0, 0, 0, 0);\n        let type = \"game\";\n\n        if (startDate <= today && today <= endDate) {\n          type = \"진행중\";\n        } else if (endDate < today) {\n          type = \"종료\";\n        }\n\n        event.type = type; // 타입 설정\n\n        // 24.11.26 수정 - 추가\n        // 오늘 이후의 startDate는 필터링\n        if (startDate > today) return false;\n\n        // 필터링\n        if (tab === \"전체 이벤트\") return true;\n        if (tab === \"진행중 이벤트\" && event.type === \"진행중\") return true;\n        if (tab === \"종료 이벤트\" && event.type === \"종료\") return true;\n\n        return false;\n      });\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.currentPage = 1; // Reset to the first page when tab is changed\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n\n    toGoEventDetail(event) {\n      console.log(\"Navigating to event detail with ID:\", event); // 콘솔에 id 출력\n\n      // 24.11.22 추가\n      // 종료된 이벤트일 경우 클릭 방지\n      if (event.type === \"종료\") {\n        alert(\"종료된 이벤트입니다.\");\n        return;\n      }\n\n      this.$router.push({\n        path: \"/event-detail\",\n        query: { id: event.id, type: event.type }\n      });\n    }\n  },\n};\n</script>\n\n<style scoped src=\"@/style/community/eventlist.css\"></style>"]}]}