{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/GameScoreCard.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/GameScoreCard.vue","mtime":1735284796605},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR2FtZVNjb3JlQ2FyZCIsCiAgcHJvcHM6IHsKICAgIGNvbnRlbnQ6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGxheWVyczogdGhpcy5jb250ZW50LnNjb3JlY2FyZCB8fCBbXSwgLy8gMjQuMTIuMjcg7IiY7KCVIC0g7LaU6rCAIDogY29udGVudOyXkOyEnCBzY29yZWNhcmQg642w7J207YSw66W8IOuwm+ydjAogICAgICB0YWJsZXM6IFtdLAogICAgICBzY29yZWNhcmQ6IFtdLCAvLyAyNC4xMi4yNyDsiJjsoJUgLSDstpTqsIAgOiBzY29yZWNhcmQg67Cw7Je07J2EIOy0iOq4sO2ZlAogICAgICBjaHVua3M6IFtdLCAvLyAyNC4xMi4yNyDsiJjsoJUgLSDstpTqsIAgOiDrtoTtlaDrkJwg642w7J207YSw66W8IOyggOyepe2VoCDrsLDsl7QKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgLy8gY29uc29sZS5sb2coImNvbnRlbnQg642w7J207YSwOiIsIHRoaXMuY29udGVudCk7CiAgICAvLyBpZiAodHlwZW9mIHRoaXMuY29udGVudC5ob2xlcyA9PT0gJ3N0cmluZycpIHsKICAgIC8vICAgY29uc3QgaG9sZUNvdW50ID0gcGFyc2VJbnQodGhpcy5jb250ZW50LmhvbGVzLnJlcGxhY2UoL1teMC05XS9nLCAiIiksIDEwKTsKICAgIC8vICAgaWYgKGhvbGVDb3VudCkgewogICAgLy8gICAgIHRoaXMudGFibGVzID0gdGhpcy5nZW5lcmF0ZVRhYmxlcyhob2xlQ291bnQpOwogICAgLy8gICAgIGNvbnNvbGUubG9nKCLsg53shLHrkJwg7YWM7J2067iUIOuNsOydtO2EsDoiLCB0aGlzLnRhYmxlcyk7CiAgICAvLyAgIH0gZWxzZSB7CiAgICAvLyAgICAgY29uc29sZS5lcnJvcigiaG9sZUNvdW506rCAIOycoO2aqO2VmOyngCDslYrsirXri4jri6Q6IiwgaG9sZUNvdW50KTsKICAgIC8vICAgfQogICAgLy8gfSBlbHNlIHsKICAgIC8vICAgY29uc29sZS5lcnJvcigiaG9sZSDsoJXrs7TqsIAg66y47J6Q7Je07J20IOyVhOuLmeuLiOuLpDoiLCB0aGlzLmNvbnRlbnQuaG9sZSk7CiAgICAvLyB9CiAgICAvLyBpZiAodGhpcy5jb250ZW50LnNjb3JlY2FyZC5sZW5ndGggPiAwKSB7CiAgICAvLyAgIHRoaXMudGFibGVzID0gdGhpcy5zcGxpdFNjb3JlY2FyZCgpOwogICAgLy8gICBjb25zb2xlLmxvZygi67aE7ZWg65CcIO2FjOydtOu4lCDrjbDsnbTthLA6IiwgdGhpcy50YWJsZXMpOwogICAgLy8gfSBlbHNlIHsKICAgIC8vICAgY29uc29sZS5lcnJvcigic2NvcmVjYXJkIOuNsOydtO2EsOqwgCDsl4bsirXri4jri6QuIik7CiAgICAvLyB9CgoKICAgIC8vIDI0LjEyLjI3IOyImOyglSAtIOy2lOqwgAogICAgdGhpcy5zcGxpdFNjb3JlY2FyZCgpOyAvLyDsu7Ttj6zrhIztirjqsIAg7IOd7ISx65CY7JeI7J2EIOuVjCDrjbDsnbTthLAg67aE7ZWgIOyLpO2WiQogIH0sCiAgbWV0aG9kczogewogICAgLy8gMjQuMTIuMjcg7IiY7KCVIC0g7LaU6rCACiAgICBzcGxpdFNjb3JlY2FyZCgpIHsKICAgICAgY29uc3QgY2h1bmtzID0gW107CiAgICAgIGNvbnN0IGNodW5rU2l6ZSA9IDk7IC8vIOqwgSDssq3tgawg7YGs6riwICg57ZmA7JSpIOustuq4sCkKCiAgICAgIC8vIOqwgSDtlIzroIjsnbTslrQg7J2066aE67OE66GcIOuNsOydtO2EsCDrgpjriITquLAKICAgICAgdGhpcy5jb250ZW50LnNjb3JlY2FyZC5mb3JFYWNoKChwbGF5ZXJDYXJkKSA9PiB7CiAgICAgICAgY29uc3QgcGxheWVyTmFtZSA9IHBsYXllckNhcmQubmFtZTsKICAgICAgICBjb25zdCBwYXJBcnJheSA9IHBsYXllckNhcmQucGFyIHx8IFtdOwogICAgICAgIGNvbnN0IHNjb3JlQXJyYXkgPSBwbGF5ZXJDYXJkLnNjb3JlIHx8IFtdOwogICAgICAgIGNvbnN0IHB1dHRBcnJheSA9IHBsYXllckNhcmQucHV0dHMgfHwgW107CgogICAgICAgIC8vIDE47ZmA66GcIOygnO2VnCAo7ZmA7J2AIO2VnCDsgqzrnozri7kg7LWc64yAIDE47ZmAKQogICAgICAgIGNvbnN0IG1heEhvbGVzID0gMTg7CiAgICAgICAgY29uc3QgcGFyTGltaXRlZCA9IHBhckFycmF5LnNsaWNlKDAsIG1heEhvbGVzKTsKICAgICAgICBjb25zdCBzY29yZUxpbWl0ZWQgPSBzY29yZUFycmF5LnNsaWNlKDAsIG1heEhvbGVzKTsKICAgICAgICBjb25zdCBwdXR0TGltaXRlZCA9IHB1dHRBcnJheS5zbGljZSgwLCBtYXhIb2xlcyk7CgogICAgICAgIGxldCBwbGF5ZXJDaHVua3MgPSBbXTsKICAgICAgICBsZXQgaG9sZVN0YXJ0ID0gMTsgLy8g7ZmAIOuyiO2YuCDsi5zsnpEKCiAgICAgICAgLy8g6rCBIO2UjOugiOydtOyWtOydmCDtmYDsnYQgY2h1bmtTaXplIOuLqOychOuhnCDrgpjriITquLAKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhckxpbWl0ZWQubGVuZ3RoOyBpICs9IGNodW5rU2l6ZSkgewogICAgICAgICAgY29uc3QgY2h1bmsgPSBwYXJMaW1pdGVkLnNsaWNlKGksIGkgKyBjaHVua1NpemUpOwogICAgICAgICAgY29uc3Qgc2NvcmVDaHVuayA9IHNjb3JlTGltaXRlZC5zbGljZShpLCBpICsgY2h1bmtTaXplKTsKICAgICAgICAgIGNvbnN0IHB1dHRDaHVuayA9IHB1dHRMaW1pdGVkLnNsaWNlKGksIGkgKyBjaHVua1NpemUpOwoKICAgICAgICAgIC8vIOqwgSDssq3tgazqsIAgY2h1bmtTaXplIO2BrOq4sOqwgCDslYjrkJjrqbQgJy0n66GcIOyxhOyasOq4sAogICAgICAgICAgd2hpbGUgKGNodW5rLmxlbmd0aCA8IGNodW5rU2l6ZSkgewogICAgICAgICAgICBjaHVuay5wdXNoKCctJyk7CiAgICAgICAgICAgIHNjb3JlQ2h1bmsucHVzaCgnLScpOwogICAgICAgICAgICBwdXR0Q2h1bmsucHVzaCgnLScpOwogICAgICAgICAgfQoKICAgICAgICAgIC8vIOqwgSDssq3tgazsnZgg7ZWpIOqzhOyCsAogICAgICAgICAgY29uc3QgcGFyU3VtID0gY2h1bmsuZmlsdGVyKCh2YWwpID0+IHZhbCAhPT0gJy0nKS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTsKICAgICAgICAgIGNvbnN0IHNjb3JlU3VtID0gc2NvcmVDaHVuay5maWx0ZXIoKHZhbCkgPT4gdmFsICE9PSAnLScpLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApOwogICAgICAgICAgY29uc3QgcHV0dFN1bSA9IHB1dHRDaHVuay5maWx0ZXIoKHZhbCkgPT4gdmFsICE9PSAnLScpLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApOwoKICAgICAgICAgIGNvbnN0IGhvbGVzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogY2h1bmsubGVuZ3RoIH0sIChfLCBpZHgpID0+IGhvbGVTdGFydCArIGlkeCk7CiAgICAgICAgICBob2xlU3RhcnQgKz0gY2h1bmsubGVuZ3RoOwoKICAgICAgICAgIHBsYXllckNodW5rcy5wdXNoKHsKICAgICAgICAgICAgcGxheWVyTmFtZTogcGxheWVyTmFtZSwgLy8g7ZSM66CI7J207Ja0IOydtOumhCDstpTqsIAKICAgICAgICAgICAgaG9sZXM6IGhvbGVzLAogICAgICAgICAgICBwYXJzOiBjaHVuaywKICAgICAgICAgICAgc2NvcmVzOiBzY29yZUNodW5rLAogICAgICAgICAgICBwdXR0czogcHV0dENodW5rLAogICAgICAgICAgICBwYXJTdW06IHBhclN1bSwKICAgICAgICAgICAgc2NvcmVTdW06IHNjb3JlU3VtLAogICAgICAgICAgICBwdXR0U3VtOiBwdXR0U3VtLAogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICAvLyDtlIzroIjsnbTslrTrs4QgY2h1bmtz7JeQIOy2lOqwgAogICAgICAgIGNodW5rcy5wdXNoKHsgcGxheWVyTmFtZSwgcGxheWVyQ2h1bmtzIH0pOwogICAgICB9KTsKCiAgICAgIC8vIOydtCDrtoDrtoTsl5DshJwgY2h1bmtzIOqwkuydhCB0aGlzLmNodW5rc+uhnCDtlaDri7ntlZjsl6wg67CY7JiBCiAgICAgIHRoaXMuY2h1bmtzID0gY2h1bmtzOwoKICAgICAgY29uc29sZS5sb2coJ+uNsOydtO2EsCcsIGNodW5rcyk7ICAvLyDsvZjshpTsl5Ag7ZmV7J247ZWY7JesIGNodW5rcyDrsLDsl7Qg6rWs7KGw66W8IOy2nOugpe2VtOuztOq4sAoKCiAgICB9LAogICAgLy8gZ2VuZXJhdGVUYWJsZXMoaG9sZUNvdW50KSB7CiAgICAvLyAgIGNvbnN0IHRhYmxlcyA9IFtdOwogICAgLy8gICBsZXQgc3RhcnQgPSAxOwogICAgLy8gICB3aGlsZSAoc3RhcnQgPD0gaG9sZUNvdW50KSB7CiAgICAvLyAgICAgY29uc3QgZW5kID0gTWF0aC5taW4oc3RhcnQgKyA4LCBob2xlQ291bnQpOwogICAgLy8gICAgIGNvbnN0IGhvbGVzID0gW107CiAgICAvLyAgICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSsrKSB7CiAgICAvLyAgICAgICBob2xlcy5wdXNoKGkpOwogICAgLy8gICAgIH0KICAgIC8vICAgICB0YWJsZXMucHVzaCh7IGhvbGVzIH0pOwogICAgLy8gICAgIHN0YXJ0ID0gZW5kICsgMTsKICAgIC8vICAgfQogICAgLy8gICByZXR1cm4gdGFibGVzOwogICAgLy8gfSwKICAgIC8vIGNhbGN1bGF0ZVRvdGFsKGFycmF5LCBob2xlcykgewogICAgLy8gICByZXR1cm4gYXJyYXkKICAgIC8vICAgICAuc2xpY2UoaG9sZXNbMF0gLSAxLCBob2xlc1tob2xlcy5sZW5ndGggLSAxXSkKICAgIC8vICAgICAucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCk7CiAgICAvLyB9LAogICAgLy8gY2FsY3VsYXRlVG90YWxXaXRoUGFyKHNjb3JlcywgcGFyLCBob2xlcykgewogICAgLy8gICBjb25zdCB0b3RhbFNjb3JlID0gc2NvcmVzCiAgICAvLyAgICAgLnNsaWNlKGhvbGVzWzBdIC0gMSwgaG9sZXNbaG9sZXMubGVuZ3RoIC0gMV0pCiAgICAvLyAgICAgLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApOwogICAgLy8gICBjb25zdCB0b3RhbFBhciA9IHBhcgogICAgLy8gICAgIC5zbGljZShob2xlc1swXSAtIDEsIGhvbGVzW2hvbGVzLmxlbmd0aCAtIDFdKQogICAgLy8gICAgIC5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTsKICAgIC8vICAgcmV0dXJuIGAke3RvdGFsU2NvcmV9ICgke3RvdGFsU2NvcmUgKyB0b3RhbFBhcn0pYDsKICAgIC8vIH0sCiAgICAvLyBjYWxjdWxhdGVQYXJTdW0ocGFyLCBob2xlcykgewogICAgLy8gICByZXR1cm4gcGFyLnNsaWNlKGhvbGVzWzBdIC0gMSwgaG9sZXNbaG9sZXMubGVuZ3RoIC0gMV0pLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApOwogICAgLy8gfSwKICAgIGNsb3NlTW9kYWwoKSB7CiAgICAgIHRoaXMuJGVtaXQoImNsb3NlTW9kYWwiKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["GameScoreCard.vue"],"names":[],"mappings":";AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GameScoreCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"modal\">\n    <div class=\"modal-content\">\n      <div class=\"modal_title\">\n        <h2 class=\"pretendard-extra-extra-bold-log-cabin-24px\">스코어 카드</h2>\n        <!-- 24.12.16 수정 - class 명 수정 -->\n        <img class=\"class\"\n          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/material-symbols-close.svg\"\n          alt=\"material-symbols:close\" @click=\"closeModal\" />\n      </div>\n      <div class=\"my_card\">\n        <span class=\"pretendard-bold-log-cabin-18px\">{{ content.username }}님의 스코어카드</span>\n      </div>\n      <!-- 720px 초과 -->\n      <div class=\"info\">\n        <table>\n          <tr>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">일시</label>\n            </th>\n            <td class=\"pretendard-regular-normal-granite-gray-16px\">{{ content.date }}</td>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">장소</label>\n            </th>\n            <td class=\"pretendard-regular-normal-granite-gray-16px\">{{ content.location }}</td>\n          </tr>\n          <tr>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">코스</label>\n            </th>\n            <td class=\"pretendard-regular-normal-granite-gray-16px\">{{ content.course }}</td>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">홀</label>\n            </th>\n            <td class=\"pretendard-regular-normal-granite-gray-16px\">{{ content.holes }}</td>\n          </tr>\n          <tr>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">타수</label>\n            </th>\n            <td class=\"pretendard-regular-normal-granite-gray-16px\">{{ content.totalScore }}</td>\n            <th>\n              <label class=\"pretendard-semi-bold-log-cabin-18px\">플레이어</label>\n            </th>\n            <!-- 24.12.27 수정 -->\n            <td class=\"pretendard-regular-normal-granite-gray-16px\"> {{ content.scorecard.length }}명</td>\n          </tr>\n        </table>\n      </div>\n      <!-- 720px 이하 -->\n      <div class=\"react-info\">\n        <!-- 24.12.16 수정 - 폰트 추가 -->\n        <table>\n          <tr>\n            <th> <label class=\"pretendard-semi-bold-log-cabin-14px\">일시</label></th>\n            <td class=\"pretendard-regular-normal-granite-gray-14px\">{{ content.date }}</td>\n          </tr>\n          <tr>\n            <th> <label class=\"pretendard-semi-bold-log-cabin-14px\">장소</label></th>\n            <td class=\"pretendard-regular-normal-granite-gray-14px\">{{ content.location }}</td>\n          </tr>\n          <tr>\n            <th class=\"pretendard-semi-bold-log-cabin-14px\">코스</th>\n            <td class=\"pretendard-regular-normal-granite-gray-14px\">{{ content.course }}</td>\n          </tr>\n          <tr>\n            <th class=\"pretendard-semi-bold-log-cabin-14px\">홀</th>\n            <td class=\"pretendard-regular-normal-granite-gray-14px\">{{ content.holes }}</td>\n          </tr>\n          <tr>\n            <th class=\"pretendard-semi-bold-log-cabin-14px\">타수</th>\n            <td class=\"pretendard-regular-normal-granite-gray-14px\">{{ content.totalScore }}</td>\n          </tr>\n          <tr>\n            <th class=\"pretendard-semi-bold-log-cabin-14px\">플레이어</th>\n            <!-- 24.12.27 수정 -->\n            <td class=\"pretendard-regular-normal-granite-gray-16px\"> {{ content.scorecard.length }}명</td>\n          </tr>\n        </table>\n      </div>\n      <!-- 24.12.27 수정 - 추가 -->\n      <div class=\"playing\" v-for=\"(player, playerIndex) in chunks\" :key=\"'player-' + playerIndex\">\n        <div class=\"player_name\">\n          <span class=\"pretendard-semi-bold-log-cabin-20px\">{{ player.playerName }}</span>\n        </div>\n        <!-- 24.12.16 수정 - playing-table-div 추가  -->\n\n        <!-- <div class=\"playing-table-div\" v-for=\"(table, tIndex) in tables\" :key=\"tIndex\"> -->\n        <!-- 24.12.27 수정 -->\n        <div class=\"score-card\" v-for=\"(chunk, chunkIndex) in player.playerChunks\" :key=\"'chunk-' + chunkIndex\">\n          <table>\n            <thead>\n              <!-- 24.12.27 수정- 폰트 -->\n              <tr class=\"pretendard-semi-bold-log-cabin-18px\">\n                <th>Hole</th>\n                <!-- <th v-for=\"i in table.holes\" :key=\"i\" class=\"pretendard-semi-bold-log-cabin-18px\">\n                  {{ i }}\n                </th> -->\n                <!-- 24.12.27 수정 -->\n                <th v-for=\"hole in chunk.holes\" :key=\"'hole-' + hole\">\n                  {{ hole }}\n                </th>\n                <th>합계</th>\n              </tr>\n              <!-- 24.12.27 수정- 폰트 -->\n              <tr class=\"pretendard-bold-mine-shaft-18px\">\n                <th>PAR</th>\n                <!-- <th v-for=\"i in table.holes\" :key=\"i\" class=\"pretendard-bold-mine-shaft-18px\">\n                  {{ player.par[i - 1] }}\n                </th> -->\n                <!-- 24.12.27 수정 -->\n                <th v-for=\"(par, parIndex) in chunk.pars\" :key=\"'par-' + parIndex\">{{\n                  par }}</th>\n                <!-- <th class=\"pretendard-bold-mine-shaft-18px \"> -->\n                <!-- 1~9까지, 10~18까지의 par 합계 계산 -->\n                <!-- {{ calculateParSum(player.par, table.holes) }} -->\n                <!-- 24.12.27 수정 -->\n                <th>{{ chunk.parSum }}</th>\n                <!-- </th> -->\n              </tr>\n            </thead>\n            <tbody>\n              <!-- 24.12.16 수정 - 폰트 추가  -->\n              <tr class=\"pretendard-regular-normal-mine-shaft-18px\">\n                <td>점수</td>\n                <!-- <td class=\"pretendard-regular-normal-mine-shaft-18px\" v-for=\"i in table.holes\" :key=\"i\">\n                  {{ player.scores[i - 1] }}\n                </td> -->\n                <!-- 24.12.27 수정 -->\n                <td v-for=\"(score, scoreIndex) in chunk.scores\" :key=\"'score-' + scoreIndex\">{{ score }}</td>\n                <!-- <td class=\"pretendard-regular-normal-mine-shaft-18px\">{{ calculateTotalWithPar(player.scores,\n                  player.par, table.holes) }}</td> -->\n                <!-- 24.12.27 수정 -->\n                <td>{{ chunk.scoreSum }}</td>\n              </tr>\n              <tr class=\"pretendard-regular-normal-mine-shaft-18px\">\n                <td>퍼트</td>\n                <!-- <td class=\"pretendard-regular-normal-mine-shaft-18px\" v-for=\"i in table.holes\" :key=\"i\">\n                  {{ player.putts[i - 1] }}\n                </td> -->\n                <!-- 24.12.27 수정 -->\n                <td v-for=\"(putt, puttIndex) in chunk.putts\" :key=\"'putt-' + puttIndex\">{{ putt }}</td>\n                <!-- <td class=\"pretendard-regular-normal-mine-shaft-18px\">{{ calculateTotal(player.putts, table.holes) }}\n                </td> -->\n                <!-- 24.12.27 수정 -->\n                <td>{{ chunk.puttSum }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GameScoreCard\",\n  props: {\n    content: {\n      type: Object,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      players: this.content.scorecard || [], // 24.12.27 수정 - 추가 : content에서 scorecard 데이터를 받음\n      tables: [],\n      scorecard: [], // 24.12.27 수정 - 추가 : scorecard 배열을 초기화\n      chunks: [], // 24.12.27 수정 - 추가 : 분할된 데이터를 저장할 배열\n    };\n  },\n  created() {\n    // console.log(\"content 데이터:\", this.content);\n    // if (typeof this.content.holes === 'string') {\n    //   const holeCount = parseInt(this.content.holes.replace(/[^0-9]/g, \"\"), 10);\n    //   if (holeCount) {\n    //     this.tables = this.generateTables(holeCount);\n    //     console.log(\"생성된 테이블 데이터:\", this.tables);\n    //   } else {\n    //     console.error(\"holeCount가 유효하지 않습니다:\", holeCount);\n    //   }\n    // } else {\n    //   console.error(\"hole 정보가 문자열이 아닙니다:\", this.content.hole);\n    // }\n    // if (this.content.scorecard.length > 0) {\n    //   this.tables = this.splitScorecard();\n    //   console.log(\"분할된 테이블 데이터:\", this.tables);\n    // } else {\n    //   console.error(\"scorecard 데이터가 없습니다.\");\n    // }\n\n\n    // 24.12.27 수정 - 추가\n    this.splitScorecard(); // 컴포넌트가 생성되었을 때 데이터 분할 실행\n  },\n  methods: {\n    // 24.12.27 수정 - 추가\n    splitScorecard() {\n      const chunks = [];\n      const chunkSize = 9; // 각 청크 크기 (9홀씩 묶기)\n\n      // 각 플레이어 이름별로 데이터 나누기\n      this.content.scorecard.forEach((playerCard) => {\n        const playerName = playerCard.name;\n        const parArray = playerCard.par || [];\n        const scoreArray = playerCard.score || [];\n        const puttArray = playerCard.putts || [];\n\n        // 18홀로 제한 (홀은 한 사람당 최대 18홀)\n        const maxHoles = 18;\n        const parLimited = parArray.slice(0, maxHoles);\n        const scoreLimited = scoreArray.slice(0, maxHoles);\n        const puttLimited = puttArray.slice(0, maxHoles);\n\n        let playerChunks = [];\n        let holeStart = 1; // 홀 번호 시작\n\n        // 각 플레이어의 홀을 chunkSize 단위로 나누기\n        for (let i = 0; i < parLimited.length; i += chunkSize) {\n          const chunk = parLimited.slice(i, i + chunkSize);\n          const scoreChunk = scoreLimited.slice(i, i + chunkSize);\n          const puttChunk = puttLimited.slice(i, i + chunkSize);\n\n          // 각 청크가 chunkSize 크기가 안되면 '-'로 채우기\n          while (chunk.length < chunkSize) {\n            chunk.push('-');\n            scoreChunk.push('-');\n            puttChunk.push('-');\n          }\n\n          // 각 청크의 합 계산\n          const parSum = chunk.filter((val) => val !== '-').reduce((a, b) => a + b, 0);\n          const scoreSum = scoreChunk.filter((val) => val !== '-').reduce((a, b) => a + b, 0);\n          const puttSum = puttChunk.filter((val) => val !== '-').reduce((a, b) => a + b, 0);\n\n          const holes = Array.from({ length: chunk.length }, (_, idx) => holeStart + idx);\n          holeStart += chunk.length;\n\n          playerChunks.push({\n            playerName: playerName, // 플레이어 이름 추가\n            holes: holes,\n            pars: chunk,\n            scores: scoreChunk,\n            putts: puttChunk,\n            parSum: parSum,\n            scoreSum: scoreSum,\n            puttSum: puttSum,\n          });\n        }\n\n        // 플레이어별 chunks에 추가\n        chunks.push({ playerName, playerChunks });\n      });\n\n      // 이 부분에서 chunks 값을 this.chunks로 할당하여 반영\n      this.chunks = chunks;\n\n      console.log('데이터', chunks);  // 콘솔에 확인하여 chunks 배열 구조를 출력해보기\n\n\n    },\n    // generateTables(holeCount) {\n    //   const tables = [];\n    //   let start = 1;\n    //   while (start <= holeCount) {\n    //     const end = Math.min(start + 8, holeCount);\n    //     const holes = [];\n    //     for (let i = start; i <= end; i++) {\n    //       holes.push(i);\n    //     }\n    //     tables.push({ holes });\n    //     start = end + 1;\n    //   }\n    //   return tables;\n    // },\n    // calculateTotal(array, holes) {\n    //   return array\n    //     .slice(holes[0] - 1, holes[holes.length - 1])\n    //     .reduce((a, b) => a + b, 0);\n    // },\n    // calculateTotalWithPar(scores, par, holes) {\n    //   const totalScore = scores\n    //     .slice(holes[0] - 1, holes[holes.length - 1])\n    //     .reduce((a, b) => a + b, 0);\n    //   const totalPar = par\n    //     .slice(holes[0] - 1, holes[holes.length - 1])\n    //     .reduce((a, b) => a + b, 0);\n    //   return `${totalScore} (${totalScore + totalPar})`;\n    // },\n    // calculateParSum(par, holes) {\n    //   return par.slice(holes[0] - 1, holes[holes.length - 1]).reduce((a, b) => a + b, 0);\n    // },\n    closeModal() {\n      this.$emit(\"closeModal\");\n    },\n  },\n};\n</script>\n\n<style scoped src=\"@/style/record/gamescorecard.css\"></style>"]}]}