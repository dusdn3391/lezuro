{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerGameManagementList.vue?vue&type=style&index=0&id=270eee13&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerGameManagementList.vue","mtime":1733298783930},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi53cmFwcGVyIHsKICBmbGV4LWdyb3c6IDE7CiAgLyog64KY66i47KeAIOqzteqwhOydhCDssKjsp4DtlZjqsowg7ZWoICovCiAgcGFkZGluZzogMzBweDsKICBnYXA6IDIwcHg7Cn0KCi8qIO2DgOydtO2LgCDrsJXsiqQgKi8KLnRpdGxlLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIOuwqSDrpqzsiqTtirgg67CV7IqkICovCi5yb29tLWxpc3QtYm94IHsKICB3aWR0aDogMTAwJTsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMTVweCAzMHB4Owp9CgoudGFibGVfYm94IHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBnYXA6IDQwcHg7CiAgd2lkdGg6IDEwMCU7Cn0KCi5jYXJkX2JveCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiA0MHB4OwoKICBwYWRkaW5nOiAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgbWF4LXdpZHRoOiBjYWxjKDQ1MHB4ICogMyArIDQ1cHggKiAzKTsKICAvKiDrtoDrqqgg7JqU7IaM7J2YIOy1nOuMgCDrhIjruYQgKi8KICBtYXJnaW46IDAgYXV0bzsKICAvKiDqsIDsmrTrjbAg7KCV66CsICovCn0KCi5jYXJkIHsKICBmbGV4OiAxIDAgY2FsYygoMTAwJSAtIDgwcHgpIC8gMyk7CiAgLyogM+yXtOuhnCDqt6Drk7Eg67Cw7LmYICovCiAgbWF4LXdpZHRoOiBjYWxjKCgxMDAlIC0gODBweCkgLyAzKTsKICBvdmVyZmxvdzogaGlkZGVuOwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgLyogMjQuMTIuMDQg7IiY7KCVIC0g7LaU6rCAICovCiAgYm9yZGVyLXJhZGl1czogMjBweDsKfQoKLmNhcmQtaW1hZ2UgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMjUwcHg7Cn0KCi5jYXJkLWluZm8gewogIHBhZGRpbmc6IDMzcHggMzBweDsKfQoKLmNhcmQtaW5mbyBoMiB7CiAgbWFyZ2luLWJvdHRvbTogMzBweDsKICBsaW5lLWhlaWdodDogODAlOwp9CgouY2FyZC1pbmZvIGRpdiB7CiAgZGlzcGxheTogZmxleDsKICBsaW5lLWhlaWdodDogNzAlOwogIG1hcmdpbi1ib3R0b206IDE1cHg7CiAgY29sb3I6ICM2NjY7Cn0KCi5jYXJkLWluZm8gcCB7CiAgbWFyZ2luOiA1cHggMDsKfQoKLmNhcmQtaW5mbyBkaXY6bnRoLWNoaWxkKDQpIHsKICBtYXJnaW4tYm90dG9tOiAwcHg7Cn0KCi5jYXJkLWluZm8gZGl2IHNwYW4gewogIHdpZHRoOiA0OHB4OwogIGxpbmUtaGVpZ2h0OiA4MCU7Cn0KCi5jYXJkLWluZm8gZGl2IHAgewogIGNvbG9yOiAjMjIyOwogIG1hcmdpbi1sZWZ0OiAxMHB4OwogIHBhZGRpbmc6IDA7Cn0KCi8qIC5jYXJkLWluZm8gZGl2Om50aC1jaGlsZCg0KSBkaXYgewogIGRpc3BsYXk6IGZsZXg7CiAgbWFyZ2luLWJvdHRvbTogMHB4OwogIGxpbmUtaGVpZ2h0OiAxMjAlOwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7Cn0gKi8KCi5jYXJkLnNlbGVjdGVkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgLyog67CY7Yis66qFIOuwsOqyvSAqLwp9CgovKiDsiJjsoJXtlZjquLAg67KE7Yq8ICovCi5lZGl0LW92ZXJsYXkgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTsKfQoKLmVkaXQtYnV0dG9uIHsKICBwYWRkaW5nOiAxOXB4IDY0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXI6IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwogIHdpZHRoOiAyMDBweDsKICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7Cn0KCi5wYWdpbmF0aW9uLWNvbnRyb2xzIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGdhcDogMjBweDsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi1ib3R0b206IDIwMHB4Owp9CgovKiAyNC4xMi4wNCDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVycyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGdhcDogMjBweDsKfQoKLyogMjQuMTIuMDQg7IiY7KCVIC0g7LaU6rCAICovCi5wYWdlLW51bWJlciB7CiAgd2lkdGg6IDQwcHg7CiAgaGVpZ2h0OiA0MHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi8qIDI0LjEyLjA0IOyImOyglSAtIOy2lOqwgCAqLwoucGFnZS1udW1iZXIuYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwogIGNvbG9yOiB3aGl0ZTsKfQoKLyogMjQuMTIuMDQg7IiY7KCVIC0g7LaU6rCAICovCi5wYWdlLW51bWJlcjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsKfQoKLnBhZ2luYXRpb24tYXJyb3cgewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnBhZ2luYXRpb24tYXJyb3cuZGlzYWJsZWQgewogIG9wYWNpdHk6IDAuNTsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOwp9CgoucGFnaW5hdGlvbi1hcnJvdy5mbGlwcGVkIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOwp9Cgouc3RhdHVzLWJveCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGRpc3BsYXk6IGZsZXg7CiAgLyogRmxleGJveCDsu6jthYzsnbTrhIjroZwg7ISk7KCVICovCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgLyog6rCA66GcIOykkeyVmSDsoJXroKwgKi8KICBhbGlnbi1pdGVtczogY2VudGVyOwogIC8qIOyEuOuhnCDspJHslZkg7KCV66CsICovCiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxNXB4IDQwcHg7Cn0KCi5zdGF0dXMtYm94LmdhbWUgewogIGJhY2tncm91bmQtY29sb3I6ICNkMzBmMWE7CiAgLyogUmVkIGZvciBnYW1lICjrqqjsp5HspJEpICovCn0KCi5zdGF0dXMtYm94LmNvbXBldGl0aW9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg0MTk5OwogIC8qIEJsdWUgZm9yIGNvbXBldGl0aW9uICjsp4TtlonspJEpICovCn0KCi5zdGF0dXMtYm94LmVuZGVkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY2NjY2OwogIC8qIEJsYWNrIGZvciBlbmRlZCAo7KKF66OMKSAqLwp9Cgouc2VhcmNoX2JveCB7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgZ2FwOiAxMHB4OwogIGRpc3BsYXk6IGZsZXg7Cn0KCi5zZWxlY3RfYm94XzEgewogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2t3aGl0ZXdoaXRlKTsKICBkaXNwbGF5OiBmbGV4OwogIGhlaWdodDogNjBweDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgcGFkZGluZzogMHB4IDIwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiAyNTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwp9Cgouc2VsZWN0X2JveF8xIHNlbGVjdCwKLnNlbGVjdF9ib3hfMiBpbnB1dCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJvcmRlcjogbm9uZTsKICBvdXRsaW5lOiBub25lOwp9Cgouc2VsZWN0X2JveF8yIHsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrd2hpdGV3aGl0ZSk7CiAgZGlzcGxheTogZmxleDsKICBoZWlnaHQ6IDYwcHg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIHBhZGRpbmc6IDBweCAyMHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTE3MHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7Cn0KCi5jYXJkLWNoZWNrYm94IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAxMHB4OwogIHJpZ2h0OiAxMHB4OwogIHdpZHRoOiAyMHB4OwogIHotaW5kZXg6IDk5OTsKICBoZWlnaHQ6IDIwcHg7Cn0KCi5kZWxldGUtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDAlOwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7Cn0KCi5kZWxldGUtYnV0dG9uIHsKICBib3JkZXI6IG5vbmU7CiAgd2lkdGg6IDE1MHB4OwogIGhlaWdodDogNDVweDsKICBsaW5lLWhlaWdodDogMjEuNDhweDsKICBjb2xvcjogI2ZmZmZmZjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjOwp9Cg=="},{"version":3,"sources":["ManagerGameManagementList.vue"],"names":[],"mappings":";AAifile":"ManagerGameManagementList.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">대회 관리</h2>\n          </div>\n          <div class=\"search_box\">\n            <div class=\"select_box_1\">\n              <!-- 대회이름을 선택할 수 있는 select box -->\n              <!-- 24.12.04 수정 - 옵션 검색 추가 -->\n              <select class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\" v-model=\"selectedOption\">>\n                <!-- 24.12.04 수정 - 옵션 추가 -->\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"name\" selected>대회이름</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"id\">대회고유번호</option>\n              </select>\n            </div>\n            <div class=\"select_box_2\">\n              <!-- 검색어 입력 필드 -->\n              <input type=\"text\" class=\"text-2537 pretendard-regular-normal-mountain-mist-18px\" placeholder=\"검색어를 입력하세요\"\n                v-model=\"searchQuery\" />\n              <img class=\"search-btn-10\"\n                src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/searchbtn-9.svg\"\n                alt=\"searchBtn\" />\n            </div>\n          </div>\n          <!-- 카드 리스트 부분 -->\n          <div class=\"card_box\">\n            <div class=\"table_box\">\n              <div v-for=\"card in paginatedCards\" :key=\"card.id\" class=\"card\" :class=\"{ selected: card.isSelected }\"\n                @mouseover=\"setHoveredCard(card.id)\" @mouseleave=\"clearHoveredCard\">\n                <input type=\"checkbox\" class=\"card-checkbox\" :value=\"card.id\" v-model=\"selectedCardIds\" />\n                <div :class=\"['status-box', card.type]\">\n                  {{\n                    card.type === \"game\"\n                      ? \"모집중\"\n                      : card.type === \"competition\"\n                        ? \"진행중\"\n                        : \"종료\"\n                  }}\n                </div>\n                <!-- <img :src=\"card.image\" alt=\"대회 이미지\" class=\"card-image\" /> -->\n                <!-- 24.12.04 수정 - 추가 -->\n                <img :src=\"card.image && card.image.trim() ? card.image : basicCardImage\" alt=\"대회 이미지\"\n                  class=\"card-image\" />\n                <div class=\"card-info\">\n                  <h2 class=\"pretendard-bold-log-cabin-24px\">\n                    {{ card.name }}\n                  </h2>\n                  <div>\n                    <span>번호</span>\n                    <p>{{ card.id }}</p>\n                  </div>\n                  <div>\n                    <span>기간</span>\n                    <p>{{ card.period }}</p>\n                  </div>\n                  <div>\n                    <span>진행</span>\n                    <div>\n                      <p v-for=\"(info, index) in getShopInfo(card.branchNames)\" :key=\"index\">\n                        {{ info }}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 수정하기 버튼 -->\n                <div v-if=\"hoveredCardId === card.id\" class=\"edit-overlay\">\n                  <button class=\"edit-button\" @click.stop=\"editCard(card.id)\">\n                    수정하기\n                  </button>\n                </div>\n              </div>\n            </div>\n            <!-- 페이징 컨트롤 -->\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <!-- 24.12.04 수정 - 추가 -->\n                <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport { managerStore } from \"@/store/managerStore\";\nexport default {\n  name: \"ManagerGameManagementList\",\n  components: {\n    ManagerHeader,\n    ManagerNavbar,\n  },\n  data() {\n    return {\n      cards: [],\n      searchQuery: \"\",\n      selectedCardId: null,\n      hoveredCardId: null,\n      selectedOption: \"name\", // 24.12.04 수정 - 선택한 검색 기준 (기본값: \"name\")\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      currentPage: 1,\n      itemsPerPage: 6,\n      // 24.12.04 수정 - 추가\n      basicCardImage: require('../../../img/CK_ti436a27207 1.png')\n    };\n  },\n  mounted() {\n    this.getMGame();\n  },\n  computed: {\n    // 24.12.04 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    filteredCards() {\n      if (!this.searchQuery.trim()) {\n        console.log(\"검색어 없음, 전체 반환:\", this.cards);\n        return this.cards; // 검색어가 없으면 전체 코스 반환\n      }\n      const query = this.searchQuery.toLowerCase();\n      // 선택한 옵션(selectedOption)에 따라 필터링\n      const result = this.cards.filter((card) =>\n        card[this.selectedOption]?.toString().toLowerCase().includes(query)\n      );\n\n      console.log(\"검색 결과:\", result);\n      return result;\n    },\n    filteredCardsEntire() {\n      return this.cards.filter(\n        (card) =>\n          card.type === \"game\" ||\n          card.type === \"competition\" ||\n          card.type === \"ended\"\n      );\n    },\n    filteredCardsGame() {\n      return this.cards.filter((card) => card.type === \"game\");\n    },\n    filteredCardsCompetition() {\n      return this.cards.filter((card) => card.type === \"competition\");\n    },\n    filteredCardsEnded() {\n      return this.cards.filter((card) => card.type === \"ended\");\n    },\n    totalPages() {\n      return Math.ceil(this.filteredCards.length / this.itemsPerPage);\n    },\n    paginatedCards() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredCards.slice(start, start + this.itemsPerPage).map((card) => ({\n        ...card,\n        isSelected: card.id === this.selectedCardId,\n      }));\n    },\n  },\n  // 24.12.04 수정 - 추가\n  watch: {\n    filteredCards() {\n      this.currentPage = 1; // 검색 결과 변경 시 첫 페이지로 이동\n    },\n  },\n  methods: {\n    async getMGame() {\n      try {\n        const response = await managerStore.getTask(\"competitions\");\n        console.log(\"전체 응답 구조:\", response); // 전체 응답 구조 확인\n\n        // response와 response.data가 모두 존재하는지 확인하고 competitions 배열을 일반 객체로 변환\n        // const competitionsData = JSON.parse(JSON.stringify(response?.data?.competitions || []));\n        // array.forEach(element => {\n        const today = new Date();\n        console.log(\"today 123\", today);\n        today.setHours(0, 0, 0, 0); // 시간 부분을 00:00:00으로 설정하여 날짜만 비교\n\n        this.cards = response.map((card) => {\n          // 날짜 포맷팅: \"YYYY-MM-DD\" 형식으로 변환\n          const formattedStartDate = card.startDate\n            ? card.startDate.split(\"T\")[0]\n            : \"\";\n          const formattedEndDate = card.endDate\n            ? card.endDate.split(\"T\")[0]\n            : \"\";\n\n          // 24.11.20 수정 - 추가\n          const startDate = new Date(formattedStartDate);\n          const endDate = new Date(formattedEndDate);\n\n          // Date 객체로 변환되었는지 확인\n          if (startDate instanceof Date && !isNaN(startDate.getTime())) {\n            startDate.setHours(0, 0, 0, 0); // 시간 부분을 00:00:00으로 설정하여 날짜만 비교\n          } else {\n            console.error(\"startDate가 잘못된 형식입니다: \", card.startDate);\n          }\n\n          if (endDate instanceof Date && !isNaN(endDate.getTime())) {\n            endDate.setHours(0, 0, 0, 0); // 시간 부분을 00:00:00으로 설정하여 날짜만 비교\n          } else {\n            console.error(\"endDate가 잘못된 형식입니다: \", card.endDate);\n          }\n\n          // period와 today를 비교하여 type 계산\n          let type = \"game\"; // 기본값\n          if (startDate && endDate) {\n            if (endDate < today) {\n              type = \"ended\";\n            } else if (startDate <= today && today <= endDate) {\n              type = \"competition\";\n            }\n          }\n\n          return {\n            id: card.id,\n            name: card.name,\n            type,\n            image: card.posterUrl || null,\n            period: `${formattedStartDate} ~ ${formattedEndDate}`, // 포맷된 날짜 사용\n            // type: card.status === \"ONGOING\" ? \"game\" : card.status === \"COMPETITION\" ? \"competition\" : \"ended\",\n            branchIds: card.branchIds,\n            branchNames: card.branchNames || [],\n          };\n        });\n\n        console.log(\"cards : : : \", this.cards); // 변환된 cards 데이터 확인\n      } catch (error) {\n        console.error(\"대회 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n        this.selectedCardId = null; // 페이지 전환 시 선택 해제\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.selectedCardId = null; // 페이지 전환 시 선택 해제\n      }\n    },\n    goToPage(page) {\n      // 24.12.04 수정 - 추가\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n      this.selectedCardId = null; // 페이지 전환 시 선택 해제\n    },\n    setHoveredCard(cardId) {\n      this.hoveredCardId = cardId;\n    },\n    clearHoveredCard() {\n      this.hoveredCardId = null;\n    },\n    editCard(cardId) {\n      this.$router.push({\n        name: \"ManagerGameManagement\",\n        params: { id: cardId },\n      });\n    },\n    async deleteSelectedCards() {\n      if (this.selectedCardIds.length === 0) {\n        alert(\"삭제할 대회를 선택해주세요.\");\n        return;\n      }\n\n      try {\n        // 선택된 각 대회 ID에 대해 삭제 요청\n        for (const id of this.selectedCardIds) {\n          await managerStore.deleteTask(`competitions/${id}`);\n          console.log(`대회 ID ${id} 삭제 완료`);\n        }\n\n        // cards 배열에서 삭제된 대회 제거\n        this.cards = this.cards.filter(\n          (card) => !this.selectedCardIds.includes(card.id)\n        );\n\n        // 선택된 ID 배열 초기화\n        this.selectedCardIds = [];\n        alert(\"선택된 대회가 삭제되었습니다.\");\n        window.location.reload();\n      } catch (error) {\n        console.error(\"대회 삭제 중 오류 발생:\", error);\n        alert(\"대회를 삭제하는 중 오류가 발생했습니다. 다시 시도해주세요.\");\n      }\n    },\n    getShopInfo(branchNames) {\n      if (!branchNames || !Array.isArray(branchNames)) {\n        return [];\n      }\n      // branchNames 배열에서 최대 3개의 매장 이름만 표시, 그 외에는 '외 X개' 형식으로 출력\n      if (branchNames.length <= 3) {\n        return branchNames;\n      } else {\n        return [...branchNames.slice(0, 3), `외 ${branchNames.length - 3}개`];\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n.wrapper {\n  flex-grow: 1;\n  /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  gap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 방 리스트 박스 */\n.room-list-box {\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 30px;\n  background-color: #fff;\n  padding: 15px 30px;\n}\n\n.table_box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  width: 100%;\n}\n\n.card_box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n\n  padding: 30px;\n  background-color: #fff;\n  max-width: calc(450px * 3 + 45px * 3);\n  /* 부모 요소의 최대 너비 */\n  margin: 0 auto;\n  /* 가운데 정렬 */\n}\n\n.card {\n  flex: 1 0 calc((100% - 80px) / 3);\n  /* 3열로 균등 배치 */\n  max-width: calc((100% - 80px) / 3);\n  overflow: hidden;\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n  position: relative;\n  /* 24.12.04 수정 - 추가 */\n  border-radius: 20px;\n}\n\n.card-image {\n  width: 100%;\n  height: 250px;\n}\n\n.card-info {\n  padding: 33px 30px;\n}\n\n.card-info h2 {\n  margin-bottom: 30px;\n  line-height: 80%;\n}\n\n.card-info div {\n  display: flex;\n  line-height: 70%;\n  margin-bottom: 15px;\n  color: #666;\n}\n\n.card-info p {\n  margin: 5px 0;\n}\n\n.card-info div:nth-child(4) {\n  margin-bottom: 0px;\n}\n\n.card-info div span {\n  width: 48px;\n  line-height: 80%;\n}\n\n.card-info div p {\n  color: #222;\n  margin-left: 10px;\n  padding: 0;\n}\n\n/* .card-info div:nth-child(4) div {\n  display: flex;\n  margin-bottom: 0px;\n  line-height: 120%;\n  flex-direction: column;\n  align-items: flex-start;\n} */\n\n.card.selected {\n  background-color: rgba(0, 0, 0, 0.5);\n  /* 반투명 배경 */\n}\n\n/* 수정하기 버튼 */\n.edit-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.2);\n}\n\n.edit-button {\n  padding: 19px 64px;\n  background-color: #fff;\n  border: none;\n  cursor: pointer;\n  width: 200px;\n  transition: background-color 0.3s;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n  width: 100%;\n  margin-bottom: 200px;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-numbers {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n\n.status-box {\n  position: absolute;\n  display: flex;\n  /* Flexbox 컨테이너로 설정 */\n  justify-content: center;\n  /* 가로 중앙 정렬 */\n  align-items: center;\n  /* 세로 중앙 정렬 */\n  text-align: center;\n  color: white;\n  padding: 15px 40px;\n}\n\n.status-box.game {\n  background-color: #d30f1a;\n  /* Red for game (모집중) */\n}\n\n.status-box.competition {\n  background-color: #184199;\n  /* Blue for competition (진행중) */\n}\n\n.status-box.ended {\n  background-color: #666666;\n  /* Black for ended (종료) */\n}\n\n.search_box {\n  width: 100%;\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n  gap: 10px;\n  display: flex;\n}\n\n.select_box_1 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 250px;\n  border: 1px solid #ddd;\n}\n\n.select_box_1 select,\n.select_box_2 input {\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n}\n\n.select_box_2 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 1170px;\n  border: 1px solid #ddd;\n}\n\n.card-checkbox {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 20px;\n  z-index: 999;\n  height: 20px;\n}\n\n.delete-container {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n}\n\n.delete-button {\n  border: none;\n  width: 150px;\n  height: 45px;\n  line-height: 21.48px;\n  color: #ffffff;\n  background-color: #ccc;\n}\n</style>\n"]}]}