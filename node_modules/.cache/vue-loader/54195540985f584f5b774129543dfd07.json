{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerReservationConformModal.vue?vue&type=style&index=0&id=a738d0fa&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerReservationConformModal.vue","mtime":1732771889797},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLm1vZGFsLW92ZXJsYXkgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgdG9wOiAwOwogICAgbGVmdDogMDsKICAgIHdpZHRoOiAxMDB2dzsKICAgIGhlaWdodDogMTAwdmg7CiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNSk7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgei1pbmRleDogMTAwMDsKICB9CiAgCiAgLm1vZGFsLWNvbnRlbnQgewogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHdpZHRoOiA4ODBweDsKICAgIHBhZGRpbmc6IDQwcHg7CiAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgYm94LXNoYWRvdzogMHB4IDRweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICB9CiAgCiAgaDIgewogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICB9CiAgCiAgLmZvcm0tZ3JvdXAgewogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICB9CiAgCiAgLmRhdGUtcGlja2VyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogMTBweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgfQogIAogIC50aW1lLXNlbGVjdG9ycyB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgZ2FwOiAyMHB4OwogIH0KICAKICAudGltZS1waWNrZXIgewogICAgd2lkdGg6IDQ4JTsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogIH0KICAKICAubWVtby1pbnB1dCB7CiAgICB3aWR0aDogMTAwJTsKICAgIC8qIGhlaWdodDoyMzBweDsgKi8KICAgIHBhZGRpbmc6IDEwcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgcmVzaXplOiBub25lOwogICAgcGFkZGluZy10b3A6MjBweDsgCiAgfQogIAogIC5idXR0b25zIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgfQogIAogIC5jYW5jZWwtYnRuLAogIC5jb25maXJtLWJ0biB7CiAgICB3aWR0aDogNDglOwogICAgcGFkZGluZzogMTVweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICB9CiAgCiAgLmNhbmNlbC1idG4gewogICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYzsKICAgIGNvbG9yOiAjZmZmOwogIH0KICAKICAuY29uZmlybS1idG4gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMzM5OTsKICAgIGNvbG9yOiAjZmZmOwogIH0KICAKICAuZXJyb3ItbWVzc2FnZSB7CiAgICBjb2xvcjogcmVkOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgbWFyZ2luLXRvcDogNXB4OwogIH0KICAuYmx1ZS1idXR0b24gewogIGJhY2tncm91bmQtY29sb3I6IGJsdWU7CiAgY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDEwcHggMjBweDsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIG1hcmdpbjogNXB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmdyZXktYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5OwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxMHB4IDIwcHg7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBtYXJnaW46IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KICA="},{"version":3,"sources":["ManagerReservationConformModal.vue"],"names":[],"mappings":";AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ManagerReservationConformModal.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n    <div class=\"modal-overlay\" @click.self=\"closeModal\">\n      <div class=\"modal-content\">\n\n        <button class=\"blue-button\" @click=\"selectedStatus('예약완료')\">예약완료</button>\n        <button class=\"grey-button\" @click=\"selectedStatus('예약취소')\">예약취소</button>\n        \n        <h2 class=\"pretendard-bold-mine-shaft-18px\">선택한 상태: {{ selected }}</h2>\n\n        <div class=\"form-group buttons\">\n          <button class=\"cancel-btn\" @click=\"closeModal\">취소하기</button>\n          <button class=\"confirm-btn\" @click=\"confirmModal\">확인하기</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\nimport { managerStore } from '@/store/managerStore';  // API 호출\n  \n  export default {\n      name:\"ManagerReservationModal\",\n    data() {\n      return {\n        showModal: false, // Modal visibility\n        selected: '', // Currently selected status\n        // reserId : 184,\n        values : \"\"\n      };\n    },\n    props:{\n    //   selectedRoom: {\n    //     type: Object, // 전달받는 데이터 타입 설정 (예시: String 또는 Number)\n    //     required: true, // 필수 prop 여부\n    //   },\n    //   selectedReservation: {\n    //     type: Object,\n    //     required: false,\n    //   },\n    reserId: {\n        type: Number,\n        default: false,\n      },\n      reserStatus: {\n        type: String,\n      },\n    },\n    watch: {\n        selected(newValue, oldValue) {\n        console.log(\"Selected status changed:\", { oldValue, newValue });\n    },\n  },\n    mounted() {\n      this.selected = this.reserStatus\n      if(this.selecte === \"confirm\"){\n        this.selected = \"예약완료\"\n      }else if(this.selecte === \"cancel\"){\n        this.selected = \"예약취소\"\n      }else{\n        this.selected = \"접수중\"\n      }\n    },\n    methods: {\n    selectedStatus(status) {\n      this.selected = status;\n    //   this.showModal = true;\n    },\n    confirmSelection() {\n      alert(`${this.selectedStatus} 상태가 확인되었습니다.`);\n      this.closeModal();\n    },\n    closeModal() {\n        this.$emit(\"close\");\n    },\n    async confirmModal() {\n        console.log(\"selectedStatus : : : : \" ,this.reserId)\n        // 통신 후 업데이트\n\n        if(this.selected === \"예약완료\"){\n            this.values = \"confirm\"\n        }else{\n            this.values = \"cancel\"\n        }\n        \n        const params = {\n            \"status\" : this.values\n        }\n        console.log(\"params : : : \" , params )\n        const roomDt = await managerStore.updateTask(`reservations/${this.reserId}/status`,params);\n        console.log(\"Manager ID:\", JSON.stringify(roomDt));\n         this.$emit(\"confirm\");\n    },\n  \n  }\n  };\n  </script>\n  \n  <style scoped>\n  .modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n  \n  .modal-content {\n    background: #fff;\n    width: 880px;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  }\n  \n  h2 {\n    margin-bottom: 20px;\n  }\n  \n  .form-group {\n    margin-bottom: 20px;\n  }\n  \n  .date-picker {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  \n  .time-selectors {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n  }\n  \n  .time-picker {\n    width: 48%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n  }\n  \n  .memo-input {\n    width: 100%;\n    /* height:230px; */\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    resize: none;\n    padding-top:20px; \n  }\n  \n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n  \n  .cancel-btn,\n  .confirm-btn {\n    width: 48%;\n    padding: 15px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n  .cancel-btn {\n    background-color: #ccc;\n    color: #fff;\n  }\n  \n  .confirm-btn {\n    background-color: #003399;\n    color: #fff;\n  }\n  \n  .error-message {\n    color: red;\n    font-size: 14px;\n    margin-top: 5px;\n  }\n  .blue-button {\n  background-color: blue;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  margin: 5px;\n  cursor: pointer;\n}\n\n.grey-button {\n  background-color: grey;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  margin: 5px;\n  cursor: pointer;\n}\n  </style>\n  "]}]}