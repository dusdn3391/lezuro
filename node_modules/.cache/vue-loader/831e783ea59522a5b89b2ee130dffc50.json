{"remainingRequest":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jjs/Downloads/lezuro_all-main 3/src/components/MyContactDetail.vue?vue&type=template&id=5abce9c5","dependencies":[{"path":"/Users/jjs/Downloads/lezuro_all-main 3/src/components/MyContactDetail.vue","mtime":1728287688000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/cache-loader/dist/cjs.js","mtime":1726706431000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/cache-loader/dist/cjs.js","mtime":1726706431000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/babel-loader/lib/index.js","mtime":1726706432000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1726706429000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/cache-loader/dist/cjs.js","mtime":1726706431000},{"path":"/Users/jjs/Downloads/lezuro_all-main 3/node_modules/vue-loader/lib/index.js","mtime":1726706429000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}