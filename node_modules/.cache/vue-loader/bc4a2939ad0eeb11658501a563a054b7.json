{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/TermsView.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/TermsView.vue","mtime":1734673215830},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAiQC9zdG9yZS90YXNrU3RvcmUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUZXJtc1ZpZXciLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlciwKICAgIFJqWnNXaSwKICAgIFhGb290ZXIsCiAgfSwKICBwcm9wczogWyJySlpzV0lQcm9wcyIsICJ4Rm9vdGVyUHJvcHMiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFiczogWyLsnbTsmqnslb3qtIAiLCAi6rCc7J247KCV67O07LKY66as67Cp7LmoIiwgIuychOy5mOygleuztOydtOyaqeyVveq0gCJdLAogICAgICBzZWxlY3RlZFRhYjogIuydtOyaqeyVveq0gCIsIC8vIOq4sOuzuOqwkjog7LKrIOuyiOynuCDtg60KICAgICAgdGVybXNDb250ZW50OiBbXSwgLy8g66Gc65Oc65CcIOyVveq0gCDrjbDsnbTthLAg7KCA7J6lCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIGNvbnN0IHRhYkZyb21RdWVyeSA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnRhYjsKICAgIGlmICh0aGlzLnRhYnMuaW5jbHVkZXModGFiRnJvbVF1ZXJ5KSkgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGFiRnJvbVF1ZXJ5OwogICAgfQogICAgdGhpcy5sb2FkVGVybXNEYXRhKCk7IC8vIOy0iOq4sCDrjbDsnbTthLAg66Gc65OcCiAgICB0aGlzLnVwZGF0ZVRpdGxlKCk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgdGhpcy51cGRhdGVUaXRsZSk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMudXBkYXRlVGl0bGUpOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgbG9hZFRlcm1zRGF0YSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5nZXRTZWxlY3RUYXNrcygidGVybXMiKTsKICAgICAgICBjb25zb2xlLmxvZygi67Cb7J2AIOuNsOydtO2EsDoiLCByZXNwb25zZSk7CgogICAgICAgIC8vIGBzZWxlY3RlZFRhYmDsl5Ag65Sw66W4IOyVveq0gCDtg4DsnoUg7KCV7J2YCiAgICAgICAgY29uc3QgdHlwZU1hcHBpbmcgPSB7CiAgICAgICAgICDsnbTsmqnslb3qtIA6ICLsnbTsmqnslb3qtIAiLAogICAgICAgICAg6rCc7J247KCV67O07LKY66as67Cp7LmoOiAi6rCc7J247KCV67O0IiwKICAgICAgICAgIOychOy5mOygleuztOydtOyaqeyVveq0gDogIuychOy5mOygleuztCIsCiAgICAgICAgfTsKICAgICAgICBjb25zdCBzZWxlY3RlZFR5cGUgPSB0eXBlTWFwcGluZ1t0aGlzLnNlbGVjdGVkVGFiXTsKCiAgICAgICAgLy8gMjQuMTIuMDUg7IiY7KCVIC0g7LaU6rCAIDogYHNlbGVjdGVkVGFiYOyXkCDtlbTri7ntlZjripQg642w7J207YSw66eMIO2VhO2EsOungQogICAgICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IHJlc3BvbnNlLmZpbHRlcigoaXRlbSkgPT4gaXRlbS50eXBlID09PSBzZWxlY3RlZFR5cGUpOwoKICAgICAgICAvLyAgMjQuMTIuMDUg7IiY7KCVIC0g7LaU6rCAIDogYGNvbnRlbnRg7J2YIDxicj4g7YOc6re466W8IOykhOuwlOq/iOycvOuhnCDrjIDssrQKICAgICAgICBjb25zdCBwcm9jZXNzZWREYXRhID0gZmlsdGVyZWREYXRhLm1hcCgoaXRlbSkgPT4gKHsKICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQucmVwbGFjZSgvPGJyXHMqXC8/Pi9nLCAiXG4iKSwgLy8gPGJyPiAtPiBcbgogICAgICAgIH0pKTsKCiAgICAgICAgLy8gMjQuMTIuMDUg7IiY7KCVIC0g7LaU6rCAIDogdGl0bGXsnZgg7Iir7J6Q66W8IOq4sOykgOycvOuhnCDsoJXroKwKICAgICAgICBjb25zdCBzb3J0ZWREYXRhID0gcHJvY2Vzc2VkRGF0YS5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgICBjb25zdCBudW1BID0gcGFyc2VJbnQoYS50aXRsZS5tYXRjaCgvXGQrLyk/LlswXSB8fCAwLCAxMCk7CiAgICAgICAgICBjb25zdCBudW1CID0gcGFyc2VJbnQoYi50aXRsZS5tYXRjaCgvXGQrLyk/LlswXSB8fCAwLCAxMCk7CiAgICAgICAgICByZXR1cm4gbnVtQSAtIG51bUI7CiAgICAgICAgfSk7CgogICAgICAgIC8vIGBzZWxlY3RlZFRhYmDsl5Ag7ZW064u57ZWY64qUIOuNsOydtO2EsOunjCDtlYTthLDrp4EKICAgICAgICAvLyB0aGlzLnRlcm1zQ29udGVudCA9IHJlc3BvbnNlLmZpbHRlcigoaXRlbSkgPT4gaXRlbS50eXBlID09PSBzZWxlY3RlZFR5cGUpOwogICAgICAgIC8vIDI0LjEyLjA1IOyImOyglSAtIOy2lOqwgCA6IHRpdGxlIGFzYyDsoJXroKwKICAgICAgICB0aGlzLnRlcm1zQ29udGVudCA9IHNvcnRlZERhdGE7IC8vIOygleugrOuQnCDrjbDsnbTthLAg7KCA7J6lCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi642w7J207YSw66W8IOqwgOyguOyYpOuKlCDspJEg7Jik66WYIOuwnOyDnToiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RUYWIodGFiTmFtZSkgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGFiTmFtZTsgLy8g7YOtIOyEoO2DnSDsl4XrjbDsnbTtirgKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBxdWVyeTogeyB0YWI6IHRhYk5hbWUgfSB9KTsgLy8gVVJMIOy/vOumrCDsl4XrjbDsnbTtirgKICAgICAgdGhpcy5sb2FkVGVybXNEYXRhKCk7IC8vIOuNsOydtO2EsCDri6Tsi5wg66Gc65OcCiAgICAgIHRoaXMudXBkYXRlVGl0bGUoKTsKICAgIH0sCiAgICB1cGRhdGVUaXRsZSgpIHsKICAgICAgY29uc3Qgd2luZG93V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDsKICAgICAgaWYgKHdpbmRvd1dpZHRoIDw9IDcyMCkgewogICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLnNlbGVjdGVkVGFiOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudGl0bGUgPSAi7JW96rSAIjsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["TermsView.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TermsView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"terms-2 screen\">\n      <Header />\n      <!-- <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" /> -->\n      <div class=\"terms_wrap\">\n        <div class=\"terms_title pretendard-bold-log-cabin-38px\">\n          약관\n        </div>\n        <div class=\"terms_view\">\n          <div class=\"tab-container\">\n            <!-- 24.12.20 수정 - 폰트 변경 -->\n            <div v-for=\"tab in tabs\" :key=\"tab\" :class=\"[\n              'tab-btn pretendard-medium-granite-gray-18px',\n              { active: selectedTab === tab },\n            ]\" @click=\"selectTab(tab)\">\n              {{ tab }}\n            </div>\n          </div>\n\n          <!-- 약관 데이터 렌더링 -->\n          <div v-if=\"termsContent && termsContent.length > 0\" class=\"terms\">\n            <div v-for=\"(term, index) in termsContent\" :key=\"index\" class=\"termsview\">\n              <div class=\"pretendard-light-granite-gray-18px\">\n                <p class=\"lorem-ipsum-dolor-si-11 valign-text-middle\">\n                  <!-- 24.12.20 수정 - 폰트 추가 -->\n                  <span class=\"pretendard-bold-black-18px\">{{ term.title }}</span><br />\n                  {{ term.content }}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"no-terms\">\n            <p class=\"pretendard-regular-normal-mine-shaft-16px\">약관 데이터가 없습니다.</p>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"TermsView\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\", \"xFooterProps\"],\n  data() {\n    return {\n      tabs: [\"이용약관\", \"개인정보처리방침\", \"위치정보이용약관\"],\n      selectedTab: \"이용약관\", // 기본값: 첫 번째 탭\n      termsContent: [], // 로드된 약관 데이터 저장\n    };\n  },\n  mounted() {\n    const tabFromQuery = this.$route.query.tab;\n    if (this.tabs.includes(tabFromQuery)) {\n      this.selectedTab = tabFromQuery;\n    }\n    this.loadTermsData(); // 초기 데이터 로드\n    this.updateTitle();\n    window.addEventListener(\"resize\", this.updateTitle);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.updateTitle);\n  },\n  methods: {\n    async loadTermsData() {\n      try {\n        const response = await taskStore.getSelectTasks(\"terms\");\n        console.log(\"받은 데이터:\", response);\n\n        // `selectedTab`에 따른 약관 타입 정의\n        const typeMapping = {\n          이용약관: \"이용약관\",\n          개인정보처리방침: \"개인정보\",\n          위치정보이용약관: \"위치정보\",\n        };\n        const selectedType = typeMapping[this.selectedTab];\n\n        // 24.12.05 수정 - 추가 : `selectedTab`에 해당하는 데이터만 필터링\n        const filteredData = response.filter((item) => item.type === selectedType);\n\n        //  24.12.05 수정 - 추가 : `content`의 <br> 태그를 줄바꿈으로 대체\n        const processedData = filteredData.map((item) => ({\n          ...item,\n          content: item.content.replace(/<br\\s*\\/?>/g, \"\\n\"), // <br> -> \\n\n        }));\n\n        // 24.12.05 수정 - 추가 : title의 숫자를 기준으로 정렬\n        const sortedData = processedData.sort((a, b) => {\n          const numA = parseInt(a.title.match(/\\d+/)?.[0] || 0, 10);\n          const numB = parseInt(b.title.match(/\\d+/)?.[0] || 0, 10);\n          return numA - numB;\n        });\n\n        // `selectedTab`에 해당하는 데이터만 필터링\n        // this.termsContent = response.filter((item) => item.type === selectedType);\n        // 24.12.05 수정 - 추가 : title asc 정렬\n        this.termsContent = sortedData; // 정렬된 데이터 저장\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n    selectTab(tabName) {\n      this.selectedTab = tabName; // 탭 선택 업데이트\n      this.$router.push({ query: { tab: tabName } }); // URL 쿼리 업데이트\n      this.loadTermsData(); // 데이터 다시 로드\n      this.updateTitle();\n    },\n    updateTitle() {\n      const windowWidth = window.innerWidth;\n      if (windowWidth <= 720) {\n        this.title = this.selectedTab;\n      } else {\n        this.title = \"약관\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped src=\"@/style/cs/termsview.css\"></style>"]}]}