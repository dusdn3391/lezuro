{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerHomepage.vue?vue&type=style&index=0&id=213caf7a&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerHomepage.vue","mtime":1731293985975},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi53cmFwcGVyIHsKICBmbGV4LWdyb3c6IDE7CiAgLyog64KY66i47KeAIOqzteqwhOydhCDssKjsp4DtlZjqsowg7ZWoICovCiAgcGFkZGluZzogMzBweDsKICBnYXA6IDIwcHg7Cn0KCi8qIO2DgOydtO2LgCDrsJXsiqQgKi8KLnRpdGxlLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIOuwqSDrpqzsiqTtirgg67CV7IqkICovCi5yb29tLWxpc3QtYm94IHsKICB3aWR0aDogMTAwJTsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMTVweCAzMHB4Owp9CgovKiDtj7wg7Luo7YWM7J2064SIICovCi5mb3JtLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDIwcHg7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIC8qIOuqqOyEnOumrCDrkaXquIDqsowgKi8KfQoKLyog7Y+8IOq3uOujuSAqLwouZm9ybS1ncm91cCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogNDBweDsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgpsYWJlbCB7CiAgd2lkdGg6IDY1cHg7Cn0KCmlucHV0LApzZWxlY3QsCnRleHRhcmVhIHsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMThweCAxNXB4Owp9CgovKiDthY3siqTtirgg7JiB7JetICovCnRleHRhcmVhIHsKICByZXNpemU6IG5vbmU7CiAgaGVpZ2h0OiAxMjBweDsKICAvKiDsnbTrr7jsp4Dsl5DshJwg67O07J2064qUIOuGkuydtOuhnCDrsJjsmIEgKi8KfQoKLm9wZXJhdGluZy1ob3VycyAuaG91cnMgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDEwcHg7Cn0KCi5ob3VycyBzcGFuIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCi5waG90b3MtcHJldmlldyB7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDEwcHg7Cn0KCi5waG90byB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgoucGhvdG8gaW1nIHsKICB3aWR0aDogMTAwcHg7CiAgaGVpZ2h0OiAxMDBweDsKICBvYmplY3QtZml0OiBjb3ZlcjsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgLyog7J2066+47KeA7LKY65+8IOuqqOyEnOumrOulvCDrkaXquIDqsowgKi8KfQoKLnBob3RvIGJ1dHRvbiB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICByaWdodDogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMCwgMCwgMC43KTsKICBjb2xvcjogd2hpdGU7CiAgYm9yZGVyOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLyog7IiY7KCVIOuyhO2KvCAqLwouYnV0dG9ucyBidXR0b24gewogIGJhY2tncm91bmQtY29sb3I6ICMwMDMzOTk7CiAgY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgd2lkdGg6IDEwMCU7CiAgbWF4LXdpZHRoOiAxMDAlOwogIC8qIOuyhO2KvOydmCDrhIjruYTrpbwg7J2066+47KeA7JeQIOunnuy2pCAqLwogIG1hcmdpbi10b3A6IDIwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgouaG91cnMgc2VsZWN0e3dpZHRoOjEwMHB4O30K"},{"version":3,"sources":["ManagerHomepage.vue"],"names":[],"mappings":";AAofile":"ManagerHomepage.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">홈페이지 관리</h2>\n          </div>\n          <!-- 룸 리스트 부분 -->\n          <div class=\"room-list-box\">\n            <div class=\"form-container\">\n              <!-- 매장 지역 선택 -->\n              <div class=\"form-group\">\n                <label for=\"region\">매장지역</label>\n                <select id=\"region\" v-model=\"storeData.region\">\n                  <option value=\"서울\">서울</option>\n                  <option value=\"경기도\">경기도</option>\n                  <option value=\"인천\">인천</option>\n                </select>\n              </div>\n\n              <!-- 매장명칭 -->\n              <div class=\"form-group\">\n                <label for=\"storeName\">매장명칭</label>\n                <input type=\"text\" id=\"storeName\" v-model=\"storeData.storeName\" />\n              </div>\n\n              <!-- 매장주소 -->\n              <div class=\"form-group\">\n                <label for=\"storeAddress\">매장주소</label>\n                <input type=\"text\" id=\"storeAddress\" v-model=\"storeData.address\" />\n              </div>\n\n              <!-- 전화번호 -->\n              <div class=\"form-group\">\n                <label for=\"phone\">전화번호</label>\n                <input type=\"text\" id=\"phone\" v-model=\"storeData.phone\" maxlength=\"11\" />\n              </div>\n\n              <!-- 무료주차 -->\n              <div class=\"form-group\">\n                <label for=\"parking\">무료주차</label>\n                <input type=\"text\" id=\"parking\" v-model=\"storeData.parking\" placeholder=\"무료 주차 여부 입력\" />\n              </div>\n\n              <!-- 운영시간 -->\n              <div class=\"form-group operating-hours\">\n  <label>운영시간</label>\n  <div class=\"hours\">\n    <span>평일</span>\n    <select v-model=\"storeData.weekdayStart\">\n        <option v-for=\"time in timeOptions\" :key=\"time\" :value=\"time\">{{ time }}</option>\n      </select>\n    ~\n    <select v-model=\"storeData.weekdayEnd\">\n        <option v-for=\"time in timeOptions\" :key=\"time\" :value=\"time\">{{ time }}</option>\n      </select>\n  </div>\n  <div class=\"hours\">\n    <span>주말(휴일)</span>\n    <select v-model=\"storeData.weekendStart\">\n        <option v-for=\"time in timeOptions\" :key=\"time\" :value=\"time\">{{ time }}</option>\n      </select>\n    ~\n    <select v-model=\"storeData.weekendEnd\">\n        <option v-for=\"time in timeOptions\" :key=\"time\" :value=\"time\">{{ time }}</option>\n      </select>\n  </div>\n</div>\n\n              <!-- 매장규모 -->\n              <div class=\"form-group\">\n                <label for=\"scale\">매장규모</label>\n                <input type=\"text\" v-model=\"storeData.roomea\" placeholder=\"게임 룸 갯수를 선택해주세요.\" />\n              </div>\n\n              <!-- 매장사진 -->\n              <div class=\"form-group\">\n                <label for=\"photos\">매장사진</label>\n                <input type=\"file\" id=\"photos\" multiple @change=\"onFileChange\" />\n              </div>\n\n              <!-- 매장안내 -->\n              <div class=\"form-group\">\n                <label for=\"description\">매장안내</label>\n                <textarea id=\"description\" v-model=\"storeData.description\" placeholder=\"매장 특징을 입력하세요\"></textarea>\n              </div>\n\n              <!-- 수정 버튼 -->\n              <div class=\"form-group buttons\">\n                <button @click=\"submitForm\">매장등록</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport { managerStore } from '@/store/managerStore';  // API 호출\nimport axios from 'axios';\n\nexport default {\n  name: \"ManagerHomepage\",\n  components: {\n    ManagerHeader,\n    ManagerNavbar,\n  },\n  data() {\n    return {\n      storeData: {\n        region: \"경기도\",\n        storeName: \"\",\n        address: \"\",\n        phone: \"\",\n        parking: \"\",\n        weekdayStart: \"10:00\",\n        weekdayEnd: \"22:00\",\n        weekendStart: \"10:00\",\n        weekendEnd: \"22:00\",\n      // formattedWeekdayStart: \"10:00 AM\",\n      // formattedWeekdayEnd: \"10:00 PM\",\n      // formattedWeekendStart: \"10:00 AM\",\n      // formattedWeekendEnd: \"10:00 PM\",\n        roomea: \"\",\n        photos: [], // 업로드된 이미지의 URL을 저장할 배열\n        description: \"\",\n        coordinates : ''\n      },\n      timeOptions: this.generateTimeOptions(),\n      lat : null,\n      lng : null,\n      photoUrl : '',\n      file: null,\n    };\n  },\n  watch: {\n    \"storeData.address\"(newAddress) {\n      // address가 변경될 때마다 getCoordinates 호출\n      if (newAddress) {\n        this.getCoordinates(newAddress);\n      }\n    }\n  },\n  mounted(){\n    // this.setRoominsert(1)\n    // this.submitForm();\n    // this.getCoordinates(\"서울특별시 강서구 공항대로 242\")\n  },\n  methods: {\n    generateTimeOptions() {\n      const times = [];\n      for (let hour = 0; hour < 24; hour++) {\n        for (let minute = 0; minute < 60; minute += 30) {\n          const formattedHour = hour.toString().padStart(2, \"0\");\n          const formattedMinute = minute.toString().padStart(2, \"0\");\n          times.push(`${formattedHour}:${formattedMinute}`);\n        }\n      }\n      return times;\n    },\n  //   setTime(field, time) {\n  //   const [hours, minutes] = time.split(\":\").map(Number);\n  //   let adjustedHours = hours;\n    \n  //   if (hours >= 1 && hours < 12) {\n  //     // Assume AM for hours between 1 and 11\n  //     adjustedHours = hours;\n  //   } else if (hours >= 12 && hours <= 23) {\n  //     // Convert PM hours to 24-hour format (afternoon/evening)\n  //     adjustedHours = hours === 12 ? 12 : hours + 12;\n  //   }\n    \n  //   const formattedTime = `${adjustedHours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  //   this.storeData[field] = formattedTime; // Save in 24-hour format\n  // },\n    async postFile(name,size) {\n    console.log(\"통신 시이작!!!\")\n    const params  = {\n        \"fileName\": name,\n        \"fileSize\": size\n      }\n    // const roomDt = await managerStore.postTask(`v1/files/upload`,params);\n     \n    console.log(\"this.roomDt : : : : : : \" , JSON.stringify(roomDt))\n  },\n    // onFileChange(event) {\n    //   const files = event.target.files;\n    //   // this.postFile();\n    //   for (let i = 0; i < files.length; i++) {\n    //     const file = files[i];\n    \n    //     // // 파일명과 파일 크기 출력\n    //     // console.log(`File Name: ${file.name}`);\n    //     // console.log(`File Size: ${file.size} bytes`);\n    //     // this.postFile(file.name,file.size)\n    //     const reader = new FileReader();\n    //     reader.onload = (e) => {\n    //       this.storeData.photos.push({ url: e.target.result });\n    //     };\n    //     reader.readAsDataURL(files[i]);\n    //   }\n    // },\n    removePhoto(index) {\n      this.storeData.photos.splice(index, 1);\n    },\n    async setRoominsert(i){\n      console.log(\" I I I I I \" , i)\n      const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n      // console.log(\" I I I I I \" , JSON.stringify(managerInfo))\n\n        const params = {\n              \"name\": \"룸\" + i,\n              \"status\": \"waiting\",\n              \"capacity\": 5,\n              \"gameType\": \"golf\",\n              \"startTime\": \"00:00\",\n              \"duration\": \"2h\",\n              \"equipment\": \"MACM14050033\",\n              \"course\": \"벨라스톤\",\n              \"hole\": \"18\",\n              \"managerid\": parseInt(managerInfo.id),\n              \"room_id\": i\n            }\n      // console.log(\" I I I I I \" , JSON.stringify(params))\n\n        try {\n                const response = await managerStore.postTask(\"rooms\", params);\n                if (!response || response === undefined) {\n                  console.log(\"응답 데이터가 없습니다.\");\n                } else {\n                  console.log(\"매장이 등록 되었습니다.\");\n                  // window.location.reload();\n                }\n              } catch (error) {\n                console.error(\"API 호출 오류:\", error);\n                alert(\"등록에 실패했습니다. 서버 오류를 확인하세요.\");\n              }\n    },\n    async submitForm() {\n      if (this.storeData.phone.length ===11){\n\n      const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n      const params = {\n        name: this.storeData.storeName,\n        onDisplay: true,\n        managerid : parseInt(managerInfo.id),\n        address: this.storeData.address,\n        telNumber: this.storeData.phone,\n        facility: \"주차 가능, 와이파이 지원\",\n        // facility: this.storeData.parking,\n        mapImage: this.photoUrl,\n        description: this.storeData.description,\n        region: this.storeData.region,\n        freeParking: this.storeData.parking,\n        weekdayHours: `${this.storeData.weekdayStart} ~ ${this.storeData.weekdayEnd}`,\n       weekendHours: `${this.storeData.weekendStart} ~ ${this.storeData.weekendEnd}`,\n        storeScale: this.storeData.roomea,\n        // representativeImage: this.uploadedImageUrls[0],\n        representativeImage: \"https://example.com/representative.jpg\",\n         serial: \"BRANCH1234\",\n        payhereToken: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n        latitude : this.lat,\n        longitude : this.lng\n          // \"name\": \"레저로 부산 강북점12367\",\n          // \"onDisplay\": true,\n          // \"address\": \"부산 강서구 강서로 12512345678\",\n          // \"telNumber\": \"05112444568\",\n          // \"facility\": \"주차 불가능, 와이파이 지원\",\n          // \"mapImage\": \"https://example.com/map.jpg\",\n          // \"description\": \"최신 시설과 친절한 직원이 있는 매장입니다.\",\n          // \"region\": \"서울\",\n          // \"freeParking\": \"1시간 유료 주차\",\n          // \"weekdayHours\": \"10:00 ~ 22:00\",\n          // \"weekendHours\": \"10:00 ~ 22:00\",\n          // \"storeScale\": \"12\",\n          // \"representativeImage\": \"https://example.com/representative.jpg\",\n          // \"serial\": \"BRANCH1234\",\n          // \"payhereToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\"\n      };\n\n      // console.log(\"전송할 데이터:\", JSON.stringify(params, null, 2));\n      try {\n        const response = await managerStore.postTask(\"v1/branch\", params);\n        if (!response || response === undefined) {\n          alert(\"응답 데이터가 없습니다.\");\n        } else {\n          console.log(\"this.storeData.roomea : : :\" , this.storeData.roomea)\n          for(var i=1;  i <= parseInt(this.storeData.roomea); i++){\n          console.log(\"this.storeData.roomea : : :\" , i)\n\n            this.setRoominsert(i)\n          }\n          \n          alert(\"매장이 등록 되었습니다.\");\n          window.location.reload();\n        }\n      } catch (error) {\n        console.error(\"API 호출 오류:\", error);\n        alert(\"등록에 실패했습니다. 서버 오류를 확인하세요.\");\n      }\n    }\n    else{\n      alert(\"휴대폰자리를 11자리 입력해주세요\")\n    }\n    },\n\n\n    // lay,lnt 값 구하기 ( 위도 , 경도)\n    async getCoordinates(address) {\n      try {\n        const apikey = \"AIzaSyAGSclEAPdi11Ngo7XEwQb9q7da5PyObqQ\"\n        const response = await fetch(\n          `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\n            address\n          )}&key=${apikey}`\n        );\n        \n\n        const data = await response.json();\n        // console.log(\"좌표를 찾을 수 없습니다1111.\" + JSON.stringify(data));\n\n        if (data.results && data.results.length > 0) {\n          const coordinates = data.results[0].geometry.location;\n          this.lat = coordinates.lat;\n          this.lng = coordinates.lng;\n         console.log(\"좌표를 찾을 수 없습니다3333.\" + JSON.stringify(coordinates));\n        //  console.log(\"좌표를 찾을 수 없습니다3333.\" + this.lat);\n\n        } else {\n          console.error(\"좌표를 찾을 수 없습니다3333.\");\n        }\n      } catch (error) {\n        console.error(\"Geocoding API 요청 중 오류가 발생했습니다.\", error);\n      }\n    },\n\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      //const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await managerStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response[0].presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.photoUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n.wrapper {\n  flex-grow: 1;\n  /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  gap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 방 리스트 박스 */\n.room-list-box {\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 30px;\n  background-color: #fff;\n  padding: 15px 30px;\n}\n\n/* 폼 컨테이너 */\n.form-container {\n  background-color: #fff;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border-radius: 8px;\n  /* 모서리 둥글게 */\n}\n\n/* 폼 그룹 */\n.form-group {\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 15px;\n}\n\nlabel {\n  width: 65px;\n}\n\ninput,\nselect,\ntextarea {\n  padding: 10px;\n  border: 1px solid #ccc;\n  width: 100%;\n  padding: 18px 15px;\n}\n\n/* 텍스트 영역 */\ntextarea {\n  resize: none;\n  height: 120px;\n  /* 이미지에서 보이는 높이로 반영 */\n}\n\n.operating-hours .hours {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.hours span {\n  display: inline-block;\n}\n\n.photos-preview {\n  display: flex;\n  gap: 10px;\n}\n\n.photo {\n  position: relative;\n}\n\n.photo img {\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 5px;\n  /* 이미지처럼 모서리를 둥글게 */\n}\n\n.photo button {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: rgba(255, 0, 0, 0.7);\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\n/* 수정 버튼 */\n.buttons button {\n  background-color: #003399;\n  color: white;\n  padding: 15px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 100%;\n  /* 버튼의 너비를 이미지에 맞춤 */\n  margin-top: 20px;\n  text-align: center;\n}\n\n.hours select{width:100px;}\n</style>\n"]}]}