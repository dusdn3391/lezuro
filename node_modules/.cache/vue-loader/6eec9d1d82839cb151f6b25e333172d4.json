{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/BoardDetail.vue?vue&type=style&index=0&id=5fdd88ec&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/BoardDetail.vue","mtime":1732598197057},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb21tdW5pdHlkZXRhaWxzLTIgewogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsYWNrd2hpdGV3aGl0ZSk7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKfQoKLnRpdGxlIHsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nLXRvcDogMTA0cHg7CiAgcGFkZGluZy1ib3R0b206IDUwcHg7Cn0KCi5ib2FyZC1kZXRhaWwgewogIHdpZHRoOiAxMDAlOwp9CgovKiAyNC4xMS4yNiDsiJjsoJUgLSBjbGFzcyDsiJjsoJUg67CPIOygleugrCDsiJjsoJUgKi8KLmJvYXJkLWRldGFpbC10b3AgewogIC8qIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyAqLwogIC8qIGFsaWduLXNlbGY6IHN0cmV0Y2g7ICovCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMyMjI7CiAgZGlzcGxheTogZmxleDsKICAvKiBmbGV4OiAwIDAgYXV0bzsgKi8KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGdhcDogMTZweDsKICBwYWRkaW5nOiA0MHB4IDBweDsKICAvKiBwb3NpdGlvbjogcmVsYXRpdmU7ICovCiAgd2lkdGg6IDEwMCU7Cn0KCi8qIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgCAqLwoubm90aWNlLWluZm8gewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi8qIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgCAqLwoubm90aWNlLWluZm8tZmlyc3QgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDEwcHg7Cn0KCi8qIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgCAqLwoubm90aWNlLWluZm8tYnRuIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgZ2FwOiAxMHB4Owp9CgouZnJhbWUtNzgzNi02IHsKICBwYWRkaW5nOiA0MHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7Cn0KCi5mcmFtZS03ODM2LTYgaW1nIHsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAzMHB4IDBweDsKfQoKLmxvcmVtLWlwc3VtLWRvbG9yLXNpLTcsCi5sb3JlbS1pcHN1bS1kb2xvci1zaS04IHsKICB3aWR0aDogMTAwJTsKfQoKLyogMjQuMTEuMjYg7IiY7KCVIC0g7LaU6rCAICovCi50by1nby1saXN0IHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1zZWxmOiBjZW50ZXI7CiAgd2lkdGg6IDIwMHB4OwogIGhlaWdodDogNTBweDsKICBtYXJnaW4tdG9wOiA1MHB4OwogIGJvcmRlcjogbm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnJlcGx5LWNvbnRlbnQgewogIHdpZHRoOiAxMDAlOwogIG1hcmdpbjogMCBhdXRvOwogIHBhZGRpbmc6IDIwcHggMHB4Owp9CgoucmVwbHktd3JpdGUgewogIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7CiAgcGFkZGluZzogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoucmVwbHktdGV4dGFyZWEgewogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7CiAgYm9yZGVyOiBub25lOwogIGhlaWdodDogNDlweDsKICBvdXRsaW5lOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtc2l6ZTogMTZweDsKICByZXNpemU6IG5vbmU7Cn0KCi5yZXBseS1idXR0b25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgZ2FwOiAxMHB4OwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi5jYW5jZWwtYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OwogIGJvcmRlcjogbm9uZTsKICB3aWR0aDogOTBweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGNvbG9yOiB3aGl0ZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5zdWJtaXQtYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg0MTk5OwogIGJvcmRlcjogbm9uZTsKICB3aWR0aDogOTBweDsKICBoZWlnaHQ6IDQ4cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGNvbG9yOiB3aGl0ZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5yZXBseS12aWV3IHsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsKfQoKLnJlcGx5LWNvdW50IHsKICBmb250LXdlaWdodDogYm9sZDsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9CgouZGl2aWRlciB7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGRkZGQ7CiAgbWFyZ2luOiAxMHB4IDA7Cn0KCi5jb21tZW50IHsKICBwYWRkaW5nOiAxNXB4IDA7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWVlZWU7Cn0KCi5jb21tZW50LWhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogMTBweDsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5jb21tZW50LWF2YXRhciB7CiAgd2lkdGg6IDMycHg7CiAgaGVpZ2h0OiAzMnB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLmNvbW1lbnQtYXV0aG9yIHsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmNvbW1lbnQtZGF0ZSB7CiAgY29sb3I6ICM4ODg4ODg7Cn0KCi5jb21tZW50LWJvZHkgewogIHBhZGRpbmc6IDIwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsKICBtYXJnaW4tdG9wOiAzMHB4Owp9CgouY29tbWVudC1hY3Rpb25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGdhcDogMTBweDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7CiAgcGFkZGluZzogMjBweDsKfQoKLyogMjQuMTEuMjYg7IiY7KCVICovCi5jb21tZW50LWVkaXQtYnV0dG9uLAouZGVsZXRlLWJ1dHRvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzk5OTsKICBib3JkZXI6IG5vbmU7CiAgd2lkdGg6IDkwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjb2xvcjogd2hpdGU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgovKiAyNC4xMS4yNiDsiJjsoJUgKi8KLmRlbGV0ZS1idXR0b24gewogIGJhY2tncm91bmQtY29sb3I6ICNkMzBmMWE7Cn0KCi5jb21tZW50LWJvZHkgdGV4dGFyZWEgewogIGJvcmRlcjogbm9uZTsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OwogIGhlaWdodDogMTAwJTsKfQo="},{"version":3,"sources":["BoardDetail.vue"],"names":[],"mappings":";AA6UA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"BoardDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"communitydetails-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"frame-7913\">\n\n        <div class=\"title pretendard-bold-log-cabin-38px\">자유게시판</div>\n        <div class=\"board-detail\">\n          <!-- 24.11.26 수정 - class 수정-->\n          <div class=\"board-detail-top\">\n            <!-- 24.11.26 수정 - class 수정-->\n            <div class=\"board-detail-title valign-text-middle pretendard-bold-log-cabin-30px\">\n              {{ title }}\n            </div>\n            <!-- 24.11.26 수정 - class 수정-->\n            <div class=\"notice-info pretendard-regular-normal-mountain-mist-20px\">\n              <!-- 24.11.26 수정 - 추가 -->\n              <div class=\"notice-info-first\">\n                <div class=\"frame-7835-item-1 valign-text-middle\">\n                  {{ updatedAt }}\n                </div>\n                <!-- 24.11.26 수정 -->\n                <span class=\"slash\"> l </span>\n                <div class=\"frame-7835-item-1 separ valign-text-middle\">\n                  작성자 : {{ author }}\n                </div>\n                <!-- 24.11.26 수정 -->\n                <span class=\"slash\"> l </span>\n                <div class=\"frame-7835-item-1 valign-text-middle\">\n                  조회수 : {{ views }}\n                </div>\n              </div>\n              <!-- 24.11.26 수정 - 추가 -->\n              <!-- <div class=\"notice-info-btn\" v-if=\"loginInfo.id === authorId\"> -->\n              <div class=\"notice-info-btn\" v-if=\"loginInfo.name === author\">\n                <button class=\"comment-edit-button pretendard-medium-white-18px\" @click=\"togoEditBoard\">수정</button>\n                <button class=\"delete-button pretendard-medium-white-18px\" @click=\"deleteBoard\">삭제</button>\n              </div>\n            </div>\n          </div>\n          <div class=\"frame-7836-6 pretendard-light-granite-gray-18px\">\n            <p class=\"lorem-ipsum-dolor-si-7 valign-text-middle\">\n              {{ content }}\n            </p>\n            <div v-if=\"imageUrl\" class=\"image-container\">\n              <img :src=\"imageUrl\" alt=\"첨부된 이미지\" class=\"uploaded-image\" />\n            </div>\n          </div>\n        </div>\n\n        <button class=\"to-go-list valign-text-middle pretendard-medium-white-18px\" @click=\"toGoBoardList\">\n          목록으로\n        </button>\n        <div class=\"reply-content\">\n          <div class=\"reply-write\">\n            <textarea placeholder=\"내용을 입력해 주세요\" class=\"reply-textarea\" v-model=\"contents\"></textarea>\n            <div class=\"reply-buttons\">\n              <button class=\"cancel-button pretendard-regular-normal-white-18px\">\n                취소\n              </button>\n              <button class=\"submit-button pretendard-regular-normal-white-18px\" @click=\"postComments\">\n                입력\n              </button>\n            </div>\n          </div>\n          <div class=\"reply-view\">\n            <div class=\"reply-count\">댓글 {{ comments.length }}</div>\n            <hr class=\"divider\" />\n            <!-- 24.11.22 수정 - 추가 -->\n            <!-- 댓글이 있을 경우 -->\n            <div v-if=\"comments.length > 0\">\n              <div class=\"comment\" v-for=\"comment in comments\" :key=\"comment.id\">\n                <div class=\"comment-header\">\n                  <!-- <img class=\"comment-avatar\" :src=\"comment.avatar\" alt=\"User avatar\" /> -->\n                  <!-- 24.11.22 수정 -->\n                  <img class=\"comment-avatar\" :src=\"comment.avatar || (comment.profileImage || basicProfileImg)\"\n                    alt=\"User avatar\" />\n                  <span class=\"comment-author\">{{ comment.comment_author }}</span>\n                  <span class=\"comment-date\">{{ comment.comment_createdAt ? comment.comment_createdAt.split(\"T\")[0] :\n                    '날짜 없음' }}</span>\n                </div>\n                <div class=\"comment-body\">\n                  <div v-if=\"comment.isEditing\">\n                    <textarea type=\"text\" v-model=\"comment.editedContent\" class=\"comment-input\"\n                      placeholder=\"댓글을 수정하세요\" />\n                  </div>\n                  <div v-else>\n                    {{ comment.comment_content || '내용 없음' }}\n                  </div>\n                </div>\n\n                <div class=\"comment-actions\" v-if=\"comment.comment_userId === loginInfo.id\">\n\n                  <button class=\"comment-edit-button pretendard-regular-normal-white-18px\"\n                    @click=\"toggleEditComment(comment)\">\n                    {{ comment.isEditing ? \"완료\" : \"수정\" }}\n                  </button>\n                  <button class=\"delete-button pretendard-regular-normal-white-18px\"\n                    @click=\"deleteComments(comment.comment_id)\">\n                    삭제\n                  </button>\n                </div>\n              </div>\n            </div>\n            <!-- 24.11.22 수정 - 추가 -->\n            <!-- 댓글이 없을 경우 -->\n            <div v-else>\n              <!-- 24.11.26 수정 - font 추가 -->\n              <p class=\"pretendard-regular-normal-granite-gray-18px\">등록된 댓글이 없습니다.</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport Header from \"./Header.vue\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"BoardDetail\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      title: \"\",\n      updatedAt: \"\",\n      author: \"\",\n      views: \"\",\n      content: \"\",\n      contents: \"\",\n      imageUrl: \"\",\n      loginInfo: {},\n      comments: [],\n      isEditing: false,\n      // 24.11.22 수정\n      basicProfileImg: 'https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-736@2x.png',\n      authorId: null, // 24.11.26 수정 - 추가:게시글 작성자의 ID\n    };\n  },\n  async mounted() {\n    // 라우트에서 전달된 상태 데이터를 가져옵니다.\n    const id = this.$route.query.id\n    console.log(\"Received ID:\", id);\n    if (id) {\n      this.id = id;\n      await this.fetchBoardDetail();\n    } else {\n      console.error(\"ID를 찾을 수 없습니다.\");\n      this.toGoBoardList();\n    }\n    // await this.getComments();\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    this.loginInfo = loginInfo || {};\n    console.log(\"초기화된 this.loginInfo:\", this.loginInfo);\n  },\n  methods: {\n    // 24.11.26 수정 - 추가\n    togoEditBoard() {\n      this.$router.push({\n        path: \"/board-write\",\n        query: {\n          id: this.id,\n        },\n      });\n    },\n    // 24.11.26 수정 - 추가\n    async deleteBoard() {\n      const response = await taskStore.deleteTask(`posts/${this.id}`);\n      alert('게시글이 삭제되었습니다.');\n      this.$router.push({ path: \"/board-list\" });\n    },\n    async fetchBoardDetail() {\n      try {\n        if (!this.id) {\n          console.error(\"게시물 ID가 없습니다.\");\n          return;\n        }\n\n        // API 호출\n        const response = await taskStore.getSelectTasks(`posts/${this.id}`);\n        console.log(\"API 응답:\", response);\n\n        // 데이터가 존재하는지 확인 후 할당\n        if (response && response[0]) {\n          // 게시물 정보 할당\n          this.title = response[0].post_title || \"제목 없음\";\n          this.author = response[0].post_author || \"작성자 없음\";\n          this.authorId = response[0].post_authorId || null; // 24.11.26 수정 - 추가:작성자의 ID 저장\n          this.content = response[0].post_content || \"내용이 없습니다.\";\n          this.updatedAt = response[0].updatedAt\n          this.views = response[0].post_views,\n            this.updatedAt = response[0].post_createdAt.split(\"T\")[0];\n          this.imageUrl = response[0].post_imageUrl\n\n\n\n\n          // 댓글 정보 할당\n          this.comments = response[0].commentList || [];\n          // console.log(\"댓글 리스트:\", this.comments);\n          this.comments = this.comments.map((comment) => ({\n            ...comment,\n            isEditing: false, // Add isEditing with a default value of false\n            // 24.11.26 수정 - 추가\n            profileImg: comment.profileImg || this.basicProfileImg, // 댓글 작성자 프로필 이미지\n          }));\n          console.log(\"Updated Comments:\", this.comments);\n          console.log('response 1', response)\n\n        } else {\n          console.error(\"응답 데이터가 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"게시물 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n    async postComments() {\n      try {\n        const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n        const author = loginInfo.name;\n        const userId = loginInfo.id;\n        // console.log('userId', userId)\n        // const userInfo = await taskStore.getSelectTasks(`http://43.202.166.221:3000/api/v1/users/${loginInfo.id}`);\n        // console.log('userInfo', userInfo)\n        const profileImg = loginInfo.profileImage; //24.11.22 수정 - 추가\n        console.log('profileImg:', profileImg);\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const createdAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n        // POST 요청으로 데이터를 서버에 전송\n        const params = {\n          // title: this.title,\n          content: this.contents,\n          author: author,\n          userId: userId,\n          category: \"자유게시판\",\n          views: 0,\n          freeBoardId: this.id,\n          afterServiceId: \"1\",\n          askId: \"1\",\n          createdAt: createdAt,\n          commentText: \"0\",\n          updatedAt: createdAt,\n          profileImage: profileImg, // 24.11.22 수정 : profileImage 추가\n        };\n        console.log(\"보내는 데이터:\", JSON.stringify(params, null, 2));\n\n        const response = await taskStore.postTask(\"comments\", params);\n\n\n        console.log(\"등록 성공:\", response);\n        alert(\"등록이 되었습니다\");\n        await this.fetchBoardDetail();\n        this.contents = \"\"; // 입력한 댓글 초기화\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n    toggleEditComment(comment) {\n      // 수정 모드 토글\n      if (comment.isEditing) {\n        this.updateComment(comment);\n      }\n      comment.isEditing = !comment.isEditing;\n    },\n    async updateComment(comment) {\n      try {\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const createdAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n        // POST 요청으로 데이터를 서버에 전송\n        console.log(JSON.stringify(comment))\n        const params = {\n          content: comment.editedContent,\n          createdAt: createdAt,\n        };\n        console.log(\"보내는 데이터:\", JSON.stringify(params));\n\n        const response = await taskStore.updateTask(\n          `comments/${comment.comment_id}`,\n          params\n        );\n        console.log(\"댓글 수정 응답:\", response);\n        alert(\"댓글이 수정되었습니다.\");\n        await this.fetchBoardDetail();\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n    async deleteComments(commentId) {\n      console.log(\"commentId : : \", commentId)\n      try {\n        // 특정 댓글을 삭제\n        const response = await taskStore.deleteTask(`comments/${commentId}`);\n        console.log(\"댓글 삭제 응답:\", response);\n\n        // 삭제 후 댓글 목록을 갱신\n        alert(\"댓글이 삭제되었습니다.\");\n        await this.fetchBoardDetail();\n        // 24.11.26 수정 - 새로고침 삭제\n        // window.location.reload();\n      } catch (error) {\n        console.error(\"댓글 삭제 중 오류 발생:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    toGoBoardList() {\n      this.$router.push({ path: \"/board-list\" });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.communitydetails-2 {\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n}\n\n.title {\n  width: 100%;\n  padding-top: 104px;\n  padding-bottom: 50px;\n}\n\n.board-detail {\n  width: 100%;\n}\n\n/* 24.11.26 수정 - class 수정 및 정렬 수정 */\n.board-detail-top {\n  /* align-items: flex-start; */\n  /* align-self: stretch; */\n  border-top: 1px solid #222;\n  display: flex;\n  /* flex: 0 0 auto; */\n  flex-direction: column;\n  gap: 16px;\n  padding: 40px 0px;\n  /* position: relative; */\n  width: 100%;\n}\n\n/* 24.11.26 수정 - 추가 */\n.notice-info {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n/* 24.11.26 수정 - 추가 */\n.notice-info-first {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n/* 24.11.26 수정 - 추가 */\n.notice-info-btn {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.frame-7836-6 {\n  padding: 40px;\n  border: 1px solid #dddddd;\n}\n\n.frame-7836-6 img {\n  width: 100%;\n  padding: 30px 0px;\n}\n\n.lorem-ipsum-dolor-si-7,\n.lorem-ipsum-dolor-si-8 {\n  width: 100%;\n}\n\n/* 24.11.26 수정 - 추가 */\n.to-go-list {\n  display: flex;\n  align-items: center;\n  justify-self: center;\n  width: 200px;\n  height: 50px;\n  margin-top: 50px;\n  border: none;\n  background-color: #d30f1a;\n  cursor: pointer;\n}\n\n.reply-content {\n  width: 100%;\n  margin: 0 auto;\n  padding: 20px 0px;\n}\n\n.reply-write {\n  background-color: #fafafa;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.reply-textarea {\n  width: 100%;\n  background-color: #fafafa;\n  border: none;\n  height: 49px;\n  outline: none;\n  border-radius: 5px;\n  padding: 10px;\n  font-size: 16px;\n  resize: none;\n}\n\n.reply-buttons {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.cancel-button {\n  background-color: #999;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.submit-button {\n  background-color: #184199;\n  border: none;\n  width: 90px;\n  height: 48px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.reply-view {\n  padding: 20px;\n  border-radius: 5px;\n}\n\n.reply-count {\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.divider {\n  border-top: 1px solid #dddddd;\n  margin: 10px 0;\n}\n\n.comment {\n  padding: 15px 0;\n  border-bottom: 1px solid #eeeeee;\n}\n\n.comment-header {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n}\n\n.comment-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n}\n\n.comment-author {\n  font-weight: bold;\n}\n\n.comment-date {\n  color: #888888;\n}\n\n.comment-body {\n  padding: 20px;\n  background-color: #f9f9f9;\n  margin-top: 30px;\n}\n\n.comment-actions {\n  display: flex;\n  gap: 10px;\n  justify-content: flex-end;\n  width: 100%;\n  background-color: #f9f9f9;\n  padding: 20px;\n}\n\n/* 24.11.26 수정 */\n.comment-edit-button,\n.delete-button {\n  background-color: #999;\n  border: none;\n  width: 90px;\n  height: 50px;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n/* 24.11.26 수정 */\n.delete-button {\n  background-color: #d30f1a;\n}\n\n.comment-body textarea {\n  border: none;\n  width: 100%;\n  background-color: #f9f9f9;\n  height: 100%;\n}\n</style>\n<style scoped src=\"@/style/community/boarddetail.css\"></style>\n"]}]}