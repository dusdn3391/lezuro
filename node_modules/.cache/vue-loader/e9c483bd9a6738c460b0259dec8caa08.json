{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerRoomManagement.vue?vue&type=style&index=0&id=f40e39ae&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerRoomManagement.vue","mtime":1735202108016},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi8qIDI0LjEyLjIzIOyImOyglSAqLwoud3JhcHBlciB7CiAgd2lkdGg6IDEwMCU7CiAgcGFkZGluZzogMzBweDsKICAvKiBnYXA6IDIwcHg7ICovCiAgaGVpZ2h0OiAxMDB2aDsKfQoKLyog7YOA7J207YuAIOuwleyKpCAqLwoudGl0bGUtYm94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyog67CpIOumrOyKpO2KuCDrsJXsiqQgKi8KLnJvb20tbGlzdC1ib3ggewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGdhcDogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7Cn0KCi8qIOqwnOuzhCDrsKkg67CV7IqkICovCi5yb29tLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAyMHB4OwogIHdpZHRoOiAzNDJweDsKICBoZWlnaHQ6IDQwOHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9Cgoucm9vbV9uYW1lIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBnYXA6IDZweDsKICBsaW5lLWhlaWdodDogOTAlOwogIG1hcmdpbi1ib3R0b206IDI2cHg7Cn0KCi5zdGF0dXMtaW5kaWNhdG9yIHsKICB3aWR0aDogMTAwJTsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwogIGRpc3BsYXk6IGZsZXg7CiAgZ2FwOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5lcXVpcG1lbnRudW0gewogIHBhZGRpbmc6IDIwcHggMHB4OwogIGxpbmUtaGVpZ2h0OiA4MCU7Cn0KCi5zdGF0dXMgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDVweDsKfQoKLyog7IOB7YOcIOygkCDsiqTtg4DsnbwgKi8KLnN0YXR1cy1kb3QgewogIHdpZHRoOiAxMHB4OwogIGhlaWdodDogMTBweDsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgbWFyZ2luLXRvcDogNHB4Owp9CgouZG90IHsKICB3aWR0aDogMTBweDsKICBoZWlnaHQ6IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9CgouYmx1ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzE4NDE5OTsKfQoKLmdyZWVuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTRiNjU1Owp9CgoucmVkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwp9Cgouc3RhdHVzLWRvdC5hdmFpbGFibGUgewogIGJhY2tncm91bmQtY29sb3I6ICMxNGI2NTU7Cn0KCi5zdGF0dXMtZG90LndhaXRpbmcgewogIGJhY2tncm91bmQtY29sb3I6ICNkMzBmMWE7Cn0KCi5zdGF0dXMtZG90LnVwY29taW5nIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg0MTk5Owp9Cgoucm9vbS1ib3ggdGFibGUgewogIHdpZHRoOiAxMDAlOwogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Cn0KCi5yb29tLWJveCB0YWJsZSB0ZCB7CiAgcGFkZGluZzogMTVweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgbGluZS1oZWlnaHQ6IDgwJTsKfQoKLnJvb20tYm94IHRhYmxlIHRkOmZpcnN0LWNoaWxkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwogIC8qIOyZvOyqvSDshYAg67Cw6rK97IOJICovCiAgd2lkdGg6IDQwJTsKfQoKLyog67KE7Yq8IOq3uOujuSAqLwouYnV0dG9uLWdyb3VwIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICB3aWR0aDogMTAwJTsKICBnYXA6IDEwcHg7Cn0KCi8qIDI0LjEyLjI2IOyImOyglSAqLwpidXR0b24gewogIGZsZXgtZ3JvdzogMTsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlcjogbm9uZTsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgLyogY29sb3I6IHdoaXRlOyAqLwogIC8qIGxpbmUtaGVpZ2h0OiA4MCU7ICovCiAgY3Vyc29yOiBwb2ludGVyOwogIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlOwp9CgovKiAyNC4xMi4yNiDsiJjsoJUgLSDstpTqsIAgKi8KLmRpc2FibGVkLWJ1dHRvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjZmNjsKICBib3JkZXI6IDFweCBzb2xpZDsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOwogIG9wYWNpdHk6IDAuNTsKICBjb2xvcjogIzIyMjsKfQoKLyogMjQuMTIuMjYg7IiY7KCVIC0g7LaU6rCAICovCi5hY3RpdmUtYnV0dG9uIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOwogIGNvbG9yOiB3aGl0ZTsKfQoKLyoKYnV0dG9uOm50aC1jaGlsZCgyKSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsKICBjb2xvcjogIzMzMzsKfQoKYnV0dG9uOm50aC1jaGlsZCgyKTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDsKfQoKLyog66eI7KeA66eJIOuyhO2KvOydmCDsg4nsg4Eg67OA6rK9ICovCi8qIGJ1dHRvbjpsYXN0LWNoaWxkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwogIGNvbG9yOiAjMzMzOwp9CgpidXR0b246bGFzdC1jaGlsZDpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDsKfSAqLwo="},{"version":3,"sources":["ManagerRoomManagement.vue"],"names":[],"mappings":";AA4RA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ManagerRoomManagement.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n  <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">룸 관리</h2>\n          </div>\n\n          <!-- 24.11.11 전반적인 font style 수정 -->\n          <!-- 룸 리스트 부분 -->\n          <div class=\"room-list-box\">\n            <div class=\"status-indicator\">\n              <!-- 24.12.26 수정 - 삭제 -->\n              <!-- <div class=\"status\">\n                <div class=\"dot blue\"></div>\n                <span class=\"pretendard-regular-black-18px\">예약</span>\n              </div> -->\n              <div class=\"status\">\n                <div class=\"dot green\"></div>\n                <span class=\"pretendard-regular-black-18px\">이용중</span>\n              </div>\n              <div class=\"status\">\n                <div class=\"dot red\"></div>\n                <span class=\"pretendard-regular-black-18px\">대기중</span>\n              </div>\n            </div>\n            <div v-for=\"room in rooms\" :key=\"room.id\" class=\"room-box\">\n              <div class=\"room_name\">\n                <!-- <div :class=\"['status-dot', room.statusClass]\"></div> -->\n                <!-- 24.12.26 수정 -->\n                <div\n                  :class=\"['status-dot', room.status === 'waiting' ? 'red' : room.status === 'available' ? 'green' : '']\">\n                </div>\n                <div class=\"pretendard-bold-normal-black-28px\">\n                  {{ room.name }}\n                </div>\n              </div>\n              <table>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    게임종류\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">일반모드</td>\n                </tr>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    현재홀\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">\n                    {{ room.hole }}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    인원\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">\n                    {{ room.capacity }}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    코스\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">\n                    {{ room.course }}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    시작시간\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">\n                    {{ room.startTime }}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"pretendard-regular-normal-granite-gray-14px\">\n                    진행시간\n                  </td>\n                  <td class=\"pretendard-regular-normal-log-cabin-14px\">\n                    {{ room.duration }}\n                  </td>\n                </tr>\n              </table>\n              <div class=\"equipmentnum pretendard-regular-normal-granite-gray-14px\">\n                <span> 장비번호</span>\n                {{ room.equipment }}\n              </div>\n              <!-- 24.12.26 수정 - v-for 추가 -->\n              <div class=\"button-group\">\n                <!-- 24.12.26 수정 - v-if 추가, active, disable 추가 -->\n                <button class=\"pretendard-regular-normal-white-14px\"\n                  :class=\"{ 'disabled-button': room.status === 'waiting', 'active-button': room.status === 'available' }\"\n                  :disabled=\"room.status === 'waiting'\" @click=\"() => { selectRoom(room); openModal(); }\">게임종료</button>\n                <!-- 24.12.26 수정 - v-if 추가 -->\n                <button class=\"pretendard-regular-normal-granite-gray-14px\"\n                  :class=\"{ 'disabled-button': room.status === 'available', 'active-button': room.status === 'waiting' }\"\n                  :disabled=\"room.status === 'available'\"\n                  @click=\"() => { selectRoom(room); restartOpenModal(); }\">게임시작</button>\n                <!-- <button class=\"pretendard-regular-normal-granite-gray-14px\"\n                  v-if=\"room.status === 'available' || room.statusClass === 'upcoming'\" @click=\"moveOpenModal\">룸\n                  이동</button> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ManagerGameEndModal v-if=\"isModalVisible\" @close=\"closeModal\" @confirm=\"confirm\" />\n      <ManagerGameRestartModal v-if=\"isRModalVisible\" @Rclose=\"RcloseModal\" @confirmRestart=\"confirmRestart\" />\n      <ManagerRoomMoveModal v-if=\"isMoveModalVisible\" @moveClose=\"closeMoveModal\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport ManagerGameEndModal from \"./ManagerGameEndModal.vue\";\nimport ManagerGameRestartModal from \"./ManagerGameRestartModal.vue\";\nimport ManagerRoomMoveModal from \"./ManagerRoomMoveModal.vue\";\nimport { managerStore } from '@/store/managerStore';  // API 호출\nimport axios from 'axios'; // 24.12.26 수정 - 추가 \n\nexport default {\n  name: \"ManagerRoomManagement\",\n  components: {\n    ManagerHeader,\n    ManagerNavbar,\n    ManagerGameEndModal,\n    ManagerGameRestartModal,\n    ManagerRoomMoveModal\n  },\n  data() {\n    return {\n      roomStatus: null, // 24.12.26 수정 - 추가 : 룸 상태 (대기중, 이용중 등)\n      isModalVisible: false, // 모달 상태\n      isRModalVisible: false,\n      isMoveModalVisible: false,\n      rooms: [],\n      selectedRoom: null, // 24.12.26 수정 - 추가 : 선택된 룸\n    };\n  },\n  mounted() {\n    this.getRoomDt();\n    // 24.12.26 수정 - 추가\n    const roomId = this.selectedRoom.id; // 룸 ID 가져오기\n    this.getRoomStatus(roomId); // 룸 상태 가져오기\n  },\n  methods: {\n    // 24.12.26 수정 - 추가\n    selectRoom(room) {\n      this.selectedRoom = room; // 선택된 룸 저장\n    },\n    async openModal() {\n      // this.isModalVisible = true;\n      // 24.12.26 수정 - 추가\n      if (!this.selectedRoom) {\n        console.error(\"선택된 룸이 없습니다.\");\n        return;\n      }\n\n      const roomId = this.selectedRoom.id;// 선택된 룸의 ID 가져오기\n      try {\n        await this.updateRoomStatus(roomId, \"waiting\"); // 상태를 업데이트\n        this.isModalVisible = true; // 모달 표시\n      } catch (error) {\n        console.error(\"룸 상태를 업데이트하는 데 실패했습니다.\", error);\n      }\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    confirm() {\n      alert(\"게임이 종료되었습니다.\");\n      this.closeModal();\n    },\n    async restartOpenModal() {\n      // this.isRModalVisible = true;\n\n      // 24.12.26 수정 - 추가\n      if (!this.selectedRoom) {\n        console.error(\"선택된 룸이 없습니다.\");\n        return;\n      }\n\n      const roomId = this.selectedRoom.id; // 선택된 룸의 ID 가져오기\n      try {\n        await this.updateRoomStatus(roomId, \"available\"); // 상태를 업데이트\n        this.isRModalVisible = true; // 모달 표시\n      } catch (error) {\n        console.error(\"룸 상태를 업데이트하는 데 실패했습니다.\", error);\n      }\n    },\n    RcloseModal() {\n      this.isRModalVisible = false;\n    },\n    confirmRestart() {\n      alert(\"재시작되었습니다.\");\n      this.RcloseModal();\n    },\n    moveOpenModal() {\n      this.isMoveModalVisible = true;\n    },\n    closeMoveModal() {\n      this.isMoveModalVisible = false;\n    },\n    async getRoomDt() {\n      const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\n      console.log(\"managerInfo.id : : ;\", managerInfo.id)\n      // await taskStore.addTask(task);\n      // console.log(\"API 통신 시작\")\n      // 룸 정보 가져오는 구문 (GET)\n      this.rooms = await managerStore.getTask(`rooms/manager/${managerInfo.id}`);\n\n      // 24.12.26 수정 - 추가 : room_id를 기준으로 오름차순 정렬\n      this.rooms.sort((a, b) => a.room_id - b.room_id);\n      console.log(\"this.roomDt : : : : : : \", this.rooms)\n\n      // localStorage.setItem('roomDt', JSON.stringify(this.roomDt));\n\n    },\n    // 24.12.26 수정 - 추가\n    async updateRoomStatus(roomId, newStatus) {\n      console.log('newStatus', newStatus)\n      console.log('roomId', roomId)\n      try {\n        const token = localStorage.getItem(\"managerToken\");\n        if (!token) {\n          alert(\"로그인이 필요합니다.\");\n          return;\n        }\n\n        const roomResponse = await axios.get(`http://13.124.62.68:3000/api/rooms/${roomId}`, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n        console.log('현재 룸 정보:', roomResponse.data);\n\n        // 2. 필요 시 데이터 확인 또는 검증\n        if (!roomResponse.data || roomResponse.data.status === newStatus) {\n          console.warn('이미 해당 상태로 설정되어 있습니다.');\n          return; // 업데이트 불필요\n        }\n\n        // 3. PATCH 요청으로 상태 업데이트\n        // PATCH 요청 데이터 구성\n        const requestData = {\n          status: newStatus,\n          capacity: roomResponse.data.capacity,\n          course: roomResponse.data.course,\n          duration: roomResponse.data.duration,\n          equipment: roomResponse.data.equipment,\n          gameType: roomResponse.data.gameType,\n          hole: roomResponse.data.hole,\n          startTime: roomResponse.data.startTime,\n        };\n\n        console.log('requestData', requestData)\n\n        // 상태 업데이트 API 호출\n        const response = await managerStore.updateTask(\n          `rooms/${roomId}/status`,\n          requestData,\n          { headers: { \"Content-Type\": \"application/json\" } }\n        );\n\n        console.log(\"룸 상태 업데이트 성공:\", response);\n        this.getRoomDt();\n      } catch (error) {\n        console.error(\"룸 상태를 업데이트하는 데 실패했습니다.\", error.response || error.message);\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n}\n\n/* 24.12.23 수정 */\n.wrapper {\n  width: 100%;\n  padding: 30px;\n  /* gap: 20px; */\n  height: 100vh;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 방 리스트 박스 */\n.room-list-box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  background-color: #fff;\n  padding: 30px;\n}\n\n/* 개별 방 박스 */\n.room-box {\n  background-color: #fff;\n  padding: 20px;\n  width: 342px;\n  height: 408px;\n  border: 1px solid #ddd;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 5px;\n}\n\n.room_name {\n  display: flex;\n  justify-content: space-between;\n  gap: 6px;\n  line-height: 90%;\n  margin-bottom: 26px;\n}\n\n.status-indicator {\n  width: 100%;\n  justify-content: flex-end;\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.equipmentnum {\n  padding: 20px 0px;\n  line-height: 80%;\n}\n\n.status {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n/* 상태 점 스타일 */\n.status-dot {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  margin-top: 4px;\n}\n\n.dot {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n}\n\n.blue {\n  background-color: #184199;\n}\n\n.green {\n  background-color: #14b655;\n}\n\n.red {\n  background-color: #d30f1a;\n}\n\n.status-dot.available {\n  background-color: #14b655;\n}\n\n.status-dot.waiting {\n  background-color: #d30f1a;\n}\n\n.status-dot.upcoming {\n  background-color: #184199;\n}\n\n.room-box table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.room-box table td {\n  padding: 15px;\n  border: 1px solid #ddd;\n  text-align: left;\n  line-height: 80%;\n}\n\n.room-box table td:first-child {\n  background-color: #f5f5f5;\n  /* 왼쪽 셀 배경색 */\n  width: 40%;\n}\n\n/* 버튼 그룹 */\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  gap: 10px;\n}\n\n/* 24.12.26 수정 */\nbutton {\n  flex-grow: 1;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  /* color: white; */\n  /* line-height: 80%; */\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n/* 24.12.26 수정 - 추가 */\n.disabled-button {\n  background-color: #f5f6f6;\n  border: 1px solid;\n  cursor: not-allowed;\n  opacity: 0.5;\n  color: #222;\n}\n\n/* 24.12.26 수정 - 추가 */\n.active-button {\n  background-color: #333;\n  color: white;\n}\n\n/*\nbutton:nth-child(2) {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\nbutton:nth-child(2):hover {\n  background-color: #e0e0e0;\n}\n\n/* 마지막 버튼의 색상 변경 */\n/* button:last-child {\n  background-color: #f5f5f5;\n  color: #333;\n}\n\nbutton:last-child:hover {\n  background-color: #e0e0e0;\n} */\n</style>\n"]}]}