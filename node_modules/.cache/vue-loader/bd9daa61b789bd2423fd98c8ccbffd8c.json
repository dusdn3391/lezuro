{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/EventList.vue?vue&type=style&index=0&id=1e4eff31&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/EventList.vue","mtime":1732613022634},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ldmVudHMtMiB7CiAgd2lkdGg6IDEwMCU7Cn0KCi50aXRsZV9jZW50ZXIgewogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgcGFkZGluZzogMHB4IDEzLjUlOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBkaXNwbGF5OiBmbGV4OwogIHBhZGRpbmctdG9wOiAxMDRweDsKfQoKLmV2ZW50LXJlZ2lzdGVyIHsKICB3aWR0aDogNjhweDsKICBib3JkZXItcmFkaXVzOiAzcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmc6IDEwcHg7CiAgY29sb3I6ICNmZmY7CiAgYmFja2dyb3VuZC1jb2xvcjogI0QzMEYxQTsKfQoKLmV2ZW50c193cmFwIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiAxMjBweDsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAwcHggMTMuNSU7Cn0KCi5mcmFtZS03ODIwIHsKICBwYWRkaW5nOiA0MHB4OwogIHdpZHRoOiAxMDAlOwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7Cn0KCi5ldmVudHNfdGFiIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIG1hcmdpbi10b3A6IDQwcHg7CiAgd2lkdGg6IDEwMCU7Cn0KCi50YWIgewogIGxpbmUtaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAzMy4zMzMzMyU7CiAgcGFkZGluZzogMjNweCAwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGN1cnNvcjogcG9pbnRlcjsKICBjb2xvcjogIzY2NjY2NjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2Owp9CgoKLnRhYjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKfQoKLnRhYi5hY3RpdmUgewogIHdpZHRoOiAzMy4zMzMzJTsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIG1hcmdpbi1ib3R0b206IC0ycHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ZmZjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogMjsKICBjb2xvcjogIzIyMjIyMjsKfQoKLmdyaWQtY29udGFpbmVyIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7CiAgZ3JpZC1nYXA6IDQwcHg7Cn0KCi8qIDI0LjExLjIyIOyImOyglSAtIOy2lOqwgCAqLwouZGlzYWJsZWQtY2FyZCB7CiAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7IO2BtOumrSDssKjri6ggKi8KICBvcGFjaXR5OiAwLjY7CiAgLyog7Yis66qF64+EIOyEpOyglSAqLwogIGN1cnNvcjogbm90LWFsbG93ZWQ7CiAgLyog66eI7Jqw7IqkIOy7pOyEnCDrs4Dqsr0gKi8KfQoKLmxhYmVsLXByb2dyZXNzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDMwRjFBOwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxNXB4IDMwcHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMzBweDsKICBsZWZ0OiAzMHB4OwogIGJvcmRlci1yYWRpdXM6IDMwcHg7Cn0KCi5sYWJlbC1jb21wbGV0ZWQgewogIGJhY2tncm91bmQtY29sb3I6ICM0NDQ0NDQ7CiAgY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDE1cHggMzBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAzMHB4OwogIGxlZnQ6IDMwcHg7CiAgYm9yZGVyLXJhZGl1czogMzBweDsKfQoKLnBhZ2luYXRpb24tY29udHJvbHMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZ2FwOiAxMHB4OwogIG1hcmdpbi10b3A6IDUwcHg7CiAgbWFyZ2luLWJvdHRvbTogNDBweCAhaW1wb3J0YW50Owp9CgoucGFnZS1udW1iZXJzIHsKICBkaXNwbGF5OiBmbGV4OwogIGdhcDogMjBweDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgovKiAyNC4xMS4yMiDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVyIHsKICB3aWR0aDogNDBweDsKICBoZWlnaHQ6IDQwcHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLyogMjQuMTEuMjIg7IiY7KCVICovCi5wYWdlLW51bWJlci5hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6ICNkMzBmMWE7CiAgY29sb3I6IHdoaXRlOwp9CgovKiAyNC4xMS4yMiDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVyOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOwp9CgoucGFnaW5hdGlvbi1hcnJvdyB7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoucGFnaW5hdGlvbi1hcnJvdy5kaXNhYmxlZCB7CiAgb3BhY2l0eTogMC41OwogIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0KCi5wYWdpbmF0aW9uLWFycm93LmZsaXBwZWQgewogIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7Cn0KCgoKLyogMjQuMTEuMTQg7IiY7KCVIC0g7KCE67CY7KCB7J24IOyImOyglSAqLwoudGV4dC0yODMgewogIC8qIGFsaWduLXNlbGY6IHN0cmV0Y2g7CiAgbGV0dGVyLXNwYWNpbmc6IDA7CiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsKICBtYXJnaW4tdG9wOiAtMXB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsgKi8KICBkaXNwbGF5OiAtd2Via2l0LWJveDsKICAvKiDtlIzroInsiqQg7Luo7YWM7J2064SI66GcIOyEpOyglSAqLwogIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7CiAgLyog7IiY7KeB7Jy866GcIO2FjeyKpO2KuCDsoJXroKwgKi8KICAtd2Via2l0LWxpbmUtY2xhbXA6IDE7CiAgLyog7LWc64yAIOykhCDsiJjrpbwgM+ykhOuhnCDsoJztlZwgKi8KICBvdmVyZmxvdzogaGlkZGVuOwogIC8qIOuEmOy5mOuKlCDthY3siqTtirjrpbwg7Iio6rmAICovCiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgLyog64SY7LmY64qUIOu2gOu2hOyXkCAuLi4g7ZGc7IucICovCiAgd29yZC13cmFwOiBicmVhay13b3JkOwogIC8qIOuLqOyWtOulvCDspITrsJTqv4ggKi8KICBsaW5lLWhlaWdodDogMS40OwogIC8qIOykhCDqsITqsqkgKi8KICBoZWlnaHQ6IGNhbGMoMS40ZW0gKiAxKTsKICAvKiDstZzrjIAg64aS7J20IOyEpOyglSAo7KSEIOqwhOqyqSAqIOykhCDsiJgpICovCn0KCi5mcmFtZS03ODIgewogIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBvdmVyZmxvdzogaGlkZGVuOwp9CgoubWFzay1ncm91cC0yIHsKICBoZWlnaHQ6IDMzMHB4OwogIHdpZHRoOiAxMDAlOwogIG9iamVjdC1maXQ6IGNvdmVyOwogIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwIDA7Cn0KCi5mcmFtZS03ODEzLTIgewogIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OwogIGFsaWduLXNlbGY6IHN0cmV0Y2g7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2t3aGl0ZXdoaXRlKTsKICBib3JkZXI6IDFweCBzb2xpZDsKICBib3JkZXItY29sb3I6IHZhcigtLWFsdG8pOwogIGJvcmRlci1yYWRpdXM6IDBweCAwcHggMjBweCAyMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleDogMCAwIGF1dG87CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBnYXA6IDIwcHg7CiAgcGFkZGluZzogNDBweCAzMHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKfQoKLnRleHQtMjgtMiB7CiAgYWxpZ24tc2VsZjogc3RyZXRjaDsKICBsZXR0ZXItc3BhY2luZzogMDsKICBsaW5lLWhlaWdodDogbm9ybWFsOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQo="},{"version":3,"sources":["EventList.vue"],"names":[],"mappings":";AAufile":"EventList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"events-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title_center\">\n        <div class=\"title pretendard-bold-log-cabin-38px\">이벤트</div>\n      </div>\n      <div class=\"events_wrap\">\n        <!-- Tabs section -->\n        <div class=\"events_tab\">\n          <div v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"selectTab(tab)\"\n            class=\"pretendard-regular-normal-granite-gray-18px\" :class=\"['tab', { active: selectedTab === tab }]\">\n            {{ tab }}\n          </div>\n        </div>\n\n        <!-- 전체 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '전체 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 진행중 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '진행중 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div> -->\n\n        <!-- 종료 이벤트 탭 -->\n        <!-- <div class=\"frame-7820\" v-if=\"selectedTab === '종료 이벤트'\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event.id)\">\n                <div class=\"label-box  pretendard-medium-white-14px\" :style=\"getLabelStyle(event.type)\">\n                  {{ event.type === '진행중' ? '진행중' : '종료' }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n        <!-- Pagination controls -->\n        <!-- <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div> -->\n\n        <!-- 24.11.22 수정 - 코드 간결하게 수정 및 type 나오도록 수정 -->\n        <div class=\"frame-7820\" v-for=\"tab in tabs\" :key=\"tab\" v-if=\"selectedTab === tab\">\n          <div class=\"frame-7825\">\n            <div class=\"frame-7824 grid-container\">\n              <!--  24.11.22 수정 - 추가  -->\n              <div v-for=\"(event, index) in paginatedEvents\" :key=\"index\" class=\"frame-782\"\n                @click=\"toGoEventDetail(event)\" :class=\"{ 'disabled-card': event.type === '종료' }\">\n                <!-- 24.11.22 수정 -->\n                <div class=\"label-box pretendard-medium-white-14px\" :class=\"{\n                  'label-progress': event.type === '진행중',\n                  'label-completed': event.type === '종료'\n                }\">\n                  {{ event.type }}\n                </div>\n                <img class=\"mask-group-2\" :src=\"event.maskGroup\" alt=\"Mask group\" />\n                <div class=\"frame-7813-2\">\n                  <p class=\"text-283 valign-text-middle pretendard-bold-log-cabin-24px\">\n                    {{ event.description }}\n                  </p>\n                  <div class=\"text-28-2 valign-text-middle pretendard-light-granite-gray-16px\">\n                    {{ event.period }}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Pagination controls -->\n            <div class=\"pagination-controls\">\n              <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" alt=\"Previous\"\n                :class=\"{ disabled: currentPage === 1 }\" />\n              <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n                  @click=\"goToPage(page)\">\n                  {{ page }}\n                </div>\n              </div>\n              <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" alt=\"Next\"\n                :class=\"{ disabled: currentPage === totalPages }\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"EventList\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      tabs: [\"전체 이벤트\", \"진행중 이벤트\", \"종료 이벤트\"],\n      selectedTab: \"전체 이벤트\",\n      currentPage: 1,\n      itemsPerPage: 6,\n      events: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\",\n    };\n  },\n  created() {\n    this.getEvents();\n  },\n  computed: {\n    // filteredEvents() {\n    //   if (this.selectedTab === \"전체 이벤트\") {\n    //     return this.events;\n    //   } else if (this.selectedTab === \"진행중 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"진행중\");\n    //   } else if (this.selectedTab === \"종료 이벤트\") {\n    //     return this.events.filter((event) => event.type === \"종료\");\n    //   }\n    // },\n    // totalPages() {\n    //   return Math.ceil(this.filteredEvents.length / this.itemsPerPage);\n    // },\n    // paginatedEvents() {\n    //   const start = (this.currentPage - 1) * this.itemsPerPage;\n    //   return this.filteredEvents.slice(start, start + this.itemsPerPage);\n    // },\n\n    // 24.11.22 수정 - 탭 적용\n    totalPages() {\n      return Math.ceil(this.filteredEvents(this.selectedTab).length / this.itemsPerPage);\n    },\n    paginatedEvents() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredEvents(this.selectedTab).slice(start, start + this.itemsPerPage);\n    },\n  },\n  methods: {\n    async getEvents() {\n      try {\n        // 서버에서 이벤트 데이터를 가져옵니다.\n        const response = await taskStore.getSelectTasks('events');\n        console.log(\"Fetched events data:\", response);\n\n        // 데이터를 가공하여 events 배열에 할당\n        this.events = response.map(item => ({\n          id: item.id,\n          description: item.title, // title을 description으로 사용\n          period: `${item.startTime?.split('T')[0]} ~ ${item.endTime?.split('T')[0]}`, // startTime과 endTime에서 날짜만 추출\n          maskGroup: item.imageUrl, // imageUrl을 maskGroup에 할당\n          // type: item.status, // 진행 상태 ('진행중', '종료' 등)\n          // 24.11.22 수정 - 추가\n          startDate: new Date(item.startTime),\n          endDate: new Date(item.endTime),\n        }));\n\n        // 24.11.22 수정 - 추가\n        // startDate 역순으로 정렬\n        this.events.sort((a, b) => b.startDate - a.startDate);\n\n        console.log(\"Processed events:\", this.events);\n      } catch (error) {\n        console.error(\"Failed to fetch events data:\", error);\n      }\n    },\n    // 24.11.22 수정 - 추가\n    filteredEvents(tab) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // 시간 00:00:00 설정\n\n      return this.events.filter(event => {\n        const startDate = new Date(event.startDate).setHours(0, 0, 0, 0);\n        const endDate = new Date(event.endDate).setHours(0, 0, 0, 0);\n        let type = \"game\";\n\n        if (startDate <= today && today <= endDate) {\n          type = \"진행중\";\n        } else if (endDate < today) {\n          type = \"종료\";\n        }\n\n        event.type = type; // 타입 설정\n\n        // 24.11.26 수정 - 추가\n        // 오늘 이후의 startDate는 필터링\n        if (startDate > today) return false;\n\n        // 필터링\n        if (tab === \"전체 이벤트\") return true;\n        if (tab === \"진행중 이벤트\" && event.type === \"진행중\") return true;\n        if (tab === \"종료 이벤트\" && event.type === \"종료\") return true;\n\n        return false;\n      });\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.currentPage = 1; // Reset to the first page when tab is changed\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n\n    toGoEventDetail(event) {\n      console.log(\"Navigating to event detail with ID:\", event); // 콘솔에 id 출력\n\n      // 24.11.22 추가\n      // 종료된 이벤트일 경우 클릭 방지\n      if (event.type === \"종료\") {\n        alert(\"종료된 이벤트는 입장할 수 없습니다.\");\n        return;\n      }\n\n      this.$router.push({\n        path: \"/event-detail\",\n        query: { id: event.id, type: event.type }\n      });\n    }\n  },\n};\n</script>\n\n<style scoped>\n.events-2 {\n  width: 100%;\n}\n\n.title_center {\n  align-items: center;\n  padding: 0px 13.5%;\n  justify-content: space-between;\n  display: flex;\n  padding-top: 104px;\n}\n\n.event-register {\n  width: 68px;\n  border-radius: 3px;\n  text-align: center;\n  padding: 10px;\n  color: #fff;\n  background-color: #D30F1A;\n}\n\n.events_wrap {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 120px;\n  width: 100%;\n  padding: 0px 13.5%;\n}\n\n.frame-7820 {\n  padding: 40px;\n  width: 100%;\n  border: 1px solid #ddd;\n}\n\n.events_tab {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n  width: 100%;\n}\n\n.tab {\n  line-height: 100%;\n  width: 33.33333%;\n  padding: 23px 0px;\n  text-align: center;\n  cursor: pointer;\n  color: #666666;\n  background-color: #f5f6f6;\n}\n\n\n.tab:hover {\n  background-color: #fff;\n}\n\n.tab.active {\n  width: 33.3333%;\n  border: 1px solid #ddd;\n  margin-bottom: -2px;\n  background-color: #fff;\n  border-bottom: 2px solid #fff;\n  position: relative;\n  z-index: 2;\n  color: #222222;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 40px;\n}\n\n/* 24.11.22 수정 - 추가 */\n.disabled-card {\n  /* pointer-events: none; 클릭 차단 */\n  opacity: 0.6;\n  /* 투명도 설정 */\n  cursor: not-allowed;\n  /* 마우스 커서 변경 */\n}\n\n.label-progress {\n  background-color: #D30F1A;\n  color: white;\n  padding: 15px 30px;\n  position: absolute;\n  top: 30px;\n  left: 30px;\n  border-radius: 30px;\n}\n\n.label-completed {\n  background-color: #444444;\n  color: white;\n  padding: 15px 30px;\n  position: absolute;\n  top: 30px;\n  left: 30px;\n  border-radius: 30px;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 50px;\n  margin-bottom: 40px !important;\n}\n\n.page-numbers {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n/* 24.11.22 수정 - 추가 */\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n/* 24.11.22 수정 */\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n/* 24.11.22 수정 - 추가 */\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n\n\n\n/* 24.11.14 수정 - 전반적인 수정 */\n.text-283 {\n  /* align-self: stretch;\n  letter-spacing: 0;\n  line-height: normal;\n  margin-top: -1px;\n  position: relative; */\n  display: -webkit-box;\n  /* 플렉스 컨테이너로 설정 */\n  -webkit-box-orient: vertical;\n  /* 수직으로 텍스트 정렬 */\n  -webkit-line-clamp: 1;\n  /* 최대 줄 수를 3줄로 제한 */\n  overflow: hidden;\n  /* 넘치는 텍스트를 숨김 */\n  text-overflow: ellipsis;\n  /* 넘치는 부분에 ... 표시 */\n  word-wrap: break-word;\n  /* 단어를 줄바꿈 */\n  line-height: 1.4;\n  /* 줄 간격 */\n  height: calc(1.4em * 1);\n  /* 최대 높이 설정 (줄 간격 * 줄 수) */\n}\n\n.frame-782 {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n  border-radius: 20px;\n  overflow: hidden;\n}\n\n.mask-group-2 {\n  height: 330px;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 20px 20px 0 0;\n}\n\n.frame-7813-2 {\n  align-items: flex-start;\n  align-self: stretch;\n  background-color: var(--blackwhitewhite);\n  border: 1px solid;\n  border-color: var(--alto);\n  border-radius: 0px 0px 20px 20px;\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  gap: 20px;\n  padding: 40px 30px;\n  position: relative;\n  width: 100%;\n}\n\n.text-28-2 {\n  align-self: stretch;\n  letter-spacing: 0;\n  line-height: normal;\n  position: relative;\n}\n</style>\n<style scoped src=\"@/style/community/eventlist.css\"></style>"]}]}