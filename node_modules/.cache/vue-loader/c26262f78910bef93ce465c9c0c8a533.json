{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerASManagement.vue?vue&type=style&index=0&id=83189d24&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerASManagement.vue","mtime":1732787730746},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiDsoITssrQg7Luo7YWM7J2064SI7J2YIOuwsOqyveyDiSDshKTsoJUgKi8NCi5hcy1jb250YWluZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY2ZjY7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgLyog6riw67O46rCS7J20IOyEuOuhnOuwqe2WpeyduCBmbGV4LWRpcmVjdGlvbuydhCDqsIDroZzrsKntlqXsnLzroZwg7ISk7KCVICovDQogICAgZmxleC1kaXJlY3Rpb246IHJvdzsNCn0NCg0KLndyYXBwZXIgew0KICAgIGZsZXgtZ3JvdzogMTsNCiAgICAvKiDrgpjrqLjsp4Ag6rO16rCE7J2EIOywqOyngO2VmOqyjCDtlaggKi8NCiAgICBwYWRkaW5nOiAzMHB4Ow0KICAgIGdhcDogMjBweDsNCn0NCg0KLyog7YOA7J207YuAIOuwleyKpCAqLw0KLnRpdGxlLWJveCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICBwYWRkaW5nOiAzMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi8qIHNlYXJjaC1ib3ggKi8NCi5zZWFyY2gtYm94IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIHBhZGRpbmc6IDMwcHg7DQogICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgaGVpZ2h0OiAxOTBweDsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLmRhdGUtc2VhcmNoIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCi5kYXRlLXNlYXJjaCBpbnB1dCB7DQogICAgd2lkdGg6IDE3JTsNCiAgICBoZWlnaHQ6IDYwcHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsNCiAgICBtYXJnaW46IDEycHg7DQogICAgcGFkZGluZzogMCAyMHB4Ow0KfQ0KDQouc3RvcmUtc2VhcmNoIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCnNlbGVjdCB7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFja3doaXRld2hpdGUpOw0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgaGVpZ2h0OiA2MHB4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICBwYWRkaW5nOiAwcHggMjBweDsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgd2lkdGg6IDE3JTsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOw0KICAgIG1hcmdpbjogMTJweDsNCn0NCg0KLnNlYXJjaC1jb250YWluZXIgew0KICAgIHdpZHRoOiA3MyU7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIHBhZGRpbmc6IDBweCAxMHB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGhlaWdodDogNjBweDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQp9DQoNCi5zZWFyY2gtY29udGFpbmVyIGltZyB7DQogICAgaGVpZ2h0OiAyNHB4Ow0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICB3aWR0aDogMjRweDsNCiAgICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCg0KLnNlYXJjaC1pbnB1dCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIG91dGxpbmU6IG5vbmU7DQogICAgcGFkZGluZzogMTBweDsNCiAgICB3aWR0aDogMzAwcHg7DQp9DQoNCi8qIOumrOyKpO2KuCDrsJXsiqQgKi8NCi5saXN0LWJveCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBmbGV4LXdyYXA6IHdyYXA7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICBnYXA6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICBwYWRkaW5nOiAzMHB4Ow0KfQ0KDQoubGlzdC1ib3ggaDQgew0KICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQoNCi5saXN0LWJveC1idG4gew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQp9DQoNCi5hZGQtYnRuIHsNCiAgICBsZXR0ZXItc3BhY2luZzogMDsNCiAgICBsaW5lLWhlaWdodDogbm9ybWFsOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICAgIHdpZHRoOiAxNTBweDsNCiAgICBoZWlnaHQ6IDQ1cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMxODQxOTk7DQogICAgY29sb3I6ICNmZmY7DQp9DQoNCi5kZWxldGUtYnRuIHsNCiAgICBsZXR0ZXItc3BhY2luZzogMDsNCiAgICBsaW5lLWhlaWdodDogbm9ybWFsOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICAgIHdpZHRoOiAxNTBweDsNCiAgICBoZWlnaHQ6IDQ1cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7DQogICAgY29sb3I6ICNmZmY7DQogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KfQ0KDQoudGFibGUtY29udGFpbmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG92ZXJmbG93LXg6IGF1dG87DQp9DQoNCi5jb3Vyc2UtbGlzdCB7DQogICAgd2lkdGg6IDEwMCU7DQp9DQoNCnRhYmxlIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOw0KfQ0KDQp0aCwNCnRkIHsNCiAgICBwYWRkaW5nOiAyNnB4IDBweDsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCnRoIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Ow0KfQ0KDQovKiDrsKkg66as7Iqk7Yq4IOuwleyKpCAqLw0KLmFzLWxpc3QtYm94IHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtd3JhcDogd3JhcDsNCiAgICBnYXA6IDEwcHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICBwYWRkaW5nOiAzMHB4Ow0KfQ0KDQoudGFicyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICBoZWlnaHQ6IDQ1cHg7DQp9DQoNCi50YWItYnRuIHsNCiAgICBmbGV4OiAxOw0KICAgIHBhZGRpbmc6IDE1cHg7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB3aWR0aDogMTUwcHg7DQp9DQoNCi50YWItYnRuLmFjdGl2ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMzM5OTsNCiAgICBjb2xvcjogI2ZmZjsNCn0NCg0KLyog7YWM7J2067iUIOyKpO2DgOydvCAqLw0KLnRhYmxlLWNvbnRhaW5lciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBvdmVyZmxvdy14OiBhdXRvOw0KfQ0KDQp0YWJsZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsNCn0NCg0KdGgsDQp0ZCB7DQogICAgcGFkZGluZzogMjZweCAwcHg7DQogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KDQp0aCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsNCn0NCg0KLyog7IOB7YOcIC0g7KCR7IiYICovDQouc3RhdHVzLXJlY2VwdGlvbiwNCi5zdGF0dXMtcHJvY2Vzc2luZywNCi5zdGF0dXMtaG9sZCwNCi5zdGF0dXMtY29tcGxldGUgew0KICAgIGNvbG9yOiAjMTRiNjU1Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxNGI2NTU7DQogICAgd2lkdGg6IDgwcHg7DQogICAgcGFkZGluZzogMTFweCAwcHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQp9DQoNCi8qIOyDge2DnCAtIOynhO2WieykkSAqLw0KLnN0YXR1cy1wcm9jZXNzaW5nIHsNCiAgICBjb2xvcjogI2QzMGYxYTsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDMwZjFhOw0KfQ0KDQovKiDsg4Htg5wgLSDst6jshowgKi8NCi5zdGF0dXMtaG9sZCB7DQogICAgY29sb3I6ICM5OTk5OTk7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTk5OTsNCn0NCg0KLyog7IOB7YOcIC0g7JmE66OMICovDQouc3RhdHVzLWNvbXBsZXRlIHsNCiAgICBjb2xvcjogIzE4NDE5OTsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTg0MTk5Ow0KfQ0KDQoucGFnaW5hdGlvbi1jb250cm9scyB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBnYXA6IDIwcHg7DQogICAgbWFyZ2luLXRvcDogMjBweDsNCn0NCg0KLnBhZ2UtbnVtYmVycyB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGdhcDogMjBweDsNCn0NCg0KLnBhZ2UtbnVtYmVyIHsNCiAgICB3aWR0aDogNDBweDsNCiAgICBoZWlnaHQ6IDQwcHg7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnBhZ2UtbnVtYmVyLmFjdGl2ZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2QzMGYxYTsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQoNCi5wYWdlLW51bWJlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsNCn0NCg0KLnBhZ2luYXRpb24tYXJyb3cgew0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnBhZ2luYXRpb24tYXJyb3cuZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkOw0KfQ0KDQoucGFnaW5hdGlvbi1hcnJvdy5mbGlwcGVkIHsNCiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOw0KfQ0K"},{"version":3,"sources":["ManagerASManagement.vue"],"names":[],"mappings":";AA6YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ManagerASManagement.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\r\n    <div class=\"all\">\r\n        <ManagerHeader />\r\n        <div class=\"wrap\">\r\n            <div class=\"as-container\">\r\n                <ManagerNavbar />\r\n                <div class=\"wrapper\">\r\n                    <!-- 타이틀 부분 -->\r\n                    <div class=\"title-box\">\r\n                        <div class=\"pretendard-bold-normal-black-28px\">A/S 관리</div>\r\n                    </div>\r\n                    <!-- Select box 부분 -->\r\n                    <div class=\"search-box\">\r\n                        <div class=\"date-search\">\r\n                            <span class=\"date pretendard-regular-normal-mine-shaft-18px\">날짜검색</span>\r\n                            <!-- 날짜 선택 부분 -->\r\n                            <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\"\r\n                                v-model=\"selectedDate.start\" />\r\n                            ~\r\n                            <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\"\r\n                                v-model=\"selectedDate.end\" />\r\n                        </div>\r\n                        <div class=\"store-search\">\r\n                            <span class=\"date pretendard-regular-normal-mine-shaft-18px\">매장검색</span>\r\n                            <!-- select box -->\r\n                            <select class=\"pretendard-regular-normal-mine-shaft-18px\">\r\n                                <option value=\"store\" selected>매장이름</option>\r\n                                <option value=\"asDetails\">제목</option>\r\n                            </select>\r\n\r\n                            <!-- 검색어 입력 input 박스 -->\r\n                            <div class=\"search-container\">\r\n                                <input type=\"text\" class=\"search-input pretendard-regular-normal-mountain-mist-18px\"\r\n                                    v-model=\"searchQuery\" placeholder=\"검색어를 입력해주세요\" />\r\n                                <img src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/searchbtn-9.svg\"\r\n                                    alt=\"searchBtn\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"list-box\">\r\n                        <div class=\"list-box-btn\">\r\n                            <div class=\"pretendard-bold-log-cabin-24px\">A/S 리스트</div>\r\n                            <div>\r\n                                <button class=\"delete-btn pretendard-semibold-mountain-mist-16px\"\r\n                                    @click=\"deleteSelected\">\r\n                                    선택 삭제\r\n                                </button>\r\n                                <button class=\"add-btn pretendard-semibold-mountain-mist-16px\" @click=\"addAS\">\r\n                                    A/S 추가\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- 룸 리스트 부분 -->\r\n                        <div class=\"as-list-box\">\r\n                            <div class=\"tabs\">\r\n                                <button v-for=\"tab in tabs\" :key=\"tab\" :class=\"[\r\n                                    'tab-btn pretendard-semibold-mountain-mist-16px',\r\n                                    { active: selectedTab === tab },\r\n                                ]\" @click=\"selectTab(tab)\">\r\n                                    {{ tab }}\r\n                                    <span :style=\"{ color: selectedTab === tab ? 'white' : 'blue' }\">\r\n                                        {{ statusCounts[tab.replace(\" 내역\", \"\")] }}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"course-list\">\r\n                                <div class=\"table-container\">\r\n                                    <table>\r\n                                        <thead>\r\n                                            <tr class=\"pretendard-bold-mine-shaft-18px\">\r\n                                                <th>\r\n                                                    <input type=\"checkbox\" v-model=\"isAllSelected\"\r\n                                                        @change=\"toggleSelectAll\" />\r\n                                                </th>\r\n                                                <th>번호</th>\r\n                                                <th>AS 신청 내역</th>\r\n                                                <th>접수일시</th>\r\n                                                <th>진행상태</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"(list, index) in paginatedItems\" :key=\"index\"\r\n                                                class=\"pretendard-semibold-mountain-mist-16px\">\r\n                                                <td class=\"pretendard-regular-normal-granite-gray-18px\">\r\n                                                    <input type=\"checkbox\" v-model=\"selectedItems\" :value=\"list.id\" />\r\n                                                </td>\r\n                                                <td class=\"pretendard-regular-normal-granite-gray-18px\"\r\n                                                    @click=\"toGoAsDetail(list)\">\r\n                                                    <!-- {{ lists.length - ((currentPage - 1) * itemsPerPage + index) }} -->\r\n                                                    {{list.id}}\r\n                                                </td>\r\n                                                <td class=\"pretendard-regular-normal-granite-gray-18px\"\r\n                                                    @click=\"toGoAsDetail(list)\">\r\n                                                    {{ list.description }}\r\n                                                </td>\r\n                                                <td class=\"pretendard-regular-normal-granite-gray-18px\"\r\n                                                    @click=\"toGoAsDetail(list)\">\r\n                                                    {{ list.requestedAt.split('T')[0] }}\r\n\r\n                                                </td>\r\n                                                <td class=\"pretendard-regular-normal-granite-gray-18px\"\r\n                                                    @click=\"toGoAsDetail(list)\">\r\n                                                    <span :class=\"statusClass(list.status)\">{{\r\n                                                        list.status\r\n                                                    }}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div class=\"pagination-controls\">\r\n                                        <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\"\r\n                                            :alt=\"'Previous'\" :class=\"{ disabled: currentPage === 1 }\" />\r\n                                        <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\r\n                                            <div v-for=\"page in totalPages\" :key=\"page\" :class=\"[\r\n                                                'page-number',\r\n                                                { active: page === currentPage },\r\n                                            ]\" @click=\"goToPage(page)\">\r\n                                                {{ page }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\"\r\n                                            :alt=\"'Next'\" :class=\"{ disabled: currentPage === totalPages }\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { managerStore } from '../../store/managerStore';  // API 호출\r\nimport ManagerHeader from './ManagerHeader.vue';\r\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\r\n\r\nexport default {\r\n    name: \"ManagerASManagement\",\r\n    components: {\r\n        ManagerHeader,\r\n        ManagerNavbar,\r\n    },\r\n    data() {\r\n        return {\r\n            selectedDate: {\r\n                start: '',\r\n                end: '',\r\n            },\r\n            selectedTab: \"전체 내역\",\r\n            tabs: [\"전체 내역\", \"진행중\", \"취소\", \"접수\", \"완료\"],\r\n            selectedStore: \"\",\r\n            selectedAsDetails: \"\",\r\n            searchQuery: \"\",\r\n            selectedItems: [],\r\n            lists: [\r\n            ],\r\n            arrowLeftImage:\r\n                \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\r\n            arrowRightImage:\r\n                \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\r\n            currentPage: 1,\r\n            itemsPerPage: 5, // Display 6 courses per page\r\n        };\r\n    },\r\n    computed: {\r\n\r\n        totalPages() {\r\n            return Math.ceil(this.filteredLists.length / this.itemsPerPage);\r\n        },\r\n        paginatedItems() {\r\n            const start = (this.currentPage - 1) * this.itemsPerPage;\r\n            return this.filteredLists.slice(start, start + this.itemsPerPage);\r\n        },\r\n        filteredLists() {\r\n            let result = this.lists;\r\n\r\n            // 매장 검색 필터\r\n            if (this.selectedStore) {\r\n                result = result.filter((list) => list.title === this.selectedStore);\r\n            }\r\n\r\n            // 제목 검색 필터\r\n            if (this.selectedAsDetails) {\r\n                result = result.filter((list) => list.description === this.selectedAsDetails);\r\n            }\r\n\r\n            // 검색어 필터\r\n            if (this.searchQuery) {\r\n                const query = this.searchQuery.toLowerCase();\r\n                result = result.filter(\r\n                    (list) =>\r\n                        list.description.toLowerCase().includes(query) ||\r\n                        list.title.toLowerCase().includes(query)\r\n                );\r\n            }\r\n\r\n            // 날짜 검색 필터\r\n            if (this.selectedDate.start && this.selectedDate.end) {\r\n                const startDate = new Date(this.selectedDate.start);\r\n                let endDate = new Date(this.selectedDate.end);\r\n\r\n                // endDate가 선택된 경우, 시간을 23:59:59로 설정\r\n                endDate.setHours(23, 59, 59, 999);\r\n\r\n                result = result.filter(\r\n                    (list) =>\r\n                        new Date(list.requestedAt) >= startDate && new Date(list.requestedAt) <= endDate\r\n                );\r\n            } else if (this.selectedDate.start) {\r\n                // startDate만 있을 경우 필터링\r\n                const startDate = new Date(this.selectedDate.start);\r\n                result = result.filter((list) => new Date(list.requestedAt) >= startDate);\r\n            } else if (this.selectedDate.end) {\r\n                // endDate만 있을 경우 필터링, 시간을 23:59:59로 설정\r\n                const endDate = new Date(this.selectedDate.end);\r\n                endDate.setHours(23, 59, 59, 999);\r\n                result = result.filter((list) => new Date(list.requestedAt) <= endDate);\r\n            }\r\n\r\n            // 탭 필터\r\n            if (this.selectedTab !== \"전체 내역\") {\r\n                result = result.filter((list) => list.status === this.selectedTab);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        // 상태별 항목 수 계산\r\n        statusCounts() {\r\n\r\n            return {\r\n                전체: this.lists.length,\r\n                진행중: this.lists.filter((list) => list.status === \"진행중\").length,\r\n                취소: this.lists.filter((list) => list.status === \"취소\").length,\r\n                접수: this.lists.filter((list) => list.status === \"접수\").length,\r\n                완료: this.lists.filter((list) => list.status === \"완료\").length,\r\n            };\r\n        },\r\n        isAllSelected: {\r\n            get() {\r\n                if (this.paginatedItems.length === 0) return false;\r\n                return this.paginatedItems.every((item) =>\r\n                    this.selectedItems.includes(item.id)\r\n                );\r\n            },\r\n            set(value) {\r\n                if (value) {\r\n                    const newSelections = this.paginatedItems\r\n                        .map((item) => item.id)\r\n                        .filter((id) => !this.selectedItems.includes(id));\r\n                    this.selectedItems = [...this.selectedItems, ...newSelections];\r\n                } else {\r\n                    const toRemove = this.paginatedItems.map((item) => item.id);\r\n                    this.selectedItems = this.selectedItems.filter(\r\n                        (id) => !toRemove.includes(id)\r\n                    );\r\n                }\r\n            },\r\n        },\r\n    },\r\n    mounted() {\r\n        this.getAS()\r\n    },\r\n\r\n    methods: {\r\n        async getAS() {\r\n            try {\r\n                // API 데이터 요청\r\n                const response = await managerStore.getTask(`as-requests`);\r\n                console.log(\"response as\", response);\r\n\r\n                // 로컬 스토리지에서 managerInfo 가져오기\r\n                const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\r\n\r\n                // managerInfo가 없는 경우 에러 처리\r\n                if (!managerInfo) {\r\n                    console.error(\"managerInfo 없음\");\r\n                    return;\r\n                }\r\n\r\n                // managerTokenId 추출\r\n                const managerTokenId = managerInfo.id;\r\n                console.log('managerTokenId', managerTokenId);\r\n\r\n                // managerTokenId와 일치하는 branch.managerid 필터링\r\n                const filteredBranches = response.filter(as => as.branch?.managerid == managerTokenId);\r\n\r\n                console.log('Filtered Branches:', filteredBranches);\r\n\r\n                // branch.id가 특정 ID(예: 첫 번째 데이터의 ID)와 일치하는 데이터 필터링\r\n                if (filteredBranches.length > 0) {\r\n                    const branchId = filteredBranches[0].branch?.id; // 첫 번째 데이터의 branch.id 추출\r\n                    console.log('branchId', branchId);\r\n\r\n                    const filteredAS = filteredBranches.filter(as => as.branch?.id === branchId);\r\n\r\n                    console.log(\"filteredAS:\", filteredAS);\r\n\r\n                    // 필요한 데이터만 저장\r\n                    this.lists = filteredAS;\r\n                } else {\r\n                    this.lists = [];\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching AS data:\", error);\r\n            }\r\n        },\r\n        addAS() {\r\n            this.$router.push({ path: \"/manageras-write\" });\r\n        },\r\n        selectTab(tab) {\r\n            this.selectedTab = tab;\r\n            this.currentPage = 1; // 탭 선택 시 페이지를 초기화\r\n        },\r\n        statusClass(status) {\r\n            if (status === \"접수\") return \"status-reception\";\r\n            if (status === \"진행중\") return \"status-processing\";\r\n            if (status === \"취소\") return \"status-hold\";\r\n            if (status === \"완료\") return \"status-complete\";\r\n            return \"\";\r\n        },\r\n        nextPage() {\r\n            if (this.currentPage < this.totalPages) {\r\n                this.currentPage++;\r\n            }\r\n        },\r\n        prevPage() {\r\n            if (this.currentPage > 1) {\r\n                this.currentPage--;\r\n            }\r\n        },\r\n        goToPage(page) {\r\n            this.currentPage = page;\r\n        },\r\n        toggleSelectAll() {\r\n            if (this.isAllSelected) {\r\n                this.selectedItems = this.paginatedItems.map((item) => item.id);\r\n            } else {\r\n                this.selectedItems = [];\r\n            }\r\n        },\r\n       async deleteSelected() {\r\n            if (this.selectedItems.length === 0) {\r\n                alert(\"삭제할 항목을 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            if (confirm(\"선택된 항목을 정말 삭제하시겠습니까?\")) {\r\n                for(var i= 0; i <this.selectedItems.length; i++){\r\n                    const deleteDt = await managerStore.deleteTask(`as-requests/${this.selectedItems[i]}`);\r\n                    }\r\n                console.log('this.selectedItems  : : ' , this.selectedItems )\r\n                this.lists = this.lists.filter(\r\n                    (list) => !this.selectedItems.includes(list.number)\r\n                );\r\n                this.selectedItems = [];\r\n                console.log('this.selectedItems  : : ' , this.selectedItems )\r\n\r\n                // 페이지가 삭제 후 총 페이지 수보다 클 경우 현재 페이지를 조정\r\n                if (this.currentPage > this.totalPages) {\r\n                    this.currentPage = this.totalPages || 1;\r\n                }\r\n                this.getAS()\r\n\r\n            }\r\n        },\r\n        search() {\r\n            // 검색 버튼 클릭 시 페이지를 첫 페이지로 이동\r\n            this.currentPage = 1;\r\n        },\r\n        toGoAsDetail(item) {\r\n            // Step 1: 클릭된 항목의 전체 정보와 ID 출력\r\n            console.log(\"Step 1: 클릭된 A/S 항목\", item);\r\n            console.log(\"Step 1: 선택된 A/S 항목 ID:\", item.id);\r\n\r\n            if (item.id) {\r\n                // Step 2: 라우터 이동 전 ID 출력\r\n                console.log(\"Step 2: 라우터 이동 준비, ID:\", item.id);\r\n\r\n                // 라우터로 페이지 이동\r\n                this.$router.push({\r\n                    path: \"/manageras-detail\",\r\n                    query: { id: item.id }\r\n                });\r\n\r\n                // Step 3: 라우터 이동 후 출력 (라우터의 beforeEach 훅에서 확인 가능)\r\n                console.log(\"Step 3: 라우터 이동 완료\");\r\n            } else {\r\n                console.error(\"Step 1: 항목에 ID가 없습니다:\", item);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 전체 컨테이너의 배경색 설정 */\r\n.as-container {\r\n    background-color: #f5f6f6;\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\r\n    flex-direction: row;\r\n}\r\n\r\n.wrapper {\r\n    flex-grow: 1;\r\n    /* 나머지 공간을 차지하게 함 */\r\n    padding: 30px;\r\n    gap: 20px;\r\n}\r\n\r\n/* 타이틀 박스 */\r\n.title-box {\r\n    background-color: #fff;\r\n    padding: 30px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n/* search-box */\r\n.search-box {\r\n    background-color: #fff;\r\n    padding: 30px;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 190px;\r\n    width: 100%;\r\n}\r\n\r\n.date-search {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.date-search input {\r\n    width: 17%;\r\n    height: 60px;\r\n    border: 1px solid #ddd;\r\n    margin: 12px;\r\n    padding: 0 20px;\r\n}\r\n\r\n.store-search {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\nselect {\r\n    align-items: center;\r\n    background-color: var(--blackwhitewhite);\r\n    display: flex;\r\n    height: 60px;\r\n    justify-content: space-between;\r\n    padding: 0px 20px;\r\n    position: relative;\r\n    width: 17%;\r\n    border: 1px solid #ddd;\r\n    margin: 12px;\r\n}\r\n\r\n.search-container {\r\n    width: 73%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    height: 60px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.search-container img {\r\n    height: 24px;\r\n    position: relative;\r\n    width: 24px;\r\n    text-align: right;\r\n}\r\n\r\n.search-input {\r\n    border: none;\r\n    outline: none;\r\n    padding: 10px;\r\n    width: 300px;\r\n}\r\n\r\n/* 리스트 박스 */\r\n.list-box {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    background-color: #fff;\r\n    padding: 30px;\r\n}\r\n\r\n.list-box h4 {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.list-box-btn {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.add-btn {\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: 150px;\r\n    height: 45px;\r\n    border: none;\r\n    background-color: #184199;\r\n    color: #fff;\r\n}\r\n\r\n.delete-btn {\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: 150px;\r\n    height: 45px;\r\n    border: none;\r\n    background-color: #ccc;\r\n    color: #fff;\r\n    margin-right: 10px;\r\n}\r\n\r\n.table-container {\r\n    background-color: #fff;\r\n    width: 100%;\r\n    overflow-x: auto;\r\n}\r\n\r\n.course-list {\r\n    width: 100%;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    padding: 26px 0px;\r\n    border-bottom: 1px solid #ddd;\r\n    text-align: center;\r\n}\r\n\r\nth {\r\n    background-color: #f5f5f5;\r\n}\r\n\r\n/* 방 리스트 박스 */\r\n.as-list-box {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 10px;\r\n    background-color: #fff;\r\n    padding: 30px;\r\n}\r\n\r\n.tabs {\r\n    background-color: #fff;\r\n    height: 45px;\r\n}\r\n\r\n.tab-btn {\r\n    flex: 1;\r\n    padding: 15px;\r\n    text-align: center;\r\n    border: none;\r\n    background-color: #f5f5f5;\r\n    cursor: pointer;\r\n    width: 150px;\r\n}\r\n\r\n.tab-btn.active {\r\n    background-color: #003399;\r\n    color: #fff;\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.table-container {\r\n    background-color: #fff;\r\n    width: 100%;\r\n    overflow-x: auto;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n}\r\n\r\nth,\r\ntd {\r\n    padding: 26px 0px;\r\n    border-bottom: 1px solid #ddd;\r\n    text-align: center;\r\n}\r\n\r\nth {\r\n    background-color: #f5f5f5;\r\n}\r\n\r\n/* 상태 - 접수 */\r\n.status-reception,\r\n.status-processing,\r\n.status-hold,\r\n.status-complete {\r\n    color: #14b655;\r\n    border: 1px solid #14b655;\r\n    width: 80px;\r\n    padding: 11px 0px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    display: inline-block;\r\n}\r\n\r\n/* 상태 - 진행중 */\r\n.status-processing {\r\n    color: #d30f1a;\r\n    border: 1px solid #d30f1a;\r\n}\r\n\r\n/* 상태 - 취소 */\r\n.status-hold {\r\n    color: #999999;\r\n    border: 1px solid #999999;\r\n}\r\n\r\n/* 상태 - 완료 */\r\n.status-complete {\r\n    color: #184199;\r\n    border: 1px solid #184199;\r\n}\r\n\r\n.pagination-controls {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.page-numbers {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 20px;\r\n}\r\n\r\n.page-number {\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    background-color: #eeeeee;\r\n    cursor: pointer;\r\n}\r\n\r\n.page-number.active {\r\n    background-color: #d30f1a;\r\n    color: white;\r\n}\r\n\r\n.page-number:hover {\r\n    background-color: #eeeeee;\r\n}\r\n\r\n.pagination-arrow {\r\n    cursor: pointer;\r\n}\r\n\r\n.pagination-arrow.disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n}\r\n\r\n.pagination-arrow.flipped {\r\n    transform: rotate(180deg);\r\n}\r\n</style>\r\n"]}]}