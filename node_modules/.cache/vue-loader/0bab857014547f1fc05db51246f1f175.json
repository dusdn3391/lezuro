{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/FindIdWrite.vue?vue&type=style&index=0&id=324977ea&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/FindIdWrite.vue","mtime":1733823915404},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maW5kLWJ0bi5kaXNhYmxlZC1idG4gewogIGJhY2tncm91bmQtY29sb3I6IGdyYXk7IC8qIOu5hO2ZnOyEse2ZlCDsg4Htg5w6IO2ajOyDiSAqLwogIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0K"},{"version":3,"sources":["FindIdWrite.vue"],"names":[],"mappings":";AAgIA;AACA;AACA;AACA","file":"FindIdWrite.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"findid1-2 screen\">\n      <Header />\n      <div class=\"findid1-wrap\">\n        <div class=\"findid1-title valign-text-middle pretendard-extra-extra-bold-black-30px\">아이디 찾기</div>\n        <div class=\"findid1-content\">\n          <div class=\"findid1-content-item\">\n            <div class=\"findid1-content-item-title pretendard-medium-log-cabin-18px\">\n              성명\n            </div>\n            <input type=\"text\" placeholder=\"이름을 입력하세요\" v-model=\"name\" class=\"insert-name pretendard-medium-mountain-mist-16px\" />\n          </div>\n          <div class=\"findid1-content-item\">\n            <div class=\"findid1-content-item-title pretendard-medium-log-cabin-18px\">\n              휴대폰번호\n            </div>\n            <div class=\"input-btn-align\">\n              <input type=\"text\" placeholder=\"휴대폰번호를 입력하세요\" class=\"input-box pretendard-medium-mountain-mist-16px\" v-model=\"phoneNm\"/>\n              <button class=\"cert-number-btn pretendard-medium-white-16px\"  @click=\"sendSMSPhone\">인증번호 받기</button>\n            </div>\n          </div>\n          <div class=\"findid1-content-item\">\n            <div class=\"findid1-content-item-title pretendard-medium-log-cabin-18px\">\n              인증번호\n            </div>\n            <div class=\"input-btn-align\">\n              <input type=\"text\" placeholder=\"인증번호를 입력하세요\" class=\"input-box  pretendard-medium-mountain-mist-16px\" v-model=\"verify_code\" />\n              <button class=\"cert-number-btn pretendard-medium-white-16px\" @click=\"checkPhoneNumber\">인증번호 확인</button>\n            </div>\n          </div>\n          <button class=\"find-btn pretendard-semi-bold-white-18px\"  :disabled=\"!checkCode\"  @click=\"resultId()\"   :class=\"{ 'disabled-btn': !checkCode }\" >아이디 찾기</button>\n        </div>\n      </div>\n      <XFooter />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"FindIdWrite\",\n  components: {\n    Header,\n    XFooter,\n  },\n  data(){\n    return {\n      name : '',\n      phoneNm :'',\n      verify_code : '',\n      checkCode : false /// 인증번호 체크여부\n    }\n  },\n  methods: {\n    // 인증번호 받기\n    async sendSMSPhone(){\n      this.phoneNm\n      const params ={\n        phoneNumber : this.phoneNm\n      }\n      const res = await axios.post('http://13.124.62.68:3000/api/v1/sms/send',params);\n\n      console.log(\"res : : : \" , JSON.stringify(res))\n      console.log(\"res : : : \" , JSON.stringify(res.data.data.code))\n\n      if(res.data.data.code === 1000){\n        this.showSms = true\n        alert('카카오톡으로 인증번호가 발송 되었습니다.')\n      }else{\n        alert('휴대폰 번호가 일치 하지 않습니다.')\n      }\n\n    },\n    // 인증번호 검증\n    async checkPhoneNumber() {\n    const params =\n      {\n        \"phoneNumber\": this.phoneNm,\n        \"verificationCode\": this.verify_code\n      };\n      const res = await axios.post('http://13.124.62.68:3000/api/v1/sms/verify-code',params);\n\n      console.log(\"res : : : \" , JSON.stringify(res))\n      \n  \n    \n      if(res){\n        alert(\"인증번호가 일치합니다\")\n        this.checkCode = true;\n      }else{\n        this.checkCode = false;\n      }\n      \n    },\n\n    // 아이디 찾기 확인\n    async resultId() {\n  try {\n    const res = await axios.get(`http://13.124.62.68:3000/api/v1/users/name/${this.name}`);\n    console.log(\"res : : : \", JSON.stringify(res));\n\n    if (!res || !res.data) {\n      alert(\"이름을 다시 확인해주세요\");\n    } else {\n      const { name, phone } = res.data; // name과 phone만 추출\n      this.$router.push({\n        name: \"findid-result\",\n        params: {\n          name,\n          phone,\n        },\n      });\n    }\n  } catch (error) {\n    console.error(\"Error fetching user ID:\", error);\n    alert(\"아이디를 가져오는 중 오류가 발생했습니다.\");\n  }\n}\n\n  },\n};\n</script>\n<style scoped>\n.find-btn.disabled-btn {\n  background-color: gray; /* 비활성화 상태: 회색 */\n  cursor: not-allowed;\n}\n</style>\n<style scoped src=\"@/style/signup/findidwrite.css\" />"]}]}