{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/SwingVideoList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/SwingVideoList.vue","mtime":1732602393880},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SwingVideoList.vue"],"names":[],"mappings":";AAofile":"SwingVideoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <!-- 24.11.13 수정 - 전체적인 틀 수정 -->\n    <div class=\"swingvideos-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">스윙영상</div>\n      <div class=\"select-btn\">\n        <!-- 24.11.11 수정 - select-box 추가 -->\n        <div class=\"select-box\">\n          <select v-model=\"selectedOption1\">\n            <option value=\"최근\" selected>최신 순</option>\n            <!-- <option value=\"최근\">최신순</option> -->\n            <option value=\"베스트\">베스트 순</option>\n            <option value=\"내 영상\">내가 등록한 영상</option>\n          </select>\n        </div>\n        <button class=\"registerswing pretendard-medium-white-18px\" @click=\"goToBoardWrite()\">\n          등록하기\n        </button>\n      </div>\n      <!-- 각 Frame7657 데이터를 직접 렌더링, 8개만 표시 -->\n      <div class=\"swing-content\">\n        <div class=\"row\" v-for=\"(rowItems, rowIndex) in rows\" :key=\"rowIndex\">\n          <div class=\"column\" v-for=\"(item, index) in rowItems\" :key=\"index\">\n            <div class=\"group-762-7\" :data=\"item\">\n              <img class=\"group-762-7\" :src=\"item.thumbnail\" alt=\"Polygon 1\" />\n                            <img class=\"vector-img\" src=\"./../../img/Polygon 1.png\" alt=\"Vector\"\n                @click=\"openYouTubeModal(item.videoUrl, item)\" />\n              <img class=\"corner-vector\" src=\"./../../img/Vector.png\" alt=\"Corner Vector\" @click=\"openDeleteModal(item)\"\n                v-if=\"item.canDelete\" />\n\n              <img class=\"corner-edit\" src=\"../../img/editbutton.png\" alt=\"Corner Edit\"\n                @click=\"toGoEditSwingVideo(item.user.id, item)\" v-if=\"item.canEdit\" />\n            </div>\n            <div class=\"group-761\">\n              <!-- <div class=\"flex-col-40\"> -->\n              <div class=\"frame-7656\">\n                <!-- 데이터 바인딩 -->\n                <div class=\"text-259 valign-text-middle pretendard-bold-log-cabin-20px\">\n                  {{ item.title }}\n                </div>\n                <div class=\"x1960m-1 valign-text-middle pretendard-regular-normal-log-cabin-18px\">\n                  {{ item.description }}\n                </div>\n              </div>\n              <!-- 24.11.21 수정 - 정렬 추가 -->\n              <div class=\"date-btn-align\">\n                <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\">{{\n                  item.createdAt.split(\"T\")[0] }}</div>\n                <!-- 24.11.21 수정 - 추가 -->\n                <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\"> 조회수 : {{\n                  item.viewCount }}</div>\n              </div>\n              <!-- </div> -->\n            </div>\n          </div>\n          <!-- </div> -->\n        </div>\n\n\n        <!-- 페이징 버튼과 페이지 번호 -->\n        <div class=\"pagination-controls\">\n          <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n            :class=\"{ disabled: currentPage === 1 }\" />\n          <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n            <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n              @click=\"goToPage(page)\">\n              {{ page }}\n            </div>\n          </div>\n          <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n            :class=\"{ disabled: currentPage === totalPages }\" />\n        </div>\n      </div>\n\n      <x-footer />\n      <SwingVideoDeleteModal v-if=\"isDeleteModalVisible\" @close=\"closeDeleteModal\" @confirm=\"deleteSwingVideo\" />\n      <YouTubeModal v-if=\"isYouTubeModalVisible\" :viedoLink=currentViedo @close=\"closeYouTubeModal\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport SwingVideoDeleteModal from \"./SwingVideoDeleteModal\";\nimport YouTubeModal from \"./YouTubeModal\";\nimport { taskStore } from '@/store/taskStore';\n\nexport default {\n  name: \"MySwingVideoList\",\n  components: {\n    Header,\n    RjZsWi,\n    YouTubeModal,\n    SwingVideoDeleteModal,\n    XFooter,\n  },\n  props: [\"materialSymbolsClose\", \"rJZsWIProps\"],\n  data() {\n    return {\n      currentViedo: \"\",\n      selectedOption1: \"최근\",\n      currentPage: 1,\n      isModalVisible: false,\n      isDeleteModalVisible: false,\n      isYouTubeModalVisible: false,\n      videoToDelete: null, // 삭제할 비디오 정보 저장\n      itemsPerPage: 8, // 한 페이지당 보여줄 데이터 수\n      swingVideos: [\n        {\n          id: 1,\n          title: \"코스 1\",\n          description: \"티샷: 196.0m\",\n          createdAt: \"2024.09.01\",\n        },\n\n      ],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      screenWidth: window.innerWidth,\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.swingVideos.length / this.itemsPerPage);\n    },\n    paginatedData() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.swingVideos.slice(start, end); // 현재 페이지에 해당하는 데이터만 보여줌\n    },\n    rows() {\n      const result = [];\n      const itemsPerRow = this.screenWidth <= 720 ? 2 : 4; // 720px 이하일 때 2개씩, 이상일 때 4개씩 표시\n      for (let i = 0; i < this.paginatedData.length; i += itemsPerRow) {\n        result.push(this.paginatedData.slice(i, i + itemsPerRow));\n      }\n      return result;\n    },\n  },\n  watch: {\n    selectedOption1(newValue) {\n      this.handleSelectChange(newValue); // 값 변경 시 호출할 메서드\n    },\n  },\n  methods: {\n    async generateThumbnail(videoUrl) {\n  const video = document.createElement(\"video\");\n  video.src = videoUrl;\n  video.crossOrigin = \"anonymous\"; // CORS 이슈 해결\n  video.style.display = \"none\";\n  document.body.appendChild(video);\n\n  try {\n    // 비디오 로드 완료 기다리기\n    await new Promise((resolve, reject) => {\n      video.addEventListener(\"loadeddata\", resolve);\n      video.addEventListener(\"error\", reject);\n    });\n\n    // 2초로 이동\n    video.currentTime = 2;\n\n    await new Promise((resolve, reject) => {\n      video.addEventListener(\"seeked\", resolve, { once: true });\n      video.addEventListener(\"error\", reject);\n    });\n\n    // 캔버스에 비디오 프레임 그리기\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // 썸네일 이미지 URL 생성\n    const thumbnailUrl = canvas.toDataURL(\"image/png\");\n\n    return thumbnailUrl;\n  } catch (error) {\n    console.error(\"썸네일 생성 중 오류:\", error);\n    return null; // 오류 발생 시 null 반환\n  } finally {\n    // 비디오 엘리먼트 정리\n    document.body.removeChild(video);\n  }\n},\n    handleSelectChange(value) {\n      this.getSwingDt(value);\n\n    },\n    async getSwingDt(value) {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      console.log(\"로그인 사용자 정보:\", loginInfo);\n\n      try {\n        const response = await taskStore.getSelectTasks(`swing-videos`);\n        console.log(\"서버 응답 데이터:\", JSON.stringify(response, null, 2));\n\n        if (response) {\n      // 비디오 데이터를 썸네일 추가와 함께 처리\n      this.swingVideos = await Promise.all(\n        response.map(async (video) => {\n          video.canEdit = video.user?.id === loginInfo?.id;\n          video.canDelete = video.user?.id === loginInfo?.id;\n\n          // 2초 시점 썸네일 생성\n          video.thumbnail = await this.generateThumbnail(video.videoUrl); // 썸네일 생성\n          return video;\n        })\n      );\n\n          // if (value === \"베스트\") {\n          //   this.swingVideos = this.swingVideos.filter((video) => video.viewCount >= 10);\n          // } else if (value === \"내 영상\") {\n          //   this.swingVideos = this.swingVideos.filter((video) => video.canEdit);\n          // }\n\n          // 24.11.21 수정\n          // 정렬 조건\n          if (value === \"베스트\") {\n            this.swingVideos = this.swingVideos.sort((a, b) => b.viewCount - a.viewCount); // 조회수 순으로 내림차순 정렬\n          } else if (value === \"최신\") {\n            this.swingVideos = this.swingVideos.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 날짜 순으로 내림차순 정렬\n          } else if (value === \"내 영상\") {\n            this.swingVideos = this.swingVideos.filter((video) => video.canEdit); // 로그인한 사용자만 볼 수 있는 영상\n          }\n        } else {\n          console.log(\"응답 데이터가 없습니다.\");\n        }\n      } catch (err) {\n        console.error(\"getSwingDt 에러 발생:\", err);\n      }\n    },\n    // 24.11.21 수정 \n    goToBoardWrite() {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      if (loginInfo) {\n        this.$router.push({ path: \"/swingvideo-write\" });\n      } else {\n        alert(\"로그인 후 등록이 가능합니다.\")\n      }\n\n    },\n    toGoEditSwingVideo(userId, item) {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if (parseInt(userId) === parseInt(loginInfo.id)) {\n        this.$router.push({\n          // path: \"/swingvideo-edit\",\n          name: \"SwingVideoEdit\", // 네임드 라우트 사용\n          params: { itemData: item }, // 객체 전달\n        });\n      } else {\n        alert(\"해당 영상을 수정할 권한이 없습니다.\")\n      }\n\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n    closeModal() {\n      this.isModalVisible = false; // 모달을 닫을 때 호출\n    },\n    openDeleteModal(item) {\n      this.videoToDelete = item; // 삭제할 비디오 설정\n      console.log(\"this.videoToDelete: : : : \", this.videoToDelete)\n      this.isDeleteModalVisible = true; // 모달 열기\n    },\n    closeDeleteModal() {\n      this.isDeleteModalVisible = false; // 모달 닫기\n      this.videoToDelete = null; // 선택된 비디오 초기화\n    },\n    async deleteSwingVideo() {\n      console.log(\"영상 삭제\")\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if (parseInt(this.videoToDelete.user.id) === parseInt(loginInfo.id)) {\n        // 삭제할 비디오를 배열에서 제거\n        // this.swingVideos = this.swingVideos.filter(\n        //   (video) => video.id !== this.videoToDelete.id\n        // );\n        // this.videoToDelete.id\n        try {\n          // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n          const response = await taskStore.deleteTask(`swing-videos/${this.videoToDelete.id}`);\n          console.log(\"response data: \", response);\n          if (!response || response === undefined) {\n            console.log(\"응답 데이터가 없습니다.\");\n          } else {\n            this.closeDeleteModal(); // 모달 닫기\n            this.getSwingDt();\n          }\n        } catch (err) {\n\n          console.log(\"ERROR\", err)\n        }\n\n      } else {\n        alert(\"해당 영상을 삭제 할 수  없습니다.\")\n        this.closeDeleteModal(); // 모달 닫기\n      }\n    },\n    async editSwing(idx, cnt) {\n      console.log(\"CNT L L L L l  \", cnt)\n      const counts = cnt + 1\n      try {\n\n        const params = {\n          \"viewCount\": counts,\n        }\n        const response = await taskStore.putTask(`swing-videos/${idx}`, params);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          console.log(\"조회수 + 1\");\n        }\n      } catch (err) {\n        console.log(\"ERROR\", err)\n      }\n    },\n    openYouTubeModal(selectViedo, item) {\n      this.currentViedo = selectViedo\n      console.log(\"selectViedo : : : : \", JSON.stringify(selectViedo))\n      this.editSwing(item.id, item.viewCount)\n      this.isYouTubeModalVisible = true;\n    },\n    closeYouTubeModal() {\n      this.isYouTubeModalVisible = false;\n    },\n    handleResize() {\n      this.screenWidth = window.innerWidth; // 화면 크기 갱신\n    },\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize); // 화면 크기 변경 이벤트 리스너 추가\n    this.handleResize();\n    this.getSwingDt();\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize); // 컴포넌트 파괴 시 이벤트 리스너 제거\n  },\n  async generateThumbnail(url) {\n    const video = document.createElement(\"video\");\n    video.src = url;\n    video.crossOrigin = \"anonymous\"; // S3에 CORS 설정이 필요할 수 있음\n    video.style.display = \"none\";\n    document.body.appendChild(video);\n\n    await new Promise((resolve) => {\n      video.addEventListener(\"loadeddata\", resolve);\n      video.load();\n    });\n\n    // 추출할 시점 설정 (예: 1초)\n    video.currentTime = 1;\n\n    await new Promise((resolve) => {\n      video.addEventListener(\"seeked\", resolve, { once: true });\n    });\n\n    // 캔버스에 비디오 프레임 그리기\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // 썸네일 이미지 URL 생성\n    this.thumbnail = canvas.toDataURL(\"image/png\");\n\n    // 비디오 엘리먼트 정리\n    document.body.removeChild(video);\n  },\n};\n</script>\n<style scoped>\n.group-762-7{\n  height:300px;\n}\n</style>\n<style scoped src=\"@/style/community/swingvideolist.css\"></style>"]}]}