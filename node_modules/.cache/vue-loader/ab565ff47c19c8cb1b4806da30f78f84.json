{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/BoardWrite.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/BoardWrite.vue","mtime":1733725556085},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAiQC9zdG9yZS90YXNrU3RvcmUiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCb2FyZFdyaXRlIiwKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXIsCiAgICBSalpzV2ksCiAgICBYRm9vdGVyLAogIH0sCiAgLy8gMjQuMTEuMjYg7IiY7KCVIC0gaWQg7LaU6rCACiAgcHJvcHM6IFsickpac1dJUHJvcHMiLCAiaWQiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWRGaWxlTmFtZTogIiIsCiAgICAgIHRpdGxlOiAiIiwKICAgICAgY29udGVudDogIiIsCiAgICAgIGltYWdlVXJsOiAiIiwKICAgICAgLy8gYXV0aG9yOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlck5hbWUiKSB8fCAiIiwKICAgICAgYXV0aG9yOiAiIiwgLy8gMjQuMTEuMjAg7IiY7KCVCiAgICAgIGlzRWRpdGluZzogZmFsc2UsIC8vIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgAogICAgICB1c2VySWQgOiAwLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyAvLyDrp4zslb0gbW91bnRlZOyXkOyEnCDri6Tsi5wg7LSI6riw7ZmU6rCAIO2VhOyalO2VmOuLpOuptCDslYTrnpjsmYAg6rCZ7J20IOyCrOyaqSDqsIDriqUKICAgIC8vIHRoaXMuYXV0aG9yID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJOYW1lIikgfHwgIiI7CiAgICAvLyBjb25zb2xlLmxvZygiQXV0aG9yIE5hbWUgKGZyb20gbG9jYWxTdG9yYWdlKToiLCB0aGlzLmF1dGhvcik7CgogICAgICAvLyAyNC4xMS4yMCDsiJjsoJUKICAgICAgY29uc3QgbG9naW5JbmZvID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibG9naW5JbmZvIikpOwogICAgLy8g66eM7JW9IG1vdW50ZWTsl5DshJwg64uk7IucIOy0iOq4sO2ZlOqwgCDtlYTsmpTtlZjri6TrqbQg7JWE656Y7JmAIOqwmeydtCDsgqzsmqkg6rCA64qlCiAgICAvLyB0aGlzLmF1dGhvciA9IGxvZ2luSW5mby5uYW1lOwogICAgLy8gMjQuMTIuMDkg7IiY7KCVIC0g7LaU6rCAOuyekeyEseyekCAtIOuLieuEpOyehOycvOuhnCDrs4Dqsr0KICAgIHRoaXMuYXV0aG9yID0gbG9naW5JbmZvLnVzZXJOYW1lOwogICAgdGhpcy51c2VySWQgPSBwYXJzZUludChsb2dpbkluZm8uaWQpOwogICAgY29uc29sZS5sb2coIkF1dGhvciBOYW1lIChmcm9tIGxvY2FsU3RvcmFnZSk6IiwgdGhpcy5hdXRob3IpOwogIH0sCiAgLy8gMjQuMTEuMjYg7IiY7KCVIC0g7LaU6rCACiAgYXN5bmMgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHsgaWQgfSA9IHRoaXMuJHJvdXRlLnF1ZXJ5OyAvLyBxdWVyeeyXkOyEnCBpZCDstpTstpwKICAgIGlmIChpZCkgewogICAgICB0aGlzLmlzRWRpdGluZyA9IHRydWU7IC8vIOyImOyglSDsg4Htg5zroZwg67OA6rK9CiAgICAgIGF3YWl0IHRoaXMubG9hZEJvYXJkRGF0YShpZCk7IC8vIOyEnOuyhOyXkOyEnCDrjbDsnbTthLDrpbwg6rCA7KC47Ji0CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyAyNC4xMS4yMiDsiJjsoJUgLSDstpTqsIAKICAgIHRvR29Cb2FyZExpc3QoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogIi9ib2FyZC1saXN0IiB9KTsKICAgIH0sCiAgICAvLyAyNC4xMS4yNiDsiJjsoJUgLSDstpTqsIAKICAgIC8vIOq4sOyhtCDsnpDsnKDqsozsi5ztjJAg642w7J207YSwIOuhnOuTnCAo7IiY7KCVIOyLnCkKICAgIGFzeW5jIGxvYWRCb2FyZERhdGEoaWQpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5nZXRTZWxlY3RUYXNrcyhgcG9zdHMvJHtpZH1gKTsKICAgICAgICBjb25zb2xlLmxvZygnYnIgcmVzcG9uc2UnLCByZXNwb25zZSkKCiAgICAgICAgdGhpcy50aXRsZSA9IHJlc3BvbnNlWzBdLnBvc3RfdGl0bGU7CiAgICAgICAgdGhpcy5jb250ZW50ID0gcmVzcG9uc2VbMF0ucG9zdF9jb250ZW50OwogICAgICAgIHRoaXMuaW1hZ2VVcmwgPSByZXNwb25zZVswXS5wb3N0X2ltYWdlVXJsOwogICAgICAgIHRoaXMudmlld3MgPSByZXNwb25zZVswXS5wb3N0X3ZpZXdzOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuyekOycoOqyjOyLnO2MkCDrjbDsnbTthLDrpbwg67aI65+s7Jik64qUIOuNsCDsi6TtjKjtlojsirXri4jri6Q6IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLrjbDsnbTthLDrpbwg67aI65+s7Jik7KeAIOuqu+2WiOyKteuLiOuLpC4iKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHN1Ym1pdCgpIHsKICAgICAgaWYgKCF0aGlzLnRpdGxlIHx8ICF0aGlzLmNvbnRlbnQpIHsKICAgICAgICBhbGVydCgi7KCc66qp6rO8IOuCtOyaqeydhCDsnoXroKXtlbTso7zshLjsmpQuIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgoKICAgICAgLy8gUE9TVCDsmpTssq3snLzroZwg642w7J207YSw66W8IOyEnOuyhOyXkCDsoITshqEKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLAogICAgICAgIGNvbnRlbnQ6IHRoaXMuY29udGVudCwKICAgICAgICBhdXRob3I6IHRoaXMuYXV0aG9yLAogICAgICAgIGltYWdlVXJsOiB0aGlzLmltYWdlVXJsID8gdGhpcy5pbWFnZVVybCA6IG51bGwsIC8vIDI0LjExLjI2IOyImOyglSAtIOydtOuvuOyngOqwgCDsnojsnLzrqbQg7IKs7JqpLCDsl4bsnLzrqbQgbnVsbAogICAgICAgIHVzZXJfaWQgOiB0aGlzLnVzZXJJZCAsCiAgICAgICAgdmlld3M6IHRoaXMudmlld3MKICAgICAgfTsKCiAgICAgIC8vIDI0LjExLjI2IOyImOyglQogICAgICB0cnkgewogICAgICAgIC8vIDI0LjExLjI2IOyImOyglSAtIOy2lOqwgAogICAgICAgIGlmICh0aGlzLmlzRWRpdGluZykgewogICAgICAgICAgY29uc3QgaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZDsgLy8gVVJM7JeQ7IScIGlk66W8IOy2lOy2nAogICAgICAgICAgY29uc29sZS5sb2coJ2lkIDEyMycsIGlkKQogICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUucHV0VGFzayhgcG9zdHMvJHtpZH1gLCBwYXJhbXMpOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCfsiJjsoJUgZGF0YScsIHBhcmFtcykKICAgICAgICAgIGNvbnNvbGUubG9nKCfsiJjsoJUgcmVzcG9uc2UgMScsIHJlc3BvbnNlKQogICAgICAgICAgYWxlcnQoIuyImOygleydtCDrkJjsl4jsirXri4jri6QiKTsKCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLnBvc3RUYXNrKCJwb3N0cyIsIHBhcmFtcyk7CgogICAgICAgICAgY29uc29sZS5sb2coIuuTseuhnSDshLHqs7U6IiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICBhbGVydCgi65Ox66Gd7J20IOuQmOyXiOyKteuLiOuLpCIpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiL2JvYXJkLWxpc3QiIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuuTseuhnSDsi6TtjKg6IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLrk7HroZ3sl5Ag7Iuk7Yyo7ZaI7Iq164uI64ukLiIpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGhhbmRsZUZpbGVVcGxvYWQoZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coIu2GteyLoCDtlZjripQg7KSRISEhIik7CiAgICAgIC8vIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIm1hbmFnZXJUb2tlbiIpOwogICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICB0aGlzLmZpbGUgPSBudWxsOwogICAgICB0aGlzLmZpbGUgPSBmaWxlOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnNpemUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLm5hbWUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnR5cGUpOwogICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgZmlsZU5hbWU6IGZpbGUubmFtZSwKICAgICAgICBmaWxlU2l6ZTogZmlsZS5zaXplLAogICAgICAgIG1pbWVUeXBlOiBmaWxlLnR5cGUsCiAgICAgIH07CiAgICAgIGNvbnNvbGUubG9nKCLthrXsi6Ag7ZWY64qUIOykkSEhISIgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmZpbGUpKTsKCiAgICAgIC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLnBvc3RUYXNrKAogICAgICAvLyAgICJ2MS9maWxlcy9wcmVzaWduZWQtdXJsIiwKICAgICAgLy8gICBwYXJhbXMKICAgICAgLy8gKTsKICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiVG9rZW4iKTsKCiAgICAgIGNvbnN0IGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ2FjY2VwdCc6ICcqLyonLAogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyIGArIHRva2VuCiAgICAgICAgfSwKICAgICAgfTsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCJodHRwOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL3YxL2ZpbGVzL3ByZXNpZ25lZC11cmwiLCBwYXJhbXMsIGNvbmZpZyk7CiAgICAgIC8vIHJlc3BvbnNlID0gcmVzcG9uc2UuZGF0YQogICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UgOiA6IDogOiA6IiArIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKSk7CiAgICAgIAogICAgICBjb25zdCB1cmwgPSByZXNwb25zZS5kYXRhLnByZXNpZ25lZFVybDsKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlLmZpbGUucGF0aCA6IDogOiA6IDoiICsgSlNPTi5zdHJpbmdpZnkodXJsKSk7CiAgICAgIC8vIGNvbnN0IHVybCA9ICdodHRwczovL2xlenVyby1iay5zMy5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tL2NhbWVyYS5wbmc/WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ29udGVudC1TaGEyNTY9VU5TSUdORUQtUEFZTE9BRCZYLUFtei1DcmVkZW50aWFsPUFLSUE2Q0xITkJSVzNBQTdKUTVaJTJGMjAyNDExMDclMkZhcC1ub3J0aGVhc3QtMiUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDExMDdUMDc0MjExWiZYLUFtei1FeHBpcmVzPTM2MDAmWC1BbXotU2lnbmF0dXJlPWRkNDE3NmQ4Mjg4ZWQ5NjQyMjNmNDcxZmY3NDVmZmVjODk0MzEyMGRhZGYwMTdmYzJmMzczZDkxNTg4ZGY2MjYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JngtaWQ9UHV0T2JqZWN0JzsKICAgICAgdGhpcy5pbWFnZVVybCA9IG5ldyBVUkwodXJsKS5vcmlnaW4gKyBuZXcgVVJMKHVybCkucGF0aG5hbWU7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g7YyM7J28IOyXheuhnOuTnAogICAgICAgIC8vIDIuIO2UhOumrOyCrOyduCBVUkzsnYQg7IKs7Jqp7ZW0IFMz7JeQIO2MjOydvOydhCDsl4XroZzrk5ztlanri4jri6QuCiAgICAgICAgYXdhaXQgYXhpb3MucHV0KHVybCwgZmlsZSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAiQ29udGVudC1UeXBlIjogZmlsZS50eXBlLAogICAgICAgICAgICAvLyAnQ29udGVudC1MZW5ndGgnOiBmaWxlLnNpemUKICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2coIkZpbGUgdXBsb2FkZWQgc3VjY2Vzc2Z1bGx5ISIpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIkVycm9yIHVwbG9hZGluZyBmaWxlOiIsIGVycm9yKTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["BoardWrite.vue"],"names":[],"mappings":";AA8DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardWrite.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"communitywrite-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">자유게시판</div>\n      <div class=\"frame-7782-1\">\n        <div class=\"frame-7857-7\">\n          <div class=\"title-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              제목\n            </div>\n            <input type=\"text\" class=\"frame-7281-8\" placeholder=\"제목을 입력해주세요\" v-model=\"title\" />\n          </div>\n          <div class=\"content-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              내용\n            </div>\n            <input type=\"text\" class=\"frame-7281-9\" placeholder=\"내용을 입력해주세요\" v-model=\"content\" />\n          </div>\n          <!-- 24.11.26 수정 -->\n          <div class=\"title-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              파일\n            </div>\n            <div class=\"frame-7487-4\">\n              <label for=\"file-upload\" class=\"file-upload-label\">\n                <img class=\"fluentfolder-20-filled-4\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                  alt=\"파일 선택\" />\n                <input id=\"file-upload\" type=\"file\" accept=\"image/*\" @change=\"handleFileUpload\" class=\"file-input\"\n                  style=\"display: none;\" />\n                <div class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\">\n                  <!-- {{ selectedFileName }} -->\n                  <!-- 24.11.26 수정 -->\n                  {{ selectedFileName || (imageUrl ? imageUrl.split('/').pop() : '파일을 선택해주세요') }}\n                </div>\n              </label>\n            </div>\n          </div>\n          <div class=\"frame-7859-3\">\n            <!-- 24.11.22 수정 - 취소시 목록으로 이동 -->\n            <button class=\"cancel-btn\" @click=\"toGoBoardList\">\n              <div class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\">\n                취소하기\n              </div>\n            </button>\n            <button class=\"frame-7923-3\" @click=\"submit\">\n              <div class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\">\n                <!-- 24.11.26 수정 -->\n                {{ isEditing ? \"수정하기\" : \"등록하기\" }}\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"BoardWrite\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  // 24.11.26 수정 - id 추가\n  props: [\"rJZsWIProps\", \"id\"],\n  data() {\n    return {\n      selectedFileName: \"\",\n      title: \"\",\n      content: \"\",\n      imageUrl: \"\",\n      // author: localStorage.getItem(\"userName\") || \"\",\n      author: \"\", // 24.11.20 수정\n      isEditing: false, // 24.11.26 수정 - 추가\n      userId : 0,\n    };\n  },\n  mounted() {\n    // // 만약 mounted에서 다시 초기화가 필요하다면 아래와 같이 사용 가능\n    // this.author = localStorage.getItem(\"userName\") || \"\";\n    // console.log(\"Author Name (from localStorage):\", this.author);\n\n      // 24.11.20 수정\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    // 만약 mounted에서 다시 초기화가 필요하다면 아래와 같이 사용 가능\n    // this.author = loginInfo.name;\n    // 24.12.09 수정 - 추가:작성자 - 닉네임으로 변경\n    this.author = loginInfo.userName;\n    this.userId = parseInt(loginInfo.id);\n    console.log(\"Author Name (from localStorage):\", this.author);\n  },\n  // 24.11.26 수정 - 추가\n  async created() {\n    const { id } = this.$route.query; // query에서 id 추출\n    if (id) {\n      this.isEditing = true; // 수정 상태로 변경\n      await this.loadBoardData(id); // 서버에서 데이터를 가져옴\n    }\n  },\n  methods: {\n    // 24.11.22 수정 - 추가\n    toGoBoardList() {\n      this.$router.push({ path: \"/board-list\" });\n    },\n    // 24.11.26 수정 - 추가\n    // 기존 자유게시판 데이터 로드 (수정 시)\n    async loadBoardData(id) {\n      try {\n        const response = await taskStore.getSelectTasks(`posts/${id}`);\n        console.log('br response', response)\n\n        this.title = response[0].post_title;\n        this.content = response[0].post_content;\n        this.imageUrl = response[0].post_imageUrl;\n        this.views = response[0].post_views;\n      } catch (error) {\n        console.error(\"자유게시판 데이터를 불러오는 데 실패했습니다:\", error);\n        alert(\"데이터를 불러오지 못했습니다.\");\n      }\n    },\n    async submit() {\n      if (!this.title || !this.content) {\n        alert(\"제목과 내용을 입력해주세요.\");\n        return;\n      }\n\n\n      // POST 요청으로 데이터를 서버에 전송\n      const params = {\n        title: this.title,\n        content: this.content,\n        author: this.author,\n        imageUrl: this.imageUrl ? this.imageUrl : null, // 24.11.26 수정 - 이미지가 있으면 사용, 없으면 null\n        user_id : this.userId ,\n        views: this.views\n      };\n\n      // 24.11.26 수정\n      try {\n        // 24.11.26 수정 - 추가\n        if (this.isEditing) {\n          const id = this.$route.query.id; // URL에서 id를 추출\n          console.log('id 123', id)\n          const response = await taskStore.putTask(`posts/${id}`, params);\n\n          console.log('수정 data', params)\n          console.log('수정 response 1', response)\n          alert(\"수정이 되었습니다\");\n\n        } else {\n          const response = await taskStore.postTask(\"posts\", params);\n\n          console.log(\"등록 성공:\", response.data);\n          alert(\"등록이 되었습니다\");\n        }\n\n        this.$router.push({ path: \"/board-list\" });\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n\n    async handleFileUpload(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = null;\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      // const response = await taskStore.postTask(\n      //   \"v1/files/presigned-url\",\n      //   params\n      // );\n      const token = localStorage.getItem(\"Token\");\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*',\n          'Authorization': `Bearer `+ token\n        },\n      };\n      const response = await axios.post(\"http://13.124.62.68:3000/api/v1/files/presigned-url\", params, config);\n      // response = response.data\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n      \n      const url = response.data.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.frame-7859-3 {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.communitywrite-2 {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n}\n\n.frame-7859-3 {\n  top: 20px;\n  justify-content: center;\n  width: 100%;\n}\n\n.title {\n  padding: 0px 13.5%;\n  padding-top: 104px;\n  width: 100%;\n}\n\n.cancel-btn {\n  align-items: center;\n  background-color: var(--mountain-mist);\n  display: flex;\n  gap: 10px;\n  height: 50px;\n  justify-content: center;\n  padding: 18px 66px;\n  position: relative;\n  width: 150px;\n  border: none;\n  border-radius: 7px;\n}\n\n.frame-7923-3 {\n  border: none;\n  border-radius: 7px;\n}\n\n.content-title {\n  align-items: center;\n  display: flex;\n  gap: 10px;\n  padding: 0px 0px 0px 20px;\n  position: relative;\n  width: 150px;\n}\n\n.title-box,\n.content-box {\n  align-items: center;\n  align-self: stretch;\n  /* 24.11.22 수정 - border 겹침 수정 */\n  /* border-bottom-style: solid;\n  border-bottom-width: 1px;  */\n  border-top: 1px solid #ddd;\n  /* border-color: var(--celeste);\n  border-top-style: solid;\n  border-top-width: 1px; */\n  display: flex;\n  flex: 0 0 auto;\n  padding: 20px 20px 20px 0px;\n  position: relative;\n  width: 100%;\n}\n\n.frame-7281-9 {\n  height: 220px;\n}\n\n.frame-7782-1 {\n  margin-bottom: 140px;\n  width: 100%;\n  padding: 0px 13.5%;\n  border: none;\n}\n\n.frame-7487-4 {\n  align-items: center;\n  background-color: var(--hint-of-red);\n  border: 0.5px solid;\n  border-color: var(--celeste);\n  display: flex;\n  gap: 10px;\n  height: 55px;\n  padding: 0px 20px;\n  position: relative;\n  width: 100%;\n}\n\n/* 24.11.26 수정 - 추가 */\n.frame-7487-4 label {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.frame-7857-7 {\n  width: 100%;\n  padding: 40px;\n  border: 1px solid #dddddd;\n  margin-top: 44px;\n}\n\n.frame-7281-8 {\n  background-color: #fafafa;\n  padding: 20px;\n  width: 100%;\n  border: 0.5px solid #ddd;\n}\n\n.frame-7281-9 {\n  background-color: #fafafa;\n  padding: 20px;\n  width: 100%;\n  border: 0.5px solid #ddd;\n  height: 200px;\n}\n</style>\n<style scoped src=\"@/style/community/boardwrite.css\"></style>\n"]}]}