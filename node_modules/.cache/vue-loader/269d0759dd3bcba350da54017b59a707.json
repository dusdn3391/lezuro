{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/ContactWriteno2.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/ContactWriteno2.vue","mtime":1734661343632},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAnQC9zdG9yZS90YXNrU3RvcmUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDb250YWN0V3JpdGVubzIiLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlciwKICAgIFJqWnNXaSwKICAgIFhGb290ZXIsCiAgfSwgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlIDogIiIsCiAgICAgIGRlc2NyaXB0aW9uIDogIiIsCiAgICAgIHZpZGVvVXJsIDogIiIsCiAgICAgIHNlbGVjdGVkRmlsZU5hbWU6IG51bGwsCiAgICAgIGZpbGU6IG51bGwsCiAgICB9OwogIH0sCiAgcHJvcHM6IFsickpac1dJUHJvcHMiLF0sCiAgbWV0aG9kczogewogICAgLy8gaGFuZGxlRmlsZVVwbG9hZChldmVudCkgewogICAgLy8gICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgLy8gICBpZiAoZmlsZSkgewogICAgLy8gICAgIHRoaXMuc2VsZWN0ZWRGaWxlTmFtZSA9IGZpbGUubmFtZTsgLy8g7ISg7YOd65CcIO2MjOydvCDsnbTrpoQg7KCA7J6lCiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICAvLyAyNC4xMS4xMSDsiJjsoJUgLSDst6jshozsi5wg66qp66Gd7Jy866GcIOqwgOq4sAogICAgdG9Hb1N3aW5nTGlzdCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoeyBwYXRoOiAiL3N3aW5ndmlkZW8tbGlzdCIgfSk7CiAgICB9LAogICAgYXN5bmMgdXBkYXRlU3dpbmdEdCgpewogICAgICBjb25zdCBsb2dpbkluZm8gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJsb2dpbkluZm8iKSk7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICAidGl0bGUiOiB0aGlzLnRpdGxlLAogICAgICAgICJkZXNjcmlwdGlvbiI6IHRoaXMuZGVzY3JpcHRpb24sCiAgICAgICAgInZpZGVvVXJsIjogdGhpcy52aWRlb1VybCwKICAgICAgICAidXNlcklkIjogcGFyc2VJbnQobG9naW5JbmZvLmlkKQogICAgICB9OwoKICAgICAgY29uc29sZS5sb2coIlBhcm1hcyIsIEpTT04uc3RyaW5naWZ5KHBhcmFtcykpCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUucG9zdFRhc2soYHN3aW5nLXZpZGVvc2AscGFyYW1zKTsKICAgICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UgZGF0YTogIiwgcmVzcG9uc2UpOwogICAgICAgIGlmICghcmVzcG9uc2UgfHwgcmVzcG9uc2UgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgY29uc29sZS5sb2coIuydkeuLtSDrjbDsnbTthLDqsIAg7JeG7Iq164uI64ukLiIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi66ek7J6l7J20IOuTseuhnSDrkJjsl4jsirXri4jri6QuIik7CiAgICAgICAgICB0aGlzLnRvR29Td2luZ0xpc3QoKQogICAgICAgICAgLy8gd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgIH0KICAgICAgfWNhdGNoKGVycil7CgogICAgICAgIGNvbnNvbGUubG9nKCJFUlJPUiIgLCBlcnIpCiAgICAgIH0KCiAgICB9LAogICAgYXN5bmMgb25GaWxlQ2hhbmdlKGV2ZW50KSB7CiAgICAgIGNvbnNvbGUubG9nKCLthrXsi6Ag7ZWY64qUIOykkSEhISIpOwogICAgICAvL2NvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIm1hbmFnZXJUb2tlbiIpOwogICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICB0aGlzLmZpbGUgPSBmaWxlOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnNpemUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLm5hbWUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnR5cGUpOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZU5hbWUgPSBmaWxlLm5hbWUKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIGZpbGVOYW1lOiBmaWxlLm5hbWUsCiAgICAgICAgZmlsZVNpemU6IGZpbGUuc2l6ZSwKICAgICAgICBtaW1lVHlwZTogZmlsZS50eXBlLAogICAgICB9OwogICAgICBjb25zb2xlLmxvZygi7Ya17IugIO2VmOuKlCDspJEhISEiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5maWxlKSk7CgogICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5wb3N0VGFzaygKICAgICAgLy8gICAidjEvZmlsZXMvcHJlc2lnbmVkLXVybCIsCiAgICAgIC8vICAgcGFyYW1zCiAgICAgIC8vICk7CgogICAgICAvLyAyNC4xMi4xMSDsiJjsoJUKICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiVG9rZW4iKTsKCiAgICAgIGNvbnN0IGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ2FjY2VwdCc6ICcqLyonLAogICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyIGAgKyB0b2tlbgogICAgICAgIH0sCiAgICAgIH07CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCgiaHR0cDovLzEzLjEyNC42Mi42ODozMDAwL2FwaS92MS9maWxlcy9wcmVzaWduZWQtdXJsIiwgcGFyYW1zLCBjb25maWcpOwoKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlIDogOiA6IDogOiIgKyBKU09OLnN0cmluZ2lmeShyZXNwb25zZSkpOwoKICAgICAgLy8gY29uc3QgdXJsID0gcmVzcG9uc2VbMF0ucHJlc2lnbmVkVXJsOwogICAgICAgIC8vIDI0LjEyLjExIOyImOyglQogICAgICBjb25zdCB1cmwgPSByZXNwb25zZS5kYXRhLnByZXNpZ25lZFVybDsKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlLmZpbGUucGF0aCA6IDogOiA6IDoiICsgSlNPTi5zdHJpbmdpZnkodXJsKSk7CiAgICAgIAogICAgICB0aGlzLnZpZGVvVXJsID0gbmV3IFVSTCh1cmwpLm9yaWdpbiArIG5ldyBVUkwodXJsKS5wYXRobmFtZTsKICAgICAgY29uc29sZS5sb2coInZpZGVvVXJsIDogOjogOiA6ICIgLCB0aGlzLnZpZGVvVXJsKQogICAgICB0cnkgewogICAgICAgIC8vIO2MjOydvCDsl4XroZzrk5wKICAgICAgICAvLyAyLiDtlITrpqzsgqzsnbggVVJM7J2EIOyCrOyaqe2VtCBTM+yXkCDtjIzsnbzsnYQg7JeF66Gc65Oc7ZWp64uI64ukLgogICAgICAgIGF3YWl0IGF4aW9zLnB1dCh1cmwsIGZpbGUsIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6IGZpbGUudHlwZSwKICAgICAgICAgICAgLy8gJ0NvbnRlbnQtTGVuZ3RoJzogZmlsZS5zaXplCiAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCJGaWxlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseSEiKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciB1cGxvYWRpbmcgZmlsZToiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["ContactWriteno2.vue"],"names":[],"mappings":";AA4EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ContactWriteno2.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"swingwrite-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">스윙영상</div>\n      <div class=\"frame-7782-1\">\n        <div class=\"frame-7857-7\">\n          <div class=\"title-box\">\n            <!-- 24.11.11 수정 - input,textarea font 수정 -->\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              제목\n            </div>\n\n            <input type=\"text\" class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\" v-model=\"title\"\n              placeholder=\"제목을 입력해주세요\" />\n          </div>\n          <div class=\"content-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              내용\n            </div>\n            <!-- 24.12.19 수정 - input - textarea 로 변경  -->\n            <textarea type=\"text\" class=\"frame-7281-9 pretendard-regular-normal-mine-shaft-16px\" v-model=\"description\"\n              placeholder=\"내용을 입력해주세요\"></textarea>\n          </div>\n          <div class=\"title-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              파일\n            </div>\n            <div class=\"frame-7487-4\">\n              <label for=\"file-upload\" class=\"file-upload-label\">\n                <img class=\"fluentfolder-20-filled-4\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                  alt=\"fluent:folder-20-filled\" />\n              </label>\n              <!-- 24.12.19 수정 - 폰트 사이즈 변경  -->\n              <input type=\"file\" id=\"photos\" class=\"pretendard-regular-normal-mine-shaft-14px\" multiple\n                @change=\"onFileChange\" />\n              <!-- <div class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\">\n                {{ selectedFileName }}\n              </div> -->\n            </div>\n       \n            <!-- <div class=\"form-group\">\n              <label for=\"file-upload\" class=\"file-upload-label\">\n                <img class=\"fluentfolder-20-filled-4\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                  alt=\"fluent:folder-20-filled\" />\n              </label>\n              \n         \n                <input type=\"file\" id=\"photos\" class=\"pretendard-regular-normal-mine-shaft-18px\" multiple\n                  @change=\"onFileChange\" />\n              </div> -->\n\n\n          </div>\n          <div class=\"frame-7859-3\">\n            <!-- 24.11.11 수정 - 취소시 목록으로 가도록 수정 -->\n             <!-- 24.12.19 수정 - div 삭제 -->\n            <button class=\"cancel-btn pretendard-medium-white-18px\" @click=\"toGoSwingList\">\n                취소하기\n            </button>\n            <!-- 24.12.19 수정 - div 삭제, click 이벤트 변경  -->\n            <button class=\"submit-btn pretendard-medium-white-18px\" @click=\"updateSwingDt\">\n                등록하기\n            </button>\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from '@/store/taskStore';\nimport axios from 'axios';\n\nexport default {\n  name: \"ContactWriteno2\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  }, data() {\n    return {\n      title : \"\",\n      description : \"\",\n      videoUrl : \"\",\n      selectedFileName: null,\n      file: null,\n    };\n  },\n  props: [\"rJZsWIProps\",],\n  methods: {\n    // handleFileUpload(event) {\n    //   const file = event.target.files[0];\n    //   if (file) {\n    //     this.selectedFileName = file.name; // 선택된 파일 이름 저장\n    //   }\n    // },\n    // 24.11.11 수정 - 취소시 목록으로 가기\n    toGoSwingList() {\n      this.$router.replace({ path: \"/swingvideo-list\" });\n    },\n    async updateSwingDt(){\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      const params = {\n        \"title\": this.title,\n        \"description\": this.description,\n        \"videoUrl\": this.videoUrl,\n        \"userId\": parseInt(loginInfo.id)\n      };\n\n      console.log(\"Parmas\", JSON.stringify(params))\n      try {\n        const response = await taskStore.postTask(`swing-videos`,params);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          console.log(\"매장이 등록 되었습니다.\");\n          this.toGoSwingList()\n          // window.location.reload();\n        }\n      }catch(err){\n\n        console.log(\"ERROR\" , err)\n      }\n\n    },\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      //const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      this.selectedFileName = file.name\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      // const response = await taskStore.postTask(\n      //   \"v1/files/presigned-url\",\n      //   params\n      // );\n\n      // 24.12.11 수정\n      const token = localStorage.getItem(\"Token\");\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*',\n          'Authorization': `Bearer ` + token\n        },\n      };\n      const response = await axios.post(\"http://13.124.62.68:3000/api/v1/files/presigned-url\", params, config);\n\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      // const url = response[0].presignedUrl;\n        // 24.12.11 수정\n      const url = response.data.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      \n      this.videoUrl = new URL(url).origin + new URL(url).pathname;\n      console.log(\"videoUrl : :: : : \" , this.videoUrl)\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n  },\n};\n</script>\n\n\n<style scoped src=\"@/style/community/swingvideowrite.css\"></style>"]}]}