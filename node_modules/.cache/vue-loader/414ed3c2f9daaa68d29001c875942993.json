{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/FaqList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/FaqList.vue","mtime":1734670703808},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAiQC9zdG9yZS90YXNrU3RvcmUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGYXFMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBIZWFkZXIsCiAgICBSalpzV2ksCiAgICBYRm9vdGVyLAogIH0sCiAgcHJvcHM6IFsKICAgICJySlpzV0lQcm9wcyIsCiAgXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlc3Rpb25zOiBbXSwKICAgICAgY2F0ZWdvcmllczogWyLshJzruYTsiqQiLCAi7JiI7JW9IiwgIuuMgO2ajCIsICLsvZTsiqQiLCAi66ek7J6lIiwgIuydtOyaqeyalOq4iCIsICLri6jssrTsnbTsmqkiLCAi6riw7YOAIl0sCiAgICAgIHNlbGVjdGVkQ2F0ZWdvcnk6ICLshJzruYTsiqQiLAogICAgICBzZWFyY2hRdWVyeTogIiIsIC8vIDI0LjExLjEzIOyImOyglSAtIOqygOyDie2VmOq4sCDsnITtlbQg7LaU6rCACiAgICAgIGN1cnJlbnRQYWdlOiAxLCAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAKICAgICAgaXRlbXNQZXJQYWdlOiA1LCAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAKICAgICAgYXJyb3dMZWZ0SW1hZ2U6ICJodHRwczovL2Nkbi5hbmltYWFwcC5jb20vcHJvamVjdHMvNjZkYTUxMmQwYzIyZDQ3ODAxNWUwZTA3L3JlbGVhc2VzLzY2ZGE1MWQ4Y2Y1MDE1M2NlZjk5NTJkZi9pbWcvaWNvbmFtb29uLWFycm93LXVwLTItdGhpbi5zdmciLCAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAKICAgICAgYXJyb3dSaWdodEltYWdlOiAiaHR0cHM6Ly9jZG4uYW5pbWFhcHAuY29tL3Byb2plY3RzLzY2ZGE1MTJkMGMyMmQ0NzgwMTVlMGUwNy9yZWxlYXNlcy82NmRhNTFkOGNmNTAxNTNjZWY5OTUyZGYvaW1nL2ljb25hbW9vbi1hcnJvdy11cC0yLXRoaW4uc3ZnIiwgLy8gMjQuMTIuMjAg7IiY7KCVIC0g7LaU6rCACiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIDI0LjExLjEzIOyImOyglSAtIOqygOyDie2VmOq4sCDsnITtlbQg7LaU6rCACiAgICBmaWx0ZXJlZFF1ZXN0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMucXVlc3Rpb25zLmZpbHRlcigocXVlc3Rpb24pID0+IHsKICAgICAgICBjb25zdCBtYXRjaGVzQ2F0ZWdvcnkgPSBxdWVzdGlvbi50aXRsZSA9PT0gdGhpcy5zZWxlY3RlZENhdGVnb3J5OwogICAgICAgIGNvbnN0IG1hdGNoZXNTZWFyY2ggPSBxdWVzdGlvbi5kZXNjcmlwdGlvbgogICAgICAgICAgLnRvTG93ZXJDYXNlKCkKICAgICAgICAgIC5pbmNsdWRlcyh0aGlzLnNlYXJjaFF1ZXJ5LnRvTG93ZXJDYXNlKCkpOwogICAgICAgIHJldHVybiBtYXRjaGVzQ2F0ZWdvcnkgJiYgbWF0Y2hlc1NlYXJjaDsKICAgICAgfSk7CiAgICB9LAogICAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAgOiDrj5nsoIHsnLzroZwg7ZGc7Iuc7ZWgIO2OmOydtOyngCDrsojtmLgg6rOE7IKwCiAgIHZpc2libGVQYWdlcygpIHsKICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMudG90YWxQYWdlczsKICAgICAgY29uc3QgY3VycmVudFBhZ2UgPSB0aGlzLmN1cnJlbnRQYWdlOwogICAgICBjb25zdCBtYXhWaXNpYmxlUGFnZXMgPSA1OwoKICAgICAgbGV0IHN0YXJ0UGFnZSA9IE1hdGgubWF4KDEsIGN1cnJlbnRQYWdlIC0gTWF0aC5mbG9vcihtYXhWaXNpYmxlUGFnZXMgLyAyKSk7CiAgICAgIGxldCBlbmRQYWdlID0gc3RhcnRQYWdlICsgbWF4VmlzaWJsZVBhZ2VzIC0gMTsKCiAgICAgIGlmIChlbmRQYWdlID4gdG90YWxQYWdlcykgewogICAgICAgIGVuZFBhZ2UgPSB0b3RhbFBhZ2VzOwogICAgICAgIHN0YXJ0UGFnZSA9IE1hdGgubWF4KDEsIGVuZFBhZ2UgLSBtYXhWaXNpYmxlUGFnZXMgKyAxKTsKICAgICAgfQoKICAgICAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IGVuZFBhZ2UgLSBzdGFydFBhZ2UgKyAxIH0sIChfLCBpKSA9PiBzdGFydFBhZ2UgKyBpKTsKICAgIH0sCiAgICAvLyAyNC4xMi4yMCDsiJjsoJUgLSDstpTqsIAgOiDtjpjsnbTsp5UKICAgIHRvdGFsUGFnZXMoKSB7CiAgICAgIHJldHVybiBNYXRoLmNlaWwodGhpcy5maWx0ZXJlZFF1ZXN0aW9ucy5sZW5ndGggLyB0aGlzLml0ZW1zUGVyUGFnZSk7CiAgICB9LAogICAgLy8gMjQuMTIuMjAg7IiY7KCVIC0g7LaU6rCAIDog7Y6Y7J207KeVCiAgICBwYWdpbmF0ZWRJdGVtcygpIHsKICAgICAgY29uc3Qgc3RhcnQgPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogdGhpcy5pdGVtc1BlclBhZ2U7CiAgICAgIGNvbnN0IGVuZCA9IHN0YXJ0ICsgdGhpcy5pdGVtc1BlclBhZ2U7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcmVkUXVlc3Rpb25zLnNsaWNlKHN0YXJ0LCBlbmQpOwogICAgfSwKICB9LAogIC8vIDI0LjEyLjIwIOyImOyglSAtIOy2lOqwgAogIHdhdGNoOiB7CiAgICBmaWx0ZXJlZFF1ZXN0aW9ucygpIHsKICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IDE7IC8vIOqygOyDiSDqsrDqs7wg67OA6rK9IOyLnCDssqsg7Y6Y7J207KeA66GcIOydtOuPmQogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIDI0LjEyLjIwIOyImOyglSAtIOy2lOqwgAogICAgbmV4dFBhZ2UoKSB7CiAgICAgIGlmICh0aGlzLmN1cnJlbnRQYWdlIDwgdGhpcy50b3RhbFBhZ2VzKSB7CiAgICAgICAgdGhpcy5jdXJyZW50UGFnZSsrOwogICAgICB9CiAgICB9LAogICAgLy8gMjQuMTIuMjAg7IiY7KCVIC0g7LaU6rCACiAgICBwcmV2UGFnZSgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudFBhZ2UgPiAxKSB7CiAgICAgICAgdGhpcy5jdXJyZW50UGFnZS0tOwogICAgICB9CiAgICB9LAogICAgLy8gMjQuMTIuMjAg7IiY7KCVIC0g7LaU6rCACiAgICBnb1RvUGFnZShwYWdlKSB7CiAgICAgIGlmIChwYWdlID49IDEgJiYgcGFnZSA8PSB0aGlzLnRvdGFsUGFnZXMpIHsKICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gcGFnZTsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZUFuc3dlcihpbmRleCkgewogICAgICBjb25zdCBmaWx0ZXJlZEluZGV4ID0gdGhpcy5xdWVzdGlvbnMuZmluZEluZGV4KAogICAgICAgIChxdWVzdGlvbikgPT4KICAgICAgICAgIHF1ZXN0aW9uLmlkID09PSB0aGlzLmZpbHRlcmVkUXVlc3Rpb25zW2luZGV4XS5pZAogICAgICApOwoKICAgICAgaWYgKGZpbHRlcmVkSW5kZXggIT09IC0xKSB7CiAgICAgICAgdGhpcy5xdWVzdGlvbnNbZmlsdGVyZWRJbmRleF0uaXNWaXNpYmxlID0KICAgICAgICAgICF0aGlzLnF1ZXN0aW9uc1tmaWx0ZXJlZEluZGV4XS5pc1Zpc2libGU7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RDYXRlZ29yeShjYXRlZ29yeSkgewogICAgICB0aGlzLnNlbGVjdGVkQ2F0ZWdvcnkgPSBjYXRlZ29yeTsKICAgIH0sCiAgICBhc3luYyBnZXRGYXEoKXsKICAgICAgdHJ5IHsKICAgICAgICAvLyDshJzrsoTsl5DshJwg7J2067Kk7Yq4IOuNsOydtO2EsOulvCDqsIDsoLjsmLXri4jri6QuCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUuZ2V0U2VsZWN0VGFza3MoJ2ZhcXMnKTsKICAgICAgICBjb25zb2xlLmxvZygiRmV0Y2hlZCBldmVudHMgZGF0YToiLCByZXNwb25zZSk7CgogICAgICAgIC8vIOuNsOydtO2EsOulvCDqsIDqs7XtlZjsl6wgY291cnNlcyDrsLDsl7Tsl5Ag7ZWg64u5CiAgICAgICAgdGhpcy5xdWVzdGlvbnMgPSByZXNwb25zZS5tYXAoaXRlbSA9PiAoewogICAgICAgICAgaWQ6IGl0ZW0uaWQsCiAgICAgICAgICBkZXNjcmlwdGlvbjogaXRlbS5xdWVzdGlvbiwgLy8gdGl0bGXsnYQgZGVzY3JpcHRpb27snLzroZwg7IKs7JqpCiAgICAgICAgICBhbnN3ZXI6IGl0ZW0uYW5zd2VyLAogICAgICAgICAgdGl0bGU6IGl0ZW0uZ3JvdXAsIC8vIGltYWdlVXJs7J2EIG1hc2tHcm91cOyXkCDtlaDri7kKICAgICAgICAgLy8g7KeE7ZaJIOyDge2DnCAoJ+ynhO2WieykkScsICfsooXro4wnIOuTsSkKICAgICAgICAgaXNWaXNpYmxlOmZhbHNlLAogICAgICAgIH0pKTsKCiAgICAgICAgY29uc29sZS5sb2coIlByb2Nlc3NlZCBjb3Vyc2VzOiIsIHRoaXMucXVlc3Rpb25zKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJGYWlsZWQgdG8gZmV0Y2ggZXZlbnRzIGRhdGE6IiwgZXJyb3IpOwogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCgpewogICB0aGlzLmdldEZhcSgpOwogIH0sCn07Cg=="},{"version":3,"sources":["FaqList.vue"],"names":[],"mappings":";AAkfile":"FaqList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"faq-2-1 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">FAQ</div>\n      <div class=\"frame-7878\">\n        <div class=\"select-box\">\n          <div class=\"frame-7669-2\">\n            <!-- 대회이름을 선택할 수 있는 select box -->\n            <select class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\">\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"title\" disabled selected>\n                제목\n              </option>\n            </select>\n          </div>\n          <div class=\"frame-7670-2\">\n            <!-- 검색어 입력 필드 -->\n            <!-- 24.11.13 검색 하기 위해  searchQuery 추가-->\n            <input type=\"text\" class=\"text-2537 pretendard-regular-normal-mountain-mist-18px\" placeholder=\"검색어를 입력해주세요\"\n              v-model=\"searchQuery\" />\n            <img class=\"search-btn-10\"\n              src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/searchbtn-9.svg\"\n              alt=\"searchBtn\" />\n          </div>\n        </div>\n        <div class=\"category-buttons\">\n          <div v-for=\"(category, index) in categories\" :key=\"index\"\n            :class=\"['button', { active: selectedCategory === category }]\" @click=\"selectCategory(category)\"\n            class=\"pretendard-bold-log-cabin-18px \">\n            {{ category }}\n          </div>\n        </div>\n        <!-- 24.11.13 검색 하기 위해  questions을 filteredQuestions 변경-->\n        <div v-for=\"(question, index) in filteredQuestions\" :key=\"index\" class=\"question-wrap\">\n          <!-- Question Block -->\n          <div class=\"frame-7870-3\" @click=\"toggleAnswer(index)\" :class=\"{ 'active-frame': question.isVisible }\">\n            <div class=\"frame-7869-1\">\n              <div class=\"price valign-text-middle pretendard-bold-black-24px\">Q</div>\n              <div class=\"frame-7868-1\">\n                <div class=\"text-2524 valign-text-middle pretendard-bold-black-20px\">{{ question.title }}</div>\n                <p class=\"text-2525 valign-text-middle pretendard-regular-normal-log-cabin-18px\">{{ question.description\n                  }}</p>\n              </div>\n            </div>\n            <!-- 24.12.20 수정 - 화살표 방향 변경  -->\n            <img class=\"vector-3-29\" :class=\"{ 'rotate-180': question.isVisible }\"\n              src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/vector-3-16.svg\"\n              alt=\"Arrow\" />\n          </div>\n\n          <!-- Conditional Answer Display -->\n          <div class=\"frame-7872-1\" v-if=\"question.isVisible\">\n            <div class=\"frame-7869-2\">\n              <div class=\"a-11 valign-text-middle pretendard-bold-black-24px\">A</div>\n              <div class=\"frame-7868-1\">\n                <p class=\"text-2526 valign-text-middle pretendard-regular-normal-granite-gray-16px\">{{ question.answer\n                  }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- 24.12.20 수정 - 추가 -->\n      <div class=\"pagination-controls\">\n        <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n          :class=\"{ disabled: currentPage === 1 }\" />\n        <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n          <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n            @click=\"goToPage(page)\">\n            {{ page }}\n          </div>\n        </div>\n        <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n          :class=\"{ disabled: currentPage === totalPages }\" />\n      </div>\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"FaqList\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\n    \"rJZsWIProps\",\n  ],\n  data() {\n    return {\n      questions: [],\n      categories: [\"서비스\", \"예약\", \"대회\", \"코스\", \"매장\", \"이용요금\", \"단체이용\", \"기타\"],\n      selectedCategory: \"서비스\",\n      searchQuery: \"\", // 24.11.13 수정 - 검색하기 위해 추가\n      currentPage: 1, // 24.12.20 수정 - 추가\n      itemsPerPage: 5, // 24.12.20 수정 - 추가\n      arrowLeftImage: \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 24.12.20 수정 - 추가\n      arrowRightImage: \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 24.12.20 수정 - 추가\n    };\n  },\n  computed: {\n    // 24.11.13 수정 - 검색하기 위해 추가\n    filteredQuestions() {\n      return this.questions.filter((question) => {\n        const matchesCategory = question.title === this.selectedCategory;\n        const matchesSearch = question.description\n          .toLowerCase()\n          .includes(this.searchQuery.toLowerCase());\n        return matchesCategory && matchesSearch;\n      });\n    },\n   // 24.12.20 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n   visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n    // 24.12.20 수정 - 추가 : 페이징\n    totalPages() {\n      return Math.ceil(this.filteredQuestions.length / this.itemsPerPage);\n    },\n    // 24.12.20 수정 - 추가 : 페이징\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredQuestions.slice(start, end);\n    },\n  },\n  // 24.12.20 수정 - 추가\n  watch: {\n    filteredQuestions() {\n      this.currentPage = 1; // 검색 결과 변경 시 첫 페이지로 이동\n    },\n  },\n  methods: {\n    // 24.12.20 수정 - 추가\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    // 24.12.20 수정 - 추가\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // 24.12.20 수정 - 추가\n    goToPage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    toggleAnswer(index) {\n      const filteredIndex = this.questions.findIndex(\n        (question) =>\n          question.id === this.filteredQuestions[index].id\n      );\n\n      if (filteredIndex !== -1) {\n        this.questions[filteredIndex].isVisible =\n          !this.questions[filteredIndex].isVisible;\n      }\n    },\n    selectCategory(category) {\n      this.selectedCategory = category;\n    },\n    async getFaq(){\n      try {\n        // 서버에서 이벤트 데이터를 가져옵니다.\n        const response = await taskStore.getSelectTasks('faqs');\n        console.log(\"Fetched events data:\", response);\n\n        // 데이터를 가공하여 courses 배열에 할당\n        this.questions = response.map(item => ({\n          id: item.id,\n          description: item.question, // title을 description으로 사용\n          answer: item.answer,\n          title: item.group, // imageUrl을 maskGroup에 할당\n         // 진행 상태 ('진행중', '종료' 등)\n         isVisible:false,\n        }));\n\n        console.log(\"Processed courses:\", this.questions);\n      } catch (error) {\n        console.error(\"Failed to fetch events data:\", error);\n      }\n    },\n  },\n  mounted(){\n   this.getFaq();\n  },\n};\n</script>\n\n<style scoped src=\"@/style/cs/faqlist.css\"></style>"]}]}