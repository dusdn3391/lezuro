{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/FindPassword.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/FindPassword.vue","mtime":1733823896892},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgWEZvb3RlciBmcm9tICIuL1hGb290ZXIiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGaW5kUGFzc3dvcmQiLAogIGNvbXBvbmVudHM6IHsKICAgIEhlYWRlciwKICAgIFhGb290ZXIsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogIiIsCiAgICAgIGlkOiAiIiwKICAgICAgY2hlY2tDb2RlIDogZmFsc2UgLAogICAgICBwaG9uZU5tOiAiIiwKICAgICAgdmVyaWZ5X2NvZGU6ICIiLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOyduOymneuyiO2YuCDrsJvquLAg66Gc7KeBCiAgICBhc3luYyBzZW5kU01TUGhvbmUoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g7IKs7Jqp7J6QIOuNsOydtO2EsCDqsoDspp0KICAgICAgICBjb25zdCB1c2VyUmVzID0gYXdhaXQgYXhpb3MuZ2V0KGBodHRwOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL3YxL3VzZXJzL3Bob25lLyR7dGhpcy5pZH1gKTsKICAgICAgICBjb25zdCB1c2VyRGF0YSA9IHVzZXJSZXMuZGF0YTsKCiAgICAgICAgY29uc29sZS5sb2coIlVzZXIgRGF0YTogIiwgSlNPTi5zdHJpbmdpZnkodXNlckRhdGEpKTsKCiAgICAgICAgLy8g7IKs7Jqp7J6QIOygleuztCDqsoDspp0KICAgICAgICBpZiAodXNlckRhdGEubmFtZSA9PT0gdGhpcy5uYW1lICYmIHVzZXJEYXRhLnBob25lID09PSB0aGlzLnBob25lTm0gJiYgdXNlckRhdGEucGhvbmUgPT09IHRoaXMuaWQpIHsKICAgICAgICAgIC8vIOyduOymneuyiO2YuCDsmpTssq0KICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICAgICAgcGhvbmVOdW1iZXI6IHRoaXMucGhvbmVObSwKICAgICAgICAgIH07CiAgICAgICAgICBjb25zdCBzbXNSZXMgPSBhd2FpdCBheGlvcy5wb3N0KCJodHRwOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL3YxL3Ntcy9zZW5kIiwgcGFyYW1zKTsKCiAgICAgICAgICBjb25zb2xlLmxvZygiU01TIFJlc3BvbnNlOiAiLCBKU09OLnN0cmluZ2lmeShzbXNSZXMpKTsKCiAgICAgICAgICBpZiAoc21zUmVzLmRhdGEuZGF0YS5jb2RlID09PSAxMDAwKSB7CiAgICAgICAgICAgIGFsZXJ0KCLsubTsubTsmKTthqHsnLzroZwg7J247Kad67KI7Zi46rCAIOuwnOyGoeuQmOyXiOyKteuLiOuLpC4iKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFsZXJ0KCLsnbjspp3rsojtmLgg67Cc7Iah7JeQIOyLpO2MqO2WiOyKteuLiOuLpC4iKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgYWxlcnQoIuyeheugpe2VmOyLoCDsoJXrs7TqsIAg7J287LmY7ZWY7KeAIOyViuyKteuLiOuLpC4iKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgaW4gc2VuZFNNU1Bob25lOiAiLCBlcnJvcik7CiAgICAgICAgYWxlcnQoIuygleuztOulvCDtmZXsnbjtlZjripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBjaGVja1Bob25lTnVtYmVyKCkgewogICAgY29uc3QgcGFyYW1zID0KICAgICAgewogICAgICAgICJwaG9uZU51bWJlciI6IHRoaXMucGhvbmVObSwKICAgICAgICAidmVyaWZpY2F0aW9uQ29kZSI6IHRoaXMudmVyaWZ5X2NvZGUKICAgICAgfTsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgYXhpb3MucG9zdCgnaHR0cDovLzEzLjEyNC42Mi42ODozMDAwL2FwaS92MS9zbXMvdmVyaWZ5LWNvZGUnLHBhcmFtcyk7CgogICAgICBjb25zb2xlLmxvZygicmVzIDogOiA6ICIgLCBKU09OLnN0cmluZ2lmeShyZXMpKQogICAgICAKICAKICAgIAogICAgICBpZihyZXMpewogICAgICAgIGFsZXJ0KCLsnbjspp3rsojtmLjqsIAg7J287LmY7ZWp64uI64ukIikKICAgICAgICB0aGlzLmNoZWNrQ29kZSA9IHRydWU7CiAgICAgIH1lbHNlewogICAgICAgIHRoaXMuY2hlY2tDb2RlID0gZmFsc2U7CiAgICAgIH0KICAgICAgCiAgICB9LAogICAgLy8g67mE67CA67KI7Zi4IOywvuq4sCDshLHqs7UKICAgIHN1Y2Nlc3NmaW5kcGFzc3dvcmQoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogInJlc2V0cGFzc3dvcmQiLAogICAgICBwYXJhbXM6IHsKICAgICAgICBwaG9uZTogdGhpcy5waG9uZU5tLCAKICAgICAgICB9LAogICAgICAgfSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["FindPassword.vue"],"names":[],"mappings":";AA4DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FindPassword.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"findpassword1-2 screen\">\n      <Header />\n      <div class=\"findpassword1-wrap\">\n        <h1 class=\"findpassword1-title valign-text-middle pretendard-extra-extra-bold-black-30px\">비밀번호 찾기</h1>\n        <div class=\"findpassword1-content\">\n          <div class=\"findpassword1-content-item\">\n            <div class=\"findpassword1-content-item-title pretendard-medium-log-cabin-18px\">성명</div>\n            <input\n              type=\"text\"\n              placeholder=\"이름을 입력하세요\"\n              class=\"findpassword1-insert-name pretendard-medium-mountain-mist-16px\"\n              v-model=\"name\"\n            />\n          </div>\n          <div class=\"findpassword1-content-item\">\n            <div class=\"findpassword1-content-item-title pretendard-medium-log-cabin-18px\">아이디</div>\n            <input\n              type=\"text\"\n              placeholder=\"영문, 숫자 / 6 ~ 12자로 입력하세요\"\n              class=\"findpassword1-insert-name valign-text-middle pretendard-medium-mountain-mist-16px\"\n              v-model=\"id\"\n            />\n          </div>\n          <div class=\"findpassword1-content-item\">\n            <div class=\"findpassword1-content-item-title pretendard-medium-log-cabin-18px\">휴대폰번호</div>\n            <div class=\"input-btn-align\">\n              <input\n                type=\"text\"\n                placeholder=\"휴대폰번호를 입력하세요\"\n                class=\"findpassword1-input-box pretendard-medium-mountain-mist-16px\"\n                v-model=\"phoneNm\"\n              />\n              <button class=\"find-password-cert-number-btn pretendard-medium-white-16px\" @click=\"sendSMSPhone\">\n                인증번호 받기\n              </button>\n            </div>\n          </div>\n          <div class=\"findpassword1-content-item\">\n            <div class=\"findpassword1-content-item-title pretendard-medium-log-cabin-18px\">인증번호</div>\n            <div class=\"input-btn-align\">\n              <input\n                type=\"text\"\n                placeholder=\"인증번호를 입력하세요\"\n                class=\"findpassword1-input-box pretendard-medium-mountain-mist-16px\"\n                v-model=\"verify_code\"\n              />\n              <button class=\"find-password-cert-number-btn pretendard-medium-white-16px\"  @click=\"checkPhoneNumber\">인증번호 확인</button>\n            </div>\n          </div>\n          <button class=\"find-password-btn pretendard-semi-bold-white-18px\" @click=\"successfindpassword\"  :disabled=\"!checkCode\"   :class=\"{ 'disabled-btn': !checkCode }\" >비밀번호 찾기</button>\n        </div>\n      </div>\n      <XFooter />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"FindPassword\",\n  components: {\n    Header,\n    XFooter,\n  },\n  data() {\n    return {\n      name: \"\",\n      id: \"\",\n      checkCode : false ,\n      phoneNm: \"\",\n      verify_code: \"\",\n    };\n  },\n  methods: {\n    // 인증번호 받기 로직\n    async sendSMSPhone() {\n      try {\n        // 사용자 데이터 검증\n        const userRes = await axios.get(`http://13.124.62.68:3000/api/v1/users/phone/${this.id}`);\n        const userData = userRes.data;\n\n        console.log(\"User Data: \", JSON.stringify(userData));\n\n        // 사용자 정보 검증\n        if (userData.name === this.name && userData.phone === this.phoneNm && userData.phone === this.id) {\n          // 인증번호 요청\n          const params = {\n            phoneNumber: this.phoneNm,\n          };\n          const smsRes = await axios.post(\"http://13.124.62.68:3000/api/v1/sms/send\", params);\n\n          console.log(\"SMS Response: \", JSON.stringify(smsRes));\n\n          if (smsRes.data.data.code === 1000) {\n            alert(\"카카오톡으로 인증번호가 발송되었습니다.\");\n          } else {\n            alert(\"인증번호 발송에 실패했습니다.\");\n          }\n        } else {\n          alert(\"입력하신 정보가 일치하지 않습니다.\");\n        }\n      } catch (error) {\n        console.error(\"Error in sendSMSPhone: \", error);\n        alert(\"정보를 확인하는 중 오류가 발생했습니다.\");\n      }\n    },\n    async checkPhoneNumber() {\n    const params =\n      {\n        \"phoneNumber\": this.phoneNm,\n        \"verificationCode\": this.verify_code\n      };\n      const res = await axios.post('http://13.124.62.68:3000/api/v1/sms/verify-code',params);\n\n      console.log(\"res : : : \" , JSON.stringify(res))\n      \n  \n    \n      if(res){\n        alert(\"인증번호가 일치합니다\")\n        this.checkCode = true;\n      }else{\n        this.checkCode = false;\n      }\n      \n    },\n    // 비밀번호 찾기 성공\n    successfindpassword() {\n      this.$router.push({ name: \"resetpassword\",\n      params: {\n        phone: this.phoneNm, \n        },\n       });\n    },\n  },\n};\n</script>\n<style scoped>\n.find-password-btn.disabled-btn {\n  background-color: gray; /* 비활성화 상태: 회색 */\n  cursor: not-allowed;\n}\n</style>\n<style scoped src=\"@/style/signup/findpassword.css\" />\n"]}]}