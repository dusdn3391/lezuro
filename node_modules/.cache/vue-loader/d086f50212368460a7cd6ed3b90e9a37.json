{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminCourseManagementWrite.vue?vue&type=style&index=0&id=867ca834&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminCourseManagementWrite.vue","mtime":1734070209693},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hZG1pbi1tYW5hZ2VtZW50LWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZDogI2Y1ZjZmNjsKICBkaXNwbGF5OiBmbGV4OwogIGhlaWdodDogMTAwJTsKICBmbGV4LWRpcmVjdGlvbjogcm93Owp9Cgoud3JhcHBlciB7CiAgZmxleC1ncm93OiAxOwogIHBhZGRpbmc6IDMwcHg7CiAgZ2FwOiAyMHB4Owp9CgovKiDtg4DsnbTti4Ag67CV7IqkICovCi50aXRsZS1ib3ggewogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMjRweCAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIEZvcm0gU2VjdGlvbiAqLwouY291cnNlLW1hbmFnZW1lbnQtZm9ybSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9CgouZm9ybS1ncm91cCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIDI0LjEyLjEzIOyImOyglSAqLwouZm9ybS1ncm91cCBsYWJlbCwKLnJhbmstaW5mbyBsYWJlbCwKLmhvbGUtZGV0YWlscyBsYWJlbCB7CiAgLyogd2lkdGg6IDE1MHB4OyAqLwogIHdpZHRoOiAxMCU7CiAgZGlzcGxheTogZ3JpZDsKICBhbGlnbi1pdGVtczogY2VudGVyOwoKfQoKLyogMjQuMTIuMTMg7IiY7KCVICovCi5mb3JtLWdyb3VwIGlucHV0IHsKICAvKiBmbGV4LWdyb3c6IDE7ICovCiAgd2lkdGg6IDkwJTsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGhlaWdodDogNTBweDsKfQoKLmZvcm0tZ3JvdXAgc2VsZWN0IHsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIHdpZHRoOiAyNTBweDsKICBoZWlnaHQ6IDUwcHg7Cn0KCi5mb3JtLWdyb3VwIHRleHRhcmVhIHsKICBmbGV4LWdyb3c6IDE7CiAgcGFkZGluZzogMTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICAvKiAyNC4xMi4xMyDsiJjsoJUgLSDstpTqsIAgICovCiAgcmVzaXplOiBub25lOwogIGhlaWdodDogMTIwcHg7Cn0KCi8qIDI0LjEyLjEzIOyImOyglSAqLwovKiBSYW5rIEluZm9ybWF0aW9uIFNlY3Rpb24gKi8KLnJhbmstaW5mbyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIC8qIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgKi8KICBtYXJnaW4tdG9wOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCgovKiAyNC4xMi4xNCDsiJjsoJUgKi8KLyogLnJhbmstbGFiZWwgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgd2lkdGg6IDE1MHB4Owp9ICovCgoucmFuay1jb250YWluZXIgewogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgcGFkZGluZzogMjBweDsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiA5MCU7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGdhcDogMjBweDsKICAvKiBBZGRzIHNwYWNpbmcgYmV0d2VlbiB0aGUgcmFuayBjb2x1bW5zICovCn0KCi8qIDI0LjEyLjEzIOyImOyglSAtIOy2lOqwgCAgKi8KLnJhbmstY29sdW1uIHsKICAvKiBkaXNwbGF5OiBmbGV4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7ICovCiAgZGlzcGxheTogZ3JpZDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDIwcHg7Cn0KCi8qIDI0LjEyLjEzIOyImOyglSAqLwoucmFuay1jb2x1bW4gaW5wdXQgewogIC8qIHdpZHRoOiAxNzBweDsgKi8KICB3aWR0aDogODAlOwogIC8qIEFkanVzdCB3aWR0aCBhcyBuZWVkZWQgKi8KICBoZWlnaHQ6IDQ4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY2ZjY7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKfQoKLyogLnJhbmstY29sdW1uIC5yYW5rLWxhYmVsIHsKICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgY29sb3I6ICM1NTU7Cn0gKi8KCi8qIDI0LjEyLjEzIOyImOyglSAqLwouY291cnNlX25hbWUgewogIHdpZHRoOiA5MCU7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwp9CgouY291cnNlX25hbWUgaW5wdXQgewogIHdpZHRoOiAxMDAlOwp9CgovKiBIb2xlIERldGFpbHMgVGFibGUgKi8KLmhvbGUtZGV0YWlscyB7CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGRpc3BsYXk6IGZsZXg7Cn0KCi8qIAouaG9sZS1kZXRhaWxzIGxhYmVsIHsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIG1hcmdpbi1yaWdodDogOTBweDsKfSAqLwoKLmhvbGUtZGV0YWlscyB0YWJsZSB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICBtYXJnaW4tdG9wOiAxMHB4Owp9CgovKiAyNC4xMi4xMyDsiJjsoJUgLSDstpTqsIAqLwoubWFpbi1pbWctYWxpZ24gewogIHdpZHRoOiA5MCU7CiAgZGlzcGxheTogZ3JpZDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIGdhcDogMTBweDsKfQoKLyogMjQuMTIuMTMg7IiY7KCVIC0g7LaU6rCAICovCi5tYWluLWltZy1hbGlnbiBpbnB1dCB7CmJvcmRlcjogbm9uZTsKfQoKLyogMjQuMTIuMTMg7IiY7KCVIC0g7LaU6rCAICovCi5pbWFnZS1wcmV2aWV3IHsKICB3aWR0aDogMTAwJTsKICBwYWRkaW5nOiAwIDEwcHg7Cn0KLyogMjQuMTIuMTMg7IiY7KCVICovCi5pbWFnZS1wcmV2aWV3IGltZyB7CiAgbWF4LXdpZHRoOiAxMDAlOwogIG1heC1oZWlnaHQ6IDIwMHB4OwogIC8qIG1hcmdpbi1sZWZ0OiAxNTBweDsgKi8KICBkaXNwbGF5OiBibG9jazsKfQoKLyogMjQuMTIuMTMg7IiY7KCVICovCi5ob2xlLWRldGFpbHMgdGgsCi5ob2xlLWRldGFpbHMgdGQgewogIHBhZGRpbmc6IDIwcHggMTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLyogMjQuMTIuMTMg7IiY7KCVICovCi5ob2xlLWRldGFpbHMgdGggewogIC8qIHBhZGRpbmc6IDIzLjVweCA0MHB4OyAqLwogIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7Cn0KCi5ob2xlLWRldGFpbHMgdHI6bnRoLWNoaWxkKDYpIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0Owp9CgouaG9sZS1kZXRhaWxzIGlucHV0IHsKICB3aWR0aDogNjBweDsKICBwYWRkaW5nOiA1cHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgouY291cnNlX25hbWUgaW5wdXQgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNTBweDsKfQoKLmhvbGUtZGV0YWlscyBpbWcgewogIHdpZHRoOiAyMHB4OwogIGhlaWdodDogMjBweDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5idXR0b24tZ3JvdXAgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi10b3A6IDIwcHg7Cn0KCi8qIDI0LjEyLjEzIOyImOyglSAqLwouYnV0dG9uLWdyb3VwIGJ1dHRvbiB7CiAgLyogd2lkdGg6IDQ3MHB4OyAqLwogIHdpZHRoOiA0OSU7CiAgaGVpZ2h0OiA1MHB4OwogIGJvcmRlcjogbm9uZTsKICBtYXJnaW46IDAgYXV0bzsKICBjb2xvcjogI2ZmZjsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jYW5jZWwtYnRuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTBhMGEwOwp9CgouY29uZmlybS1idG4gewogIGJhY2tncm91bmQtY29sb3I6ICMxODQxOTk7Cn0KCi5kZWxldGUtYnRuIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwp9Cg=="},{"version":3,"sources":["AdminCourseManagementWrite.vue"],"names":[],"mappings":";AAglBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AdminCourseManagementWrite.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <!-- 24.12.13 수정 - 전체 폰트 수정 -->\n  <div class=\"all\">\n    <AdminHeader />\n    <div class=\"wrap\">\n      <div class=\"admin-management-container\">\n        <AdminNavbar />\n        <div class=\"wrapper\">\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">\n              {{ isEdit ? \"코스 수정\" : \"코스 관리\" }}\n            </h2>\n          </div>\n\n          <div class=\"course-management-form\">\n            <!-- Basic Course Information -->\n            <div class=\"form-group\">\n              <label for=\"course-name\" class=\"pretendard-regular-normal-mine-shaft-18px\">코스명</label>\n              <input type=\"text\" id=\"course-name\" v-model=\"courseName\" placeholder=\"코스명을 입력해주세요\"\n                class=\"pretendard-regular-normal-mountain-mist-16px\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"region\" class=\"pretendard-regular-normal-mine-shaft-18px\">지역</label>\n              <input type=\"text\" id=\"region\" v-model=\"region\" placeholder=\"지역을 입력해주세요\"\n                class=\"pretendard-regular-normal-mountain-mist-16px\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"total-distance\" class=\"pretendard-regular-normal-mine-shaft-18px\">총 거리</label>\n              <!-- <input type=\"number\" id=\"total-distance\" v-model.number=\"totalDistance\" placeholder=\"총 거리를 입력해주세요\"\n                class=\"pretendard-regular-normal-mountain-mist-16px\" /> -->\n              <!-- 24.12.13 수정 - type number - text 로 변경 -->\n              <input type=\"type\" id=\"total-distance\" v-model=\"totalDistance\" placeholder=\"총 거리를 입력해주세요\"\n                class=\"pretendard-regular-normal-mountain-mist-16px\"   @input=\"(event) => validateNumber(event, 'totalDistance')\"  />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"difficulty\" class=\"pretendard-regular-normal-mine-shaft-18px\">난이도</label>\n              <select id=\"difficulty\" v-model=\"difficulty\">\n                <!-- 24.12.13 수정 - 기본값 설정 -->\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"\" selected>코스 난이도</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"Very_Easy\">매우 쉬움</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"Easy\">쉬움</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"Medium\">중간</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"Hard\">어려움</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"Very_Hard\">매우 어려움</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"people-limit\" class=\"pretendard-regular-normal-mine-shaft-18px\">인원 제한</label>\n              <select id=\"people-limit\" v-model=\"maxPeople\" class=\"pretendard-regular-normal-mine-shaft-16px\">\n                <!-- 24.12.13 수정 - 기본값 설정 -->\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"0\" disabled>인원 제한</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"no-limit\">무제한</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"10\">10명</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-16px\" value=\"20\">20명</option>\n              </select>\n            </div>\n\n            <div class=\"rank-info\">\n              <label class=\"pretendard-regular-normal-mine-shaft-18px\">평균타수</label>\n              <div class=\"rank-container\">\n                <div v-for=\"(rank, index) in ranks\" :key=\"index\"\n                  class=\"rank-column pretendard-regular-normal-log-cabin-16px\">\n                  <div class=\"rank-label\">{{ rank.label }}</div>\n                  <input type=\"text\" v-model=\"rankValues[index]\" :placeholder=\"rank.placeholder\"\n                    class=\"pretendard-regular-normal-mountain-mist-16px\"  @input=\"(event) => validateNumber(event, `rankValues[${index}]`)\" />\n                </div>\n              </div>\n            </div>\n            <!-- Hole Details for First 9 Holes -->\n            <div class=\"hole-details\">\n              <label class=\"pretendard-regular-normal-mine-shaft-18px\">홀 상세1</label>\n              <div class=\"course_name\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th class=\"pretendard-regular-normal-mine-shaft-18px\">Hole</th>\n                      <th v-for=\"n in 9\" :key=\"'header1-' + n\">{{ n }}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <!-- Rows for Each Tee Box Color -->\n                    <tr v-for=\"(color, colorIndex) in colors\" :key=\"'color1-' + color\">\n                      <td class=\"pretendard-regular-normal-mine-shaft-18px\"> {{ color }}</td>\n                      <td v-for=\"hole in holes.slice(0, 9)\" :key=\"'hole1-' + hole.holeNumber\">\n                        <!-- <input type=\"number\" v-model=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" /> -->\n                        <!-- 24.12.13 수정 - type number - text 로 변경 -->\n                        <input type=\"text\" v-model=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\"  @input=\"(event) => validateNumber(event, `hole.teeBoxes[${colorIndex}].distance`)\"  />\n                      </td>\n                    </tr>\n                    <!-- PAR Row -->\n                    <tr>\n                      <td class=\"pretendard-regular-normal-mine-shaft-18px\">PAR</td>\n                      <td v-for=\"hole in holes.slice(0, 9)\" :key=\"'par1-' + hole.holeNumber\">\n                        <!-- <input type=\"number\" v-model.number=\"hole.teeBoxes[0].par\" placeholder=\"PAR\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" /> -->\n                        <!-- 24.12.13 수정 - type number - text 로 변경 -->\n                        <input type=\"text\" v-model=\"hole.teeBoxes[0].par\" placeholder=\"PAR\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\"  @input=\"(event) => validateNumber(event, 'hole.teeBoxes[0].par')\"  />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"pretendard-regular-normal-mine-shaft-18px\">MAP</td>\n                      <td v-for=\"(hole, index) in holes.slice(0, 9)\" :key=\"'map1-' + index\">\n                        <div class=\"file-upload-container\" @click=\"triggerFileInput(index)\">\n                          <!-- 미리보기 이미지 -->\n                          <img v-if=\"selectedFiles[index]\" :src=\"selectedFiles[index]\" alt=\"map preview\" />\n                          <!-- <img\n                            v-else-if=\"hole.teeBoxes[0].mapImage\"\n                            :src=\"hole.teeBoxes[0].mapImage || '../../../img/lets-icons_img-box-light.png'\" \n                            alt=\"uploaded map\"\n                          /> -->\n                          <!-- <img v-else-if=\"hole.teeBoxes[0].mapImage\" :src=\"hole.teeBoxes[0].mapImage\" alt=\"uploaded map\" /> -->\n                          <img v-else :src=\"hole.teeBoxes[0].mapImage &&\n                            hole.teeBoxes[0].mapImage !== 'string'\n                            ? hole.teeBoxes[0].mapImage\n                            : defaultMapImage\n                            \" alt=\"map\" />\n                        </div>\n                        <input type=\"file\" ref=\"fileInputs\" @change=\"(event) => {\n                          handlePreview(event, index);\n                          onFileSelected(event, index);\n                        }\n                          \" style=\"display: none\" class=\"pretendard-regular-normal-mountain-mist-16px\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <!-- Hole Details for Second 9 Holes -->\n            <div class=\"hole-details\">\n              <label class=\"pretendard-regular-normal-mine-shaft-18px\">홀 상세2</label>\n              <div class=\"course_name\">\n                <table>\n                  <thead>\n                    <tr>\n                      <th class=\"pretendard-regular-normal-mine-shaft-18px\">Hole</th>\n                      <th v-for=\"n in 9\" :key=\"'header2-' + (n + 9)\">\n                        {{ n + 9 }}\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <!-- Rows for Each Tee Box Color -->\n                    <tr v-for=\"(color, colorIndex) in colors\" :key=\"'color2-' + color\">\n                      <td>{{ color }}</td>\n                      <td v-for=\"hole in holes.slice(9, 18)\" :key=\"'hole2-' + hole.holeNumber\">\n                        <!-- <input type=\"number\" v-model=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" /> -->\n                        <!-- 24.12.13 수정 - type number - text 로 변경 -->\n                        <input type=\"text\" v-model=\"hole.teeBoxes[colorIndex].distance\" placeholder=\"거리\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" @input=\"(event) => validateNumber(event, `hole.teeBoxes[${colorIndex}].distance`)\"  />\n                      </td>\n                    </tr>\n                    <!-- PAR Row -->\n                    <tr>\n                      <td class=\"pretendard-regular-normal-mine-shaft-18px\">PAR</td>\n                      <td v-for=\"hole in holes.slice(9, 18)\" :key=\"'par2-' + hole.holeNumber\">\n                        <!-- <input type=\"number\" v-model.number=\"hole.teeBoxes[0].par\" placeholder=\"PAR\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" /> -->\n                        <!-- 24.12.13 수정 - type number - text 로 변경 -->\n                        <input type=\"text\" v-model=\"hole.teeBoxes[0].par\" placeholder=\"PAR\"\n                          class=\"pretendard-regular-normal-mountain-mist-16px\" @input=\"(event) => validateNumber(event, 'hole.teeBoxes[0].par')\"  />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"pretendard-regular-normal-mine-shaft-18px\">MAP</td>\n                      <td v-for=\"(hole, index) in holes.slice(9, 18)\" :key=\"'map2-' + index\">\n                        <div class=\"file-upload-container\" @click=\"triggerFileInput(index + 9)\">\n                          <!-- 미리보기 이미지 -->\n                          <img v-if=\"selectedFiles[index + 9]\" :src=\"selectedFiles[index + 9]\" alt=\"map preview\" />\n                          <!-- <img\n                            v-else-if=\"hole.teeBoxes[0].mapImage\"\n                                :src=\"hole.teeBoxes[0].mapImage || '../../../img/lets-icons_img-box-light.png'\" \n                            alt=\"uploaded map\"\n                          /> -->\n                          <!-- <img v-else-if=\"hole.teeBoxes[0].mapImage\" :src=\"hole.teeBoxes[0].mapImage\" alt=\"uploaded map\" /> -->\n                          <img v-else :src=\"hole.teeBoxes[0].mapImage &&\n                            hole.teeBoxes[0].mapImage !== 'string'\n                            ? hole.teeBoxes[0].mapImage\n                            : defaultMapImage\n                            \" alt=\"map\" />\n                        </div>\n                        <input type=\"file\" ref=\"fileInputs\" @change=\"(event) => {\n                          handlePreview(event, index, 9);\n                          onFileSelected(event, index, 9);\n                        }\n                          \" style=\"display: none\" class=\"pretendard-regular-normal-mountain-mist-16px\" />\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"course-rules\" class=\"pretendard-regular-normal-mine-shaft-18px\">규칙</label>\n              <textarea id=\"course-rules\" v-model=\"rules\" placeholder=\"규칙을 입력해주세요\"\n                class=\"pretendard-regular-normal-mountain-mist-16px\"></textarea>\n            </div>\n            <!-- Image Upload -->\n            <div class=\"form-group\">\n              <label for=\"course-image\" class=\"pretendard-regular-normal-mine-shaft-18px\">대표 이미지</label>\n              <!-- <input type=\"file\" id=\"course-image\" @change=\"onImageChange\" -->\n              <!-- 24.12.13 수정 - 미리보기 나오도록 수정 -->\n              <div class=\"main-img-align\">\n                <input type=\"file\" id=\"course-image\" @change=\"(event) => {\n                  mainImagePreview(event);\n                  onImageChange(event);\n                }\" class=\"pretendard-regular-normal-mountain-mist-16px\" />\n                <div class=\"image-preview\">\n                  <!-- <img :src=\"mainImage\" alt=\"Preview\" /> -->\n                  <!-- 24.12.13 수정 - 미리보기 -->\n                  <img :src=\"mainImage || defaultMapImage\" alt=\"Preview\" />\n                </div>\n              </div>\n            </div>\n\n            <!-- Submit Button -->\n            <div class=\"button-group\">\n              <button class=\"cancel-btn pretendard-medium-white-18px\" @click=\"goToList\">취소하기</button>\n              <button class=\"confirm-btn pretendard-medium-white-18px\"\n                @click=\"isEdit ? updateCourse() : postCourseMg()\">\n                {{ isEdit ? \"코스 수정\" : \"코스등록\" }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from \"./AdminHeader.vue\";\nimport AdminNavbar from \"./AdminNavbar.vue\";\nimport { adminStore } from \"@/store/adminStore\"; // API 호출\nimport axios from \"axios\";\n\nexport default {\n  name: \"AdminCourseManagementWrite\",\n  components: {\n    AdminHeader,\n    AdminNavbar,\n  },\n  data() {\n    return {\n      selectedFiles: Array(18).fill(null),\n      courseName: \"\",\n      region: \"\",\n      totalDistance: 0,\n      defaultMapImage: require(\"../../../img/lets-icons_img-box-light.png\"),\n      difficulty: \"\",\n      maxPeople: 0,\n      imageUrl: \"\",\n      rules: \"\",\n      mainImage: \"\",\n      // mainImagePreview: \"\",\n      isEdit: false,\n      colors: [\"Black\"],\n      ranks: [\n        { label: \"등급1\", placeholder: \"70타\" },\n        { label: \"등급2\", placeholder: \"70타\" },\n        { label: \"등급3\", placeholder: \"70타\" },\n        { label: \"등급4\", placeholder: \"70타\" },\n        { label: \"등급5\", placeholder: \"70타\" },\n        { label: \"등급6\", placeholder: \"70타\" },\n      ],\n\n      rankValues: [70, 70, 70, 70, 70, 70],\n      // Holes structure with 18 holes, each containing 5 teeBoxes with different colors\n      holes: Array.from({ length: 18 }, (_, i) => ({\n        holeNumber: i + 1,\n        par: \"\", // 기본 PAR 값 (필요에 따라 수정 가능)\n        teeBoxes: [\n          {\n            color: \"Black\",\n            distance: \"\",\n            par: \"\",\n            mapImage: \"string\",\n          },\n        ],\n      })),\n    };\n  },\n  mounted() {\n    this.id = this.$route.query.id; // FAQ ID 가져오기\n    this.isEdit = this.$route.query.isEdit === \"true\"; // 수정 여부 확인\n    if (this.isEdit) {\n      this.getCourseData(); // 수정 모드일 경우 기존 데이터를 가져옴\n    }\n  },\n  methods: {\n    // 24.12.13 수정 - 추가\n    validateNumber(event, modelPath) {\n      const input = event.target.value;\n      const isValid = /^\\d*$/.test(input); // 숫자인지 검사\n\n      if (!isValid) {\n        alert(\"숫자만 입력 가능합니다.\"); // 경고 메시지\n        event.target.value = input.replace(/[^0-9]/g, ''); // 숫자만 남기기\n      }\n\n      // modelPath를 동적으로 업데이트\n      this.$set(this, modelPath, Number(event.target.value || 0)); // 빈 값은 0으로 처리\n    },\n    // 24.12.13 수정 - 추가\n    goToList() {\n      this.$router.push({ path: \"/admincourse-management\" })\n    },\n    // 24.12.13 수정 - 대표사진 미리보기 업데이트\n    mainImagePreview(event) {\n      const file = event.target.files[0];\n      if (file) {\n        // FileReader를 사용하여 미리보기 이미지 URL을 생성\n        this.mainImage = URL.createObjectURL(file);\n      }\n    },\n    triggerFileInput(index) {\n      this.$refs.fileInputs[index].click();\n    },\n    handlePreview(event, index, offset = 0) {\n      const file = event.target.files[0];\n      if (file) {\n        const actualIndex = index + offset;\n        this.$set(this.selectedFiles, actualIndex, URL.createObjectURL(file));\n      }\n    },\n    async onFileSelected(event, index, offset = 0) {\n      const file = event.target.files[0];\n      if (file) {\n        const actualIndex = index + offset;\n        // 프리사인 URL 요청 파라미터 설정\n        const params = {\n          fileName: file.name,\n          fileSize: file.size,\n          mimeType: file.type,\n        };\n\n        // 프리사인 URL 생성 및 S3 업로드\n        const response = await adminStore.postTask(\n          \"v1/files/presigned-url\",\n          params\n        );\n        console.log(\"response : : : : :\" + JSON.stringify(response));\n\n        const url = response[response.length - 1]?.presignedUrl;\n        console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n        const urlName = new URL(url).origin + new URL(url).pathname;\n        console.log(\"response.file.path : : : : :\" + JSON.stringify(urlName));\n\n        // S3 URL 저장\n        this.holes[actualIndex].teeBoxes[0].mapImage =\n          new URL(url).origin + new URL(url).pathname;\n        console.log(\n          \"this.holes[actualIndex].teeBoxes[0].mapImage : : : \",\n          this.holes[actualIndex].teeBoxes[0].mapImage\n        );\n        try {\n          // S3에 파일 업로드\n          await axios.put(url, file, {\n            headers: {\n              \"Content-Type\": file.type,\n            },\n          });\n          console.log(\"File uploaded successfully!\");\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n        }\n      }\n    },\n    async onImageChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await adminStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response[response.length - 1]?.presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    // async\n    postCourseMg() {\n      console.log(\"Submitted rank values:\", this.holes);\n\n      // 총 작성된 홀의 개수를 계산\n      const totalHoles = this.holes.filter(\n        (hole) =>\n          hole.par !== \"\" || hole.teeBoxes.some((box) => box.distance !== \"\")\n      ).length;\n\n      // 최소 홀 개수 검증\n      if (totalHoles < 9) {\n        alert(\"홀 9개 모두를 작성해주세요.\");\n        return;\n      } else if (totalHoles > 9 && totalHoles < 18) {\n        alert(\"홀 18개 모두를 작성해주세요.\");\n        return;\n      }\n\n      // Post할 파라미터 생성\n      const params = {\n        courseName: this.courseName,\n        region: this.region,\n        totalDistance: parseFloat(this.totalDistance) || 0,\n        difficulty: this.difficulty,\n        maxPeople:\n          this.maxPeople === \"no-limit\" ? -1 : parseInt(this.maxPeople) || 0,\n        rules: this.rules,\n        mainImage: this.imageUrl,\n        averageScores: this.rankValues.map((value) => Number(value)),\n        holes: this.holes\n          .map((hole) => {\n            // `teeBoxes`에서 distance가 null 또는 빈 문자열인 항목을 제거\n            const validTeeBoxes = hole.teeBoxes.filter(\n              (teeBox) => teeBox.distance !== null && teeBox.distance !== \"\"\n            );\n\n            // 유효한 `teeBoxes`가 없으면 null 반환\n            if (validTeeBoxes.length === 0) {\n              return null;\n            }\n\n            // 유효한 데이터를 반환\n            return {\n              holeNumber: hole.holeNumber,\n              teeBoxes: validTeeBoxes.map((teeBox) => ({\n                color: teeBox.color,\n                distance: parseInt(teeBox.distance) || 0,\n                par: parseInt(teeBox.par),\n                mapImage: teeBox.mapImage,\n              })),\n            };\n          })\n          .filter((hole) => hole !== null), // `null` 값 제거\n      };\n\n      console.log(\"params:\", params);\n      console.log(\"this.selectedFiles:\", this.selectedFiles);\n\n      try {\n        const res = adminStore.postTask(\"course-management\", params);\n        console.log(\"API Response:\", res);\n\n        alert(\"코스 정보가 정상적으로 등록이 되었습니다.\");\n        this.$router.replace(\"/admincourse-management\");\n      } catch (error) {\n        console.error(\"Error submitting course:\", error);\n        alert(\"Failed to submit course. Please try again.\");\n      }\n    },\n    async getCourseData() {\n      try {\n        const response = await adminStore.getTask(\n          `course-management/${this.id}`\n        );\n        this.courseData = response;\n        console.log(\"불러온 코스 데이터:\", this.courseData);\n\n        // 다른 데이터 설정\n        this.holeInfo = `${this.courseData.holes.length || 0}홀`;\n        this.region = this.courseData.region || \"\";\n        this.rules = this.courseData.rules || \"\";\n        this.totalDistance = this.courseData.totalDistance || 0;\n        this.maxPeople = this.courseData.maxPeople || 0;\n        this.courseName = this.courseData.courseName || \"\";\n        this.mainImage = this.courseData.mainImage || \"\";\n\n        // holes 데이터를 UI에 맞게 설정\n        this.holes = Array.from({ length: 18 }, (_, i) => {\n          const holeData = this.courseData.holes?.find(\n            (hole) => hole.holeNumber === i + 1\n          );\n          return {\n            holeNumber: i + 1,\n            par: holeData?.par ?? \"\", // 없으면 빈 문자열 유지\n            teeBoxes: holeData?.teeBoxes.map((teeBox) => ({\n              color: teeBox.color,\n              par: teeBox.par ?? \"\", // 없으면 빈 문자열 유지\n              distance: teeBox.distance ?? \"\", // 없으면 빈 문자열 유지\n              mapImage: teeBox.mapImage ?? this.defaultMapImage, // 기본 이미지 유지\n            })) || [\n                {\n                  color: \"Black\",\n                  distance: \"\",\n                  par: \"\",\n                  mapImage: this.defaultMapImage, // 기본 이미지 유지\n                },\n              ],\n          };\n        });\n\n        this.difficulty = this.courseData.difficulty || \"\";\n        this.rankValues = this.courseData.averageScores || [70, 70, 70, 70, 70, 70];\n\n      } catch (error) {\n        console.error(\"코스 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    }\n    ,\n\n    updateCourse() {\n      const totalHoles = this.holes.filter(\n        (hole) =>\n          hole.par !== \"\" || hole.teeBoxes.some((box) => box.distance !== \"\")\n      ).length;\n\n      // 최소 홀 개수 검증\n      if (totalHoles < 9) {\n        alert(\"홀 9개 모두를 작성해주세요.\");\n        return;\n      } else if (totalHoles > 9 && totalHoles < 18) {\n        alert(\"홀 18개 모두를 작성해주세요.\");\n        return;\n      }\n      const updatedMainImage = this.imageUrl || this.mainImage;\n      const params = {\n        courseName: this.courseName,\n        region: this.region,\n        totalDistance: parseFloat(this.totalDistance) || 0,\n        difficulty: this.difficulty,\n        maxPeople:\n          this.maxPeople === \"no-limit\" ? -1 : parseInt(this.maxPeople) || 0,\n        rules: this.rules,\n        mainImage: updatedMainImage,\n        averageScores: this.rankValues.map((value) => Number(value)),\n        holes: this.holes.map((hole) => ({\n          holeNumber: hole.holeNumber,\n          teeBoxes: hole.teeBoxes.map((teeBox) => ({\n            color: teeBox.color,\n            distance: parseInt(teeBox.distance) || 0,\n            par: parseInt(teeBox.par),\n            mapImage: teeBox.mapImage,\n          })),\n        })),\n      };\n\n      console.log(\"params:\", params);\n\n      try {\n        const res = adminStore.updateTask(\n          `course-management/${this.id}`,\n          params\n        );\n        console.log(\"API Response:\", res);\n        // if(res.hole.length > 1){\n        alert(\"코스 정보가 정상적으로 수정이 되었습니다.\");\n        this.$router.replace(\"/admincourse-management\");\n        // }else{\n        //   alert('정보를 다시 입력해 주세요.');\n        // }\n      } catch (error) {\n        console.error(\"Error submitting course:\", error);\n        alert(\"Failed to submit course. Please try again.\");\n        // this.$router.replace('/admincourse-management')\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.admin-management-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n}\n\n.wrapper {\n  flex-grow: 1;\n  padding: 30px;\n  gap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  width: 100%;\n  background-color: #fff;\n  padding: 24px 30px;\n  margin-bottom: 20px;\n}\n\n/* Form Section */\n.course-management-form {\n  background-color: #fff;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n}\n\n.form-group {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n/* 24.12.13 수정 */\n.form-group label,\n.rank-info label,\n.hole-details label {\n  /* width: 150px; */\n  width: 10%;\n  display: grid;\n  align-items: center;\n\n}\n\n/* 24.12.13 수정 */\n.form-group input {\n  /* flex-grow: 1; */\n  width: 90%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  height: 50px;\n}\n\n.form-group select {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  width: 250px;\n  height: 50px;\n}\n\n.form-group textarea {\n  flex-grow: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  /* 24.12.13 수정 - 추가  */\n  resize: none;\n  height: 120px;\n}\n\n/* 24.12.13 수정 */\n/* Rank Information Section */\n.rank-info {\n  display: flex;\n  align-items: center;\n  /* justify-content: space-between; */\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n\n/* 24.12.14 수정 */\n/* .rank-label {\n  margin-bottom: 20px;\n  width: 150px;\n} */\n\n.rank-container {\n  border: 1px solid #ddd;\n  padding: 20px;\n  display: flex;\n  width: 90%;\n  justify-content: space-between;\n  gap: 20px;\n  /* Adds spacing between the rank columns */\n}\n\n/* 24.12.13 수정 - 추가  */\n.rank-column {\n  /* display: flex;\n  text-align: center;\n  flex-direction: column;\n  align-items: center; */\n  display: grid;\n  justify-content: center;\n  justify-items: center;\n  align-items: center;\n  gap: 20px;\n}\n\n/* 24.12.13 수정 */\n.rank-column input {\n  /* width: 170px; */\n  width: 80%;\n  /* Adjust width as needed */\n  height: 48px;\n  text-align: center;\n  background-color: #f5f6f6;\n  border: 1px solid #ddd;\n}\n\n/* .rank-column .rank-label {\n  margin-bottom: 5px;\n  color: #555;\n} */\n\n/* 24.12.13 수정 */\n.course_name {\n  width: 90%;\n  padding: 20px;\n  border: 1px solid #ddd;\n}\n\n.course_name input {\n  width: 100%;\n}\n\n/* Hole Details Table */\n.hole-details {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n}\n\n/* \n.hole-details label {\n  white-space: nowrap;\n  margin-right: 90px;\n} */\n\n.hole-details table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\n\n/* 24.12.13 수정 - 추가*/\n.main-img-align {\n  width: 90%;\n  display: grid;\n  border: 1px solid #ddd;\n  gap: 10px;\n}\n\n/* 24.12.13 수정 - 추가 */\n.main-img-align input {\nborder: none;\n}\n\n/* 24.12.13 수정 - 추가 */\n.image-preview {\n  width: 100%;\n  padding: 0 10px;\n}\n/* 24.12.13 수정 */\n.image-preview img {\n  max-width: 100%;\n  max-height: 200px;\n  /* margin-left: 150px; */\n  display: block;\n}\n\n/* 24.12.13 수정 */\n.hole-details th,\n.hole-details td {\n  padding: 20px 10px;\n  border: 1px solid #ddd;\n  text-align: center;\n}\n\n/* 24.12.13 수정 */\n.hole-details th {\n  /* padding: 23.5px 40px; */\n  background-color: #f4f4f4;\n}\n\n.hole-details tr:nth-child(6) {\n  background-color: #f4f4f4;\n}\n\n.hole-details input {\n  width: 60px;\n  padding: 5px;\n  border: 1px solid #ddd;\n  text-align: center;\n  border-radius: 4px;\n}\n\n.course_name input {\n  width: 100%;\n  height: 50px;\n}\n\n.hole-details img {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 20px;\n}\n\n/* 24.12.13 수정 */\n.button-group button {\n  /* width: 470px; */\n  width: 49%;\n  height: 50px;\n  border: none;\n  margin: 0 auto;\n  color: #fff;\n  cursor: pointer;\n}\n\n.cancel-btn {\n  background-color: #a0a0a0;\n}\n\n.confirm-btn {\n  background-color: #184199;\n}\n\n.delete-btn {\n  background-color: #d30f1a;\n}\n</style>\n"]}]}