{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/SwingVideoEdit.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/SwingVideoEdit.vue","mtime":1734595430445},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IFhGb290ZXIgZnJvbSAiLi9YRm9vdGVyIjsKaW1wb3J0IHsgdGFza1N0b3JlIH0gZnJvbSAnQC9zdG9yZS90YXNrU3RvcmUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgU3dpbmdWaWRlb0RlbGV0ZU1vZGFsIGZyb20gIi4vU3dpbmdWaWRlb0RlbGV0ZU1vZGFsIjsgLy8gMjQuMTIuMTkgIOyImOyglSAtIOy2lOqwgAoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTd2luZ1ZpZGVvRWRpdCIsCiAgY29tcG9uZW50czogewogICAgSGVhZGVyLAogICAgUmpac1dpLAogICAgWEZvb3RlciwKICAgIFN3aW5nVmlkZW9EZWxldGVNb2RhbCwgLy8gMjQuMTIuMTkgIOyImOyglSAtIOy2lOqwgAogIH0sCiAgcHJvcHM6IFsickpac1dJUHJvcHMiXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICLrjZTrr7gg7KCc66qp7J6F64uI64ukIiwKICAgICAgY29udGVudDogIuydtOqzs+ydgCDrjZTrr7gg64K07Jqp7J6F64uI64ukLiDsnbQg7YWN7Iqk7Yq464qUIOuCtOyaqeydhCDtkZzsi5ztlZjquLAg7JyE7ZW0IOyCrOyaqeuQmOuKlCDrjZTrr7gg7YWN7Iqk7Yq47J6F64uI64ukLiIsCiAgICAgIHNlbGVjdGVkRmlsZU5hbWU6IG51bGwsCiAgICAgIHZpZGVvVXJsOiAiIiwKICAgICAgZmlsZTogbnVsbCwKICAgICAgLy8gcmVjZWl2ZUl0ZW0gOiBudWxsCiAgICAgIGlzRGVsZXRlTW9kYWxWaXNpYmxlOiBmYWxzZSwgLy8gMjQuMTIuMTkg7IiY7KCVIC0g7LaU6rCAIAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCBpdGVtID0gdGhpcy4kcm91dGUucGFyYW1zLml0ZW1EYXRhOwogICAgaWYgKGl0ZW0pIHsKICAgICAgLy8gdGhpcy5yZWNlaXZlSXRlbSA9ICBpdGVtCiAgICAgIHRoaXMudGl0bGUgPSBpdGVtLnRpdGxlOwogICAgICB0aGlzLmNvbnRlbnQgPSBpdGVtLmRlc2NyaXB0aW9uOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZU5hbWUgPSBpdGVtLnZpZGVvVXJsLnNwbGl0KCcvJykucG9wKCk7OwogICAgICBjb25zb2xlLmxvZygi7KCE64us67Cb7J2AIOqwneyytDoiLCBpdGVtKTsKICAgICAgLy8g7Jes6riw7IScIGBpdGVtYCDqsJ3ssrTrpbwg7IKs7Jqp7ZWY7JesIO2VhOyalO2VnCDroZzsp4HsnYQg6rWs7ZiE7ZWp64uI64ukLgogICAgfSBlbHNlIHsKICAgICAgY29uc29sZS53YXJuKCLsoITri6zrsJvsnYAg6rCd7LK06rCAIOyXhuyKteuLiOuLpC4iKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIDI0LjEyLjE5IOyImOyglSAtIOy2lOqwgCAKICAgIG9wZW5EZWxldGVNb2RhbCgpIHsKICAgICAgdGhpcy5pc0RlbGV0ZU1vZGFsVmlzaWJsZSA9IHRydWU7IAogICAgfSwKICAgICAvLyAyNC4xMi4xOSDsiJjsoJUgLSDstpTqsIAgCiAgICAgY2xvc2VEZWxldGVNb2RhbCgpIHsKICAgICAgdGhpcy5pc0RlbGV0ZU1vZGFsVmlzaWJsZSA9IGZhbHNlOyAvLyDrqqjri6wg64ur6riwCiAgICAgIHRoaXMudmlkZW9Ub0RlbGV0ZSA9IG51bGw7IC8vIOyEoO2DneuQnCDruYTrlJTsmKQg7LSI6riw7ZmUCiAgICB9LAogICAgYXN5bmMgZWRpdFN3aW5nKCkgewogICAgICB0cnkgewogICAgICAgIGlmICh0aGlzLnZpZGVvVXJsID09PSAiIikgewogICAgICAgICAgdGhpcy52aWRlb1VybCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pdGVtRGF0YS52aWRlb1VybAogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnZpZGVvVXJsID0gdGhpcy52aWRlb1VybAogICAgICAgIH0KICAgICAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgICAgICAidGl0bGUiOiB0aGlzLnRpdGxlLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogdGhpcy5jb250ZW50LAogICAgICAgICAgInZpZGVvVXJsIjogdGhpcy52aWRlb1VybCwKICAgICAgICAgIC8vICJ1c2VySWQiOiBwYXJzZUludCh0aGlzLiRyb3V0ZS5wYXJhbXMuaXRlbURhdGEuaWQpLAogICAgICAgIH0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5wdXRUYXNrKGBzd2luZy12aWRlb3MvJHt0aGlzLiRyb3V0ZS5wYXJhbXMuaXRlbURhdGEuaWR9YCwgcGFyYW1zKTsKICAgICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UgZGF0YTogIiwgcmVzcG9uc2UpOwogICAgICAgIGlmICghcmVzcG9uc2UgfHwgcmVzcG9uc2UgPT09IHVuZGVmaW5lZCkgewogICAgICAgICAgY29uc29sZS5sb2coIuydkeuLtSDrjbDsnbTthLDqsIAg7JeG7Iq164uI64ukLiIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhbGVydCgi7KCV7IOB7KCB7Jy866GcIOyImOyglSDrkJjsl4jsirXri4jri6QuIikKICAgICAgICAgIHRoaXMudG9Hb1N3aW5nTGlzdCgpCiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmxvZygiRVJST1IiLCBlcnIpCiAgICAgIH0KICAgIH0sCgogICAgYXN5bmMgZGVsZXRlU3dpbmcoKSB7CgogICAgICB0cnkgewogICAgICAgIC8vIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLmdldFNlbGVjdFRhc2tzKGBzd2luZy12aWRlb3MvJHtsb2dpbkluZm8uaWR9YCk7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUuZGVsZXRlVGFzayhgc3dpbmctdmlkZW9zLyR7dGhpcy4kcm91dGUucGFyYW1zLml0ZW1EYXRhLmlkfWApOwogICAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZSBkYXRhOiAiLCByZXNwb25zZSk7CiAgICAgICAgaWYgKCFyZXNwb25zZSB8fCByZXNwb25zZSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi7J2R64u1IOuNsOydtO2EsOqwgCDsl4bsirXri4jri6QuIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gYWxlcnQoIuygleyDgeyggeycvOuhnCDsgq3soJzqsIAg65CY7JeI7Iq164uI64ukLiIpCiAgICAgICAgICAvLyAyNC4xMi4xOSDsiJjsoJUgLSDstpTqsIAKICAgICAgICAgIHRoaXMuY2xvc2VEZWxldGVNb2RhbCgpOyAvLyDrqqjri6wg64ur6riwCiAgICAgICAgICB0aGlzLnRvR29Td2luZ0xpc3QoKQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coIkVSUk9SIiwgZXJyKQogICAgICB9CgoKCiAgICB9LAogICAgYXN5bmMgb25GaWxlQ2hhbmdlKGV2ZW50KSB7CiAgICAgIGNvbnNvbGUubG9nKCLthrXsi6Ag7ZWY64qUIOykkSEhISIpOwogICAgICAvL2NvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIm1hbmFnZXJUb2tlbiIpOwogICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICB0aGlzLmZpbGUgPSBmaWxlOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnNpemUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLm5hbWUpOwogICAgICBjb25zb2xlLmxvZyhmaWxlLnR5cGUpOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZU5hbWUgPSBmaWxlLm5hbWUKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIGZpbGVOYW1lOiBmaWxlLm5hbWUsCiAgICAgICAgZmlsZVNpemU6IGZpbGUuc2l6ZSwKICAgICAgICBtaW1lVHlwZTogZmlsZS50eXBlLAogICAgICB9OwogICAgICBjb25zb2xlLmxvZygi7Ya17IugIO2VmOuKlCDspJEhISEiICsgSlNPTi5zdHJpbmdpZnkodGhpcy5maWxlKSk7CgogICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5wb3N0VGFzaygKICAgICAgICAidjEvZmlsZXMvcHJlc2lnbmVkLXVybCIsCiAgICAgICAgcGFyYW1zCiAgICAgICk7CiAgICAgIGNvbnNvbGUubG9nKCJyZXNwb25zZSA6IDogOiA6IDoiICsgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpKTsKCiAgICAgIGNvbnN0IHVybCA9IHJlc3BvbnNlWzBdLnZpZGVvVXJsOwogICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UuZmlsZS5wYXRoIDogOiA6IDogOiIgKyBKU09OLnN0cmluZ2lmeSh1cmwpKTsKCiAgICAgIHRoaXMudmlkZW9VcmwgPSBuZXcgVVJMKHVybCkub3JpZ2luICsgbmV3IFVSTCh1cmwpLnBhdGhuYW1lOwogICAgICBjb25zb2xlLmxvZygidmlkZW9VcmwgOiA6OiA6IDogIiwgdGhpcy52aWRlb1VybCkKICAgICAgdHJ5IHsKICAgICAgICAvLyDtjIzsnbwg7JeF66Gc65OcCiAgICAgICAgLy8gMi4g7ZSE66as7IKs7J24IFVSTOydhCDsgqzsmqntlbQgUzPsl5Ag7YyM7J287J2EIOyXheuhnOuTnO2VqeuLiOuLpC4KICAgICAgICBhd2FpdCBheGlvcy5wdXQodXJsLCBmaWxlLCB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiBmaWxlLnR5cGUsCiAgICAgICAgICAgIC8vICdDb250ZW50LUxlbmd0aCc6IGZpbGUuc2l6ZQogICAgICAgICAgfSwKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZygiRmlsZSB1cGxvYWRlZCBzdWNjZXNzZnVsbHkhIik7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigiRXJyb3IgdXBsb2FkaW5nIGZpbGU6IiwgZXJyb3IpOwogICAgICB9CiAgICB9LAoKICAgIC8vIDI0LjExLjExIOyImOyglSAtIOy3qOyGjOyLnCDrqqnroZ3snLzroZwg6rCA6riwCiAgICB0b0dvU3dpbmdMaXN0KCkgewogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7IHBhdGg6ICIvc3dpbmd2aWRlby1saXN0IiB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["SwingVideoEdit.vue"],"names":[],"mappings":";AAoEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SwingVideoEdit.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"swingwrite-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">스윙영상</div>\n      <div class=\"frame-7782-1\">\n        <div class=\"frame-7857-7\">\n          <div class=\"title-box\">\n            <!-- 24.11.11 수정 - input,textarea font 수정 -->\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              제목\n            </div>\n            <input class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\" v-model=\"title\"\n              placeholder=\"제목을 입력하세요\" />\n          </div>\n          <div class=\"content-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              내용\n            </div>\n            <textarea class=\"frame-7281-9 pretendard-regular-normal-mine-shaft-16px\" v-model=\"content\"\n              placeholder=\"내용을 입력하세요\"></textarea>\n          </div>\n          <div class=\"title-box\">\n            <div class=\"content-title valign-text-middle pretendard-medium-black-18px\">\n              파일\n            </div>\n\n            <div class=\"frame-7487-4\">\n              <label for=\"file-upload\" class=\"file-upload-label\">\n                <img class=\"fluentfolder-20-filled-4\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                  alt=\"fluent:folder-20-filled\" />\n              </label>\n             <!-- 24.12.19 수정 - v-if 추가  -->\n             <input v-if=\"!selectedFileName\" type=\"file\" id=\"photos\" class=\"pretendard-regular-normal-mine-shaft-18px\"\n                multiple @change=\"onFileChange\" />\n              <div class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\">\n                {{ selectedFileName }}\n              </div>\n            </div>\n\n          </div>\n          <div class=\"frame-7859-3\">\n            <!-- 24.11.11 수정 - 취소시 목록으로 가도록 수정 -->\n            <!-- 24.12.19 수정 - div 삭제, 폰트 수정 -->\n            <button class=\"cancel-btn pretendard-medium-white-18px\" @click=\"toGoSwingList\">\n              취소하기\n            </button>\n            <!-- 24.12.19 수정 - div 삭제, 폰트 수정, click 이벤트 변경  -->\n            <button class=\"delete-btn pretendard-medium-white-18px\" @click=\"openDeleteModal()\">\n              삭제하기\n            </button>\n            <!-- 24.12.19 수정 - class 명 변경, div 삭제, 폰트 수정  -->\n            <button class=\"submit-btn pretendard-medium-white-18px\" @click=\"editSwing()\">\n              수정하기\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- 24.12.19 수정 - 추가  -->\n      <SwingVideoDeleteModal v-if=\"isDeleteModalVisible\" @close=\"closeDeleteModal\" @confirm=\"deleteSwing\" />\n      <x-footer />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from '@/store/taskStore';\nimport axios from 'axios';\nimport SwingVideoDeleteModal from \"./SwingVideoDeleteModal\"; // 24.12.19  수정 - 추가\n\nexport default {\n  name: \"SwingVideoEdit\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n    SwingVideoDeleteModal, // 24.12.19  수정 - 추가\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      title: \"더미 제목입니다\",\n      content: \"이곳은 더미 내용입니다. 이 텍스트는 내용을 표시하기 위해 사용되는 더미 텍스트입니다.\",\n      selectedFileName: null,\n      videoUrl: \"\",\n      file: null,\n      // receiveItem : null\n      isDeleteModalVisible: false, // 24.12.19 수정 - 추가 \n    };\n  },\n  mounted() {\n    const item = this.$route.params.itemData;\n    if (item) {\n      // this.receiveItem =  item\n      this.title = item.title;\n      this.content = item.description;\n      this.selectedFileName = item.videoUrl.split('/').pop();;\n      console.log(\"전달받은 객체:\", item);\n      // 여기서 `item` 객체를 사용하여 필요한 로직을 구현합니다.\n    } else {\n      console.warn(\"전달받은 객체가 없습니다.\");\n    }\n  },\n  methods: {\n    // 24.12.19 수정 - 추가 \n    openDeleteModal() {\n      this.isDeleteModalVisible = true; \n    },\n     // 24.12.19 수정 - 추가 \n     closeDeleteModal() {\n      this.isDeleteModalVisible = false; // 모달 닫기\n      this.videoToDelete = null; // 선택된 비디오 초기화\n    },\n    async editSwing() {\n      try {\n        if (this.videoUrl === \"\") {\n          this.videoUrl = this.$route.params.itemData.videoUrl\n        } else {\n          this.videoUrl = this.videoUrl\n        }\n        const params = {\n          \"title\": this.title,\n          \"description\": this.content,\n          \"videoUrl\": this.videoUrl,\n          // \"userId\": parseInt(this.$route.params.itemData.id),\n        }\n        const response = await taskStore.putTask(`swing-videos/${this.$route.params.itemData.id}`, params);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          alert(\"정상적으로 수정 되었습니다.\")\n          this.toGoSwingList()\n        }\n      } catch (err) {\n        console.log(\"ERROR\", err)\n      }\n    },\n\n    async deleteSwing() {\n\n      try {\n        // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n        const response = await taskStore.deleteTask(`swing-videos/${this.$route.params.itemData.id}`);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n            // alert(\"정상적으로 삭제가 되었습니다.\")\n          // 24.12.19 수정 - 추가\n          this.closeDeleteModal(); // 모달 닫기\n          this.toGoSwingList()\n        }\n      } catch (err) {\n        console.log(\"ERROR\", err)\n      }\n\n\n\n    },\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      //const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      this.selectedFileName = file.name\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await taskStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response[0].videoUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n\n      this.videoUrl = new URL(url).origin + new URL(url).pathname;\n      console.log(\"videoUrl : :: : : \", this.videoUrl)\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n\n    // 24.11.11 수정 - 취소시 목록으로 가기\n    toGoSwingList() {\n      this.$router.replace({ path: \"/swingvideo-list\" });\n    },\n  },\n};\n</script>\n\n<style scoped src=\"@/style/community/swingvideoedit.css\"></style>\n"]}]}