{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/CourseDetail.vue?vue&type=style&index=0&id=5eb15158&prod&scroped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/CourseDetail.vue","mtime":1732527257119},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uby1pbWFnZS10ZXh0IHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICM5OTk7IC8qIOyVhOuemCDsvZjthZDsuKDsmYAg6rCE6rKpIOy2lOqwgCAqLwogIGhlaWdodDogMjAwcHg7IC8qIOydtOuvuOyngCDsmIHsl60g7YGs6riw7JmAIOuPmeydvO2VmOqyjCAqLwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQo="},{"version":3,"sources":["CourseDetail.vue"],"names":[],"mappings":";AAufA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CourseDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"coursedetails-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">코스</div>\n      <div class=\"course-detail-content\">\n        <div class=\"course-image-box\">\n          <img\n            class=\"course-img\"\n            :src=\"mainImage\"\n            alt=\"course image\"\n          />\n        </div>\n\n        <div class=\"course-detail-info\">\n          <div class=\"course-detail-head\">\n            <div class=\"course-detail-head-first\">\n              <div\n                class=\"course-detail-name valign-text-middle pretendard-bold-log-cabin-30px\"\n              >\n                {{ courseName }}\n              </div>\n              <div\n                class=\"course-detail-region pretendard-medium-granite-gray-14px\"\n              >\n                {{ region }}\n              </div>\n            </div>\n            <div\n              class=\"course-detail-head-end pretendard-regular-normal-granite-gray-16px\"\n            >\n              <div class=\"course-detail-head-end-first\">\n                <div>{{ holeInfo }}</div>\n                <span>l</span>\n                <div>{{ courseDetails }}</div>\n                <span class=\"course-detail-slash\">l</span>\n              </div>\n              <div class=\"course-detail-head-end-difficulty\">\n                <div class=\"course-info-font\">코스난이도</div>\n                <!-- 별점 표시 -->\n                <div class=\"course-rating-stars\">\n                  <span\n                    v-for=\"star in 5\"\n                    :key=\"star\"\n                    :class=\"getStarClass(difficulty, star)\"\n                  >\n                    ★\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"course-detail-body\">\n            <div class=\"average-font pretendard-bold-black-24px\">평균타수</div>\n            <div class=\"average-level\">\n              <div\n                v-for=\"(ranking, index) in rankingData\"\n                :key=\"index\"\n                class=\"average-level-card\"\n              >\n                <div class=\"average-level-align\">\n                  <div class=\"grade-circle\">\n                    <img\n                      class=\"grade-circle-image\"\n                      src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-33602-6@2x.png\"\n                      alt=\"Group 33602\"\n                    />\n                    <div\n                      class=\"grade-font pretendard-extra-extra-bold-white-20px\"\n                    >\n                      {{ ranking.grade }}등급\n                    </div>\n                  </div>\n                  <div\n                    class=\"ranking-score-font pretendard-semi-bold-black-20px\"\n                  >\n                    {{ ranking.score }}타\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"course-detail-hole-detail-info\">\n  <div class=\"hole-detail-font pretendard-bold-black-24px\">\n    홀 세부정보\n  </div>\n\n  <!-- 아웃코스 렌더링 -->\n <!-- 아웃코스 렌더링 -->\n<div\n  class=\"course-detail-hole-detail-info-box\"\n  v-if=\"filteredCourseInfo.holesOut.length > 0\"\n>\n  <div class=\"course-detail-hole-detail-info-box-align\">\n    <div class=\"hole-detail-info-box-wrapper\">\n      <div class=\"hole-detail-info-box-head\">\n        <div\n          class=\"course-detail-font valign-text-middle pretendard-semi-bold-log-cabin-18px\"\n        >\n          아웃코스\n        </div>\n        <div\n          class=\"course-detail-meter-font valign-text-middle pretendard-regular-normal-granite-gray-14px\"\n        >\n          단위meter\n        </div>\n      </div>\n      <div class=\"table-detail-wrapper\">\n        <div class=\"table-detail-align\">\n          <table class=\"hole-detail-info-table\">\n            <thead>\n              <tr class=\"hole-col pretendard-regular-normal-mine-shaft-18px\">\n                <th>Hole</th>\n                <th\n                  v-for=\"(hole, index) in filteredCourseInfo.holesOut\"\n                  :key=\"'out-hole-' + index\"\n                >\n                  {{ hole }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class=\"black-col pretendard-regular-normal-mine-shaft-18px\">\n                <td>Course</td>\n                <td\n                  v-for=\"(black, index) in filteredCourseInfo.blackOut\"\n                  :key=\"'out-black-' + index\"\n                >\n                  {{ black }}\n                </td>\n              </tr>\n              <tr class=\"par-col pretendard-bold-mine-shaft-18px\">\n                <td>PAR</td>\n                <td\n                  v-for=\"(par, index) in filteredCourseInfo.parsOut\"\n                  :key=\"'out-par-' + index\"\n                >\n                  {{ par }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"hole-detail-image-box\">\n    <!-- 아웃코스 이미지 슬라이더 -->\n    <div\n      class=\"hole-detail-image-box-left-box\"\n      @click=\"prevOutImage\"\n    >\n      <img\n        class=\"hole-detail-image-box-left-arrow\"\n        src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/ep-arrow-left-4.svg\"\n        alt=\"ep:arrow-left\"\n      />\n    </div>\n    <div class=\"hole-detail-image\">\n        <div v-if=\"currentOutImage !== '이미지가 없습니다'\">\n          <img\n            class=\"course-hole-detail-image\"\n            :src=\"currentOutImage\"\n            alt=\"Out course map\"\n          />\n        </div>\n        <div v-else class=\"no-image-text pretendard-semi-bold-granite-gray-18px\">\n          {{ currentOutImage }}\n        </div>\n        <div class=\"hole-detail-address pretendard-semi-bold-log-cabin-18px\">\n          {{ courseInfo.holesOut[outCurrentIndex] }} HOLE. {{ courseInfo.parsOut[outCurrentIndex] }} PAR\n        </div>\n      </div>\n      <div\n        class=\"hole-detail-image-box-right-box\"\n        @click=\"nextOutImage\"\n      >\n        <img\n          class=\"hole-detail-image-box-right-arrow\"\n          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/ep-arrow-left-5.svg\"\n          alt=\"ep:arrow-right\"\n        />\n      </div>\n  </div>\n</div>\n\n<!-- 인코스 렌더링 -->\n<div\n  class=\"course-detail-hole-detail-info-box\"\n  v-if=\"filteredCourseInfo.holesIn.length > 0\"\n>\n  <div class=\"course-detail-hole-detail-info-box-align\">\n    <div class=\"hole-detail-info-box-wrapper\">\n      <div class=\"hole-detail-info-box-head\">\n        <div\n          class=\"course-detail-font valign-text-middle pretendard-semi-bold-log-cabin-18px\"\n        >\n          인코스\n        </div>\n        <div\n          class=\"course-detail-meter-font valign-text-middle pretendard-regular-normal-granite-gray-14px\"\n        >\n          단위meter\n        </div>\n      </div>\n      <div class=\"table-detail-align\">\n        <table class=\"hole-detail-info-tabl2\">\n          <thead>\n            <tr class=\"hole-col pretendard-regular-normal-mine-shaft-18px\">\n              <th>Hole</th>\n              <th\n                v-for=\"(hole, index) in filteredCourseInfo.holesIn\"\n                :key=\"'in-hole-' + index\"\n              >\n                {{ hole }}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr class=\"black-col pretendard-regular-normal-mine-shaft-18px\">\n              <td>Course</td>\n              <td\n                v-for=\"(black, index) in filteredCourseInfo.blackIn\"\n                :key=\"'in-black-' + index\"\n              >\n                {{ black }}\n              </td>\n            </tr>\n            <tr class=\"par-col pretendard-bold-mine-shaft-18px\">\n              <td>PAR</td>\n              <td\n                v-for=\"(par, index) in filteredCourseInfo.parsIn\"\n                :key=\"'in-par-' + index\"\n              >\n                {{ par }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  </div>\n  </div>\n  <div class=\"hole-detail-image-box\">\n      <!-- 인코스 이미지 슬라이더 -->\n      <div\n        class=\"hole-detail-image-box-left-box\"\n        @click=\"prevInImage\"\n      >\n        <img\n          class=\"hole-detail-image-box-left-arrow\"\n          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/ep-arrow-left-4.svg\"\n          alt=\"ep:arrow-left\"\n        />\n      </div>\n      <div class=\"hole-detail-image\">\n        <div v-if=\"currentInImage !== '이미지가 없습니다'\">\n          <img\n            class=\"course-hole-detail-image\"\n            :src=\"currentInImage\"\n            alt=\"In course map\"\n          />\n        </div>\n        <div v-else class=\"no-image-text pretendard-semi-bold-granite-gray-18px\">\n          {{ currentInImage }}\n        </div>\n        <div class=\"hole-detail-address pretendard-semi-bold-log-cabin-18px\">\n          {{ courseInfo.holesIn[inCurrentIndex] }} HOLE. {{ courseInfo.parsIn[inCurrentIndex] }} PAR\n        </div>\n      </div>\n      <div\n        class=\"hole-detail-image-box-right-box\"\n        @click=\"nextInImage\"\n      >\n        <img\n          class=\"hole-detail-image-box-right-arrow\"\n          src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/ep-arrow-left-5.svg\"\n          alt=\"ep:arrow-right\"\n        />\n      </div>\n    </div>\n  </div>\n  </div>\n\n        </div>\n      </div>\n      <XFooter />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport { taskStore } from \"@/store/taskStore\";\n\nexport default {\n  name: \"CourseDetail\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      courseId: null,\n      courseData: null,\n      courseName: \"\",\n      courseDetails: \"\",\n      mainImage: null,\n      region: \"\",\n      holeInfo: \"\",\n      difficulty: \"\",\n      rankingData: [],\n      courseInfo: {},\n      outCurrentIndex: 0,\n      inCurrentIndex: 0,\n      outCourseImages: [],\n      inCourseImages: [],\n    };\n  },\n  async created() {\n    // URL에서 courseId를 받아오기\n    this.courseId = this.$route.query.id;\n    console.log(\"받은 courseId:\", this.courseId); // 콘솔로 확인\n\n    if (this.courseId) {\n      await this.getCourseDetail(this.courseId);\n    }\n  },\n  computed: {\n    // currentOutPar() {\n    //   return this.courseInfo.parsOut[this.outCurrentIndex] || \"-\";\n    // },\n    // currentInPar() {\n    //   return this.courseInfo.parsIn[this.inCurrentIndex] || \"-\";\n    // },\n    filteredCourseInfo() {\n      const filteredOutIndexes = this.courseInfo.holesOut\n        .map((hole, index) => (this.courseInfo.blackOut[index] !== 0 ? index : null))\n        .filter((index) => index !== null);\n\n      const filteredInIndexes = this.courseInfo.holesIn\n        .map((hole, index) => (this.courseInfo.blackIn[index] !== 0 ? index : null))\n        .filter((index) => index !== null);\n\n      return {\n        holesOut: filteredOutIndexes.map((index) => this.courseInfo.holesOut[index]),\n        blackOut: filteredOutIndexes.map((index) => this.courseInfo.blackOut[index]),\n        parsOut: filteredOutIndexes.map((index) => this.courseInfo.parsOut[index]),\n        holesIn: filteredInIndexes.map((index) => this.courseInfo.holesIn[index]),\n        blackIn: filteredInIndexes.map((index) => this.courseInfo.blackIn[index]),\n        parsIn: filteredInIndexes.map((index) => this.courseInfo.parsIn[index]),\n      };\n    },\n    currentOutImage() {\n      // 아웃코스 이미지 로직\n      const image = this.outCourseImages[this.outCurrentIndex];\n      return image && image !== \"string\" ? image : \"이미지가 없습니다\";\n    },\n    currentInImage() {\n      // 인코스 이미지 로직\n      const image = this.inCourseImages[this.inCurrentIndex];\n      return image && image !== \"string\" ? image : \"이미지가 없습니다\";\n    },\n  },\n  methods: {\n    async getCourseDetail(courseId) {\n      try {\n        const response = await taskStore.getSelectTasks(\n          `course-management/${courseId}`\n        );\n        this.courseData = response;\n        console.log(\"불러온 코스 데이터:\", this.courseData);\n\n        // 다른 데이터 설정\n        this.holeInfo = `${this.courseData.holes.length}홀`;\n        this.region = this.courseData.region;\n        this.courseDetails = this.courseData.rules;\n        this.courseName = this.courseData.courseName;\n        this.mainImage = this.courseData.mainImage || \"\";\n\n        // outCourseImages와 inCourseImages를 data에 설정\n        this.outCourseImages = response.holes\n          .slice(0, 9)\n          .map((hole) => hole.teeBoxes[0]?.mapImage || this.image21);\n        this.inCourseImages = response.holes\n          .slice(9, 18)\n          .map((hole) => hole.teeBoxes[0]?.mapImage || this.image21);\n\n        this.difficulty = this.courseData.difficulty;\n        this.courseInfo = this.formatCourseInfo(this.courseData.holes);\n        this.rankingData = this.courseData.averageScores.map(\n          (score, index) => ({\n            score,\n            grade: index + 1,\n          })\n        );\n\n        // 평균 점수를 기준으로 등급 계산\n        this.rankingData.sort((a, b) => a.score - b.score);\n\n        this.rankingData.forEach((item, index) => {\n          item.grade = index + 1;\n        });\n      } catch (error) {\n        console.error(\"코스 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n\n    formatCourseInfo(holes) {\n      const courseInfo = {\n        holesOut: [],\n        holesIn: [],\n        blackOut: [],\n        blackIn: [],\n        whiteOut: [],\n        whiteIn: [],\n        yellowOut: [],\n        yellowIn: [],\n        redOut: [],\n        redIn: [],\n        parsOut: [],\n        parsIn: [],\n      };\n\n      holes.forEach((hole) => {\n        // 홀 번호에 따라 아웃코스와 인코스를 구분\n        const isOutCourse = hole.holeNumber <= 9;\n\n        const holesKey = isOutCourse ? \"holesOut\" : \"holesIn\";\n        const blackKey = isOutCourse ? \"blackOut\" : \"blackIn\";\n        const whiteKey = isOutCourse ? \"whiteOut\" : \"whiteIn\";\n        const yellowKey = isOutCourse ? \"yellowOut\" : \"yellowIn\";\n        const redKey = isOutCourse ? \"redOut\" : \"redIn\";\n        const parsKey = isOutCourse ? \"parsOut\" : \"parsIn\";\n\n        // 홀 번호 추가\n        courseInfo[holesKey].push(hole.holeNumber);\n\n        // 각 티 박스 정보를 배열에 추가\n        const blackTee = hole.teeBoxes.find((tee) => tee.color === \"Black\");\n        const whiteTee = hole.teeBoxes.find((tee) => tee.color === \"White\");\n        const yellowTee = hole.teeBoxes.find((tee) => tee.color === \"Yellow\");\n        const redTee = hole.teeBoxes.find((tee) => tee.color === \"Red\");\n\n        courseInfo[blackKey].push(blackTee ? blackTee.distance : \"-\");\n        courseInfo[whiteKey].push(whiteTee ? whiteTee.distance : \"-\");\n        courseInfo[yellowKey].push(yellowTee ? yellowTee.distance : \"-\");\n        courseInfo[redKey].push(redTee ? redTee.distance : \"-\");\n\n        // PAR 값 추가\n        const parValue = hole.teeBoxes[0]?.par || 4;\n        courseInfo[parsKey].push(parValue);\n      });\n\n      return courseInfo;\n    },\n    getStarClass(difficulty, star) {\n      const starRatings = {\n        Very_Hard:5,Hard: 4, Medium: 3, Easy: 2,Very_Easy:1 \n      };\n\n      // `difficulty`가 없으면 기본적으로 회색 별을 반환\n      if (!difficulty) return \"course-gray-star\";\n\n      // 난이도에 따른 별점 색상 설정\n      return star <= starRatings[difficulty]\n        ? \"course-red-star\"\n        : \"course-gray-star\";\n    },\n    nextOutImage() {\n      if (this.outCourseImages.length > 0) {\n        this.outCurrentIndex =\n          (this.outCurrentIndex + 1) % this.outCourseImages.length;\n      }\n    },\n    prevOutImage() {\n      if (this.outCourseImages.length > 0) {\n        this.outCurrentIndex =\n          (this.outCurrentIndex - 1 + this.outCourseImages.length) %\n          this.outCourseImages.length;\n      }\n    },\n    nextInImage() {\n      if (this.inCourseImages.length > 0) {\n        this.inCurrentIndex =\n          (this.inCurrentIndex + 1) % this.inCourseImages.length;\n      }\n    },\n    prevInImage() {\n      if (this.inCourseImages.length > 0) {\n        this.inCurrentIndex =\n          (this.inCurrentIndex - 1 + this.inCourseImages.length) %\n          this.inCourseImages.length;\n      }\n    },\n  },\n};\n</script>\n<style scroped>\n.no-image-text {\n  text-align: center;\n  color: #999; /* 아래 콘텐츠와 간격 추가 */\n  height: 200px; /* 이미지 영역 크기와 동일하게 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n<style scoped src=\"@/style/course/coursedetail.css\" />\n"]}]}