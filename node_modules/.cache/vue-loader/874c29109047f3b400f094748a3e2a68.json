{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/NicePay.vue?vue&type=style&index=0&id=577ff5ae&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/NicePay.vue","mtime":1735285317531},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wYXltZW50LWZvcm0gewogIG1heC13aWR0aDogNjAwcHg7CiAgbWFyZ2luOiAyMHB4IGF1dG87CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIGJvcmRlci1yYWRpdXM6IDhweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5Owp9CgoucGF5bWVudC1mb3JtIHRhYmxlIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5wYXltZW50LWZvcm0gdGggewogIHRleHQtYWxpZ246IGxlZnQ7CiAgcGFkZGluZzogOHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7Cn0KCi5wYXltZW50LWZvcm0gdGQgewogIHBhZGRpbmc6IDhweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsKfQoKLnBheW1lbnQtZm9ybSBpbnB1dFt0eXBlPSJ0ZXh0Il0gewogIHdpZHRoOiBjYWxjKDEwMCUgLSAxNnB4KTsKICBwYWRkaW5nOiA2cHggOHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgouYnV0dG9uLWdyb3VwIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQoKLmJ0bl9ibHVlIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgcGFkZGluZzogMTBweCAyMHB4OwogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAxNHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7Cn0KCi5idG5fYmx1ZTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMzsKfQo="},{"version":3,"sources":["NicePay.vue"],"names":[],"mappings":";AAiSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"NicePay.vue","sourceRoot":"src/components/manager","sourcesContent":["<script setup>\nimport axios from \"axios\";\nimport CryptoJS from \"crypto-js\";\nimport { computed, onMounted, onUnmounted, ref } from \"vue\";\n\n\nconst handlePostMessage = (event) => {\n  // 나이스페이에서 전달된 메시지인지 확인\n  if (event.origin !== \"https://www.nicepay.co.kr\") return; // 나이스페이 도메인으로 설정\n  try {\n    const data = JSON.parse(event.data);\n    console.log(\"Received Post Message:\", data);\n\n    // 원하는 값 추출\n    const { code, width, height, scroll } = data;\n    console.log(\"Code:\", code);\n    console.log(\"Width:\", width);\n    console.log(\"Height:\", height);\n    console.log(\"Scroll:\", scroll);\n\n    // 필요에 따라 추가 처리\n  } catch (error) {\n    console.error(\"Invalid postMessage data\", error);\n  }\n};\nfunction handlePopstate() {\n  console.log(\"이거 타나요?\")\n  window.location.replace(\"/managerpoint-management\");\n\n}\n\n// 쿼리 매개변수 추출 함수\nfunction getQueryParams() {\n  const params = new URLSearchParams(window.location.search);\n  return {\n    name: params.get('name'),\n    phone: params.get('phone'),\n    email: params.get('email'),\n    product: params.get('product'),\n    price: params.get('price'),\n    paymentMethod: params.get('paymentMethod'),\n    managerId: params.get('managerid'),\n  };\n}\n\n// 데이터 관리\nconst queryData = ref({});\n\nonMounted(async () => {\n  try {\n    console.log('컴포넌트 마운트 중...');\n    window.nicepaySubmit = nicepaySubmit;\n    window.nicepayClose = nicepayClose;\n    queryData.value = getQueryParams();\n    console.log('확인용  : : : :', queryData.value);\n\n    // Execute goPay and then insertDb\n    await goPay(document.payForm);\n    console.log('goPay 완료');\n\n    await insertDb();\n    console.log('insertDb 완료');\n  } catch (error) {\n    console.error('오류 발생:', error);\n  }\n});\n\n// nicepaySubmit 함수를 window 객체에 할당하여 전역에서 접근 가능하게 만듭니다.\nasync function nicepaySubmit() {\n \n  console.log(\"폼 제출 시작\");\n  console.log(\"폼 제출 명령 실행됨\");\n  document.payForm.submit();\n \n\n  // // 3. 결과값을 받았다고 가정하고 NicePayConfirm으로 이동\n  // window.location.href = \"/NicePayConfirm\";\n  // console.log(\"결√제 요청 응답:\", JSON.stringify(formData));\n\n  // try {\n  //   console.log(\"폼 제출 시작\" ,hashString.value);\n  //   // console.log(\"결√제 요청 응답:\", JSON.stringify(document.payForm));\n  //   const formData = {\n  //     PayMethod: paymentMethod,\n  //     GoodsName: goodsName,\n  //     Amt: amt,\n  //     MID: MID,\n  //     Moid: moid,\n  //     BuyerName: buyerName,\n  //     BuyerEmail: buyerEmail,\n  //     BuyerTel: buyerTel,\n  //     ReturnURL: \"http://13.124.62.68:3000/api/points/authReq\",\n  //     EdiDate: ediDate,\n  //     SignData: hashString.value,\n  //     NpLang: \"KO\", // 고정 값\n  //     GoodsCl: \"1\", // 고정 값\n  //     TransType: \"0\", // 고정 값\n  //     CharSet: \"utf-8\", // 고정 값\n  //     ReqReserved: \"\", // 고정 값\n  //   };\n    \n  //   // 폼 데이터 가져오기\n  //   // const formData = new FormData(document.payForm);\n    \n  //   const a =  {\n  //       \"Accept-Charset\": \"euc-kr\", // euc-kr 설정\n  //     };\n  //     console.log(\"결√제 요청 응답:\", JSON.stringify(formData));\n\n  //   // 1. 폼 제출 (여기서는 서버로 전송한다고 가정)\n  //   const response = await axios.post(\"http://13.124.62.68:3000/api/points/authReq\", formData,a);\n  //   console.log(\"결√제 요청 응답:\", response.data);\n\n  //   // 2. 응답 결과 처리\n  //   if (response.data.success) {\n  //     // 결제 성공 후 NicePayConfirm으로 이동\n  //     window.location.href = \"/NicePayConfirm\";\n  //   } else {\n  //     // 실패 처리\n  //     alert(\"결제에 실패했습니다. 다시 시도해주세요.\");\n  //   }\n  // } catch (error) {\n  //   console.error(\"결제 요청 중 오류 발생:\", error);\n  //   alert(\"결제 요청 중 오류가 발생했습니다.\");\n  // }\n}\n\nfunction nicepayClose() {\n  alert(\"결제가 취소 되었습니다\");\n  window.location.replace('/managerpoint-management');\n}\n\n\nonUnmounted(() => {\n  // 컴포넌트가 언마운트될 때 window 객체에서 nicepaySubmit 함수를 제거합니다.\n  console.log('onUnmounted 마운트 중...');\n\n  delete window.nicepaySubmit;\n  delete window.nicepayClose;\n  // window.addEventListener(\"popstate\", handlePopstate);\n\n});\n\n\nconst paymentMethod = getQueryParams().paymentMethod;\nconst managerId = getQueryParams().managerId;\nconst moid_random = new Date().toISOString().replace(/[-:.TZ]/g, \"\")\nconst merchantKey =\n  \"33F49GnCMS1mFYlGXisbUDzVf2ATWCl9k3R++d5hDd3Frmuos/XLx8XhXpe+LDYAbpGKZYSwtlyyLOtS/8aD7A==\";\nconst MID = \"nictest00m\";\nconst ediDate = new Date().toISOString().replace(/[-:.TZ]/g, \"\").slice(0, 14);\nconst amt = getQueryParams().price;\nconst returnURL = \"http://13.124.62.68:3000/api/points/authReq\";\nconst goodsName = getQueryParams().product;\nconst moid = \"moid\"+ moid_random;\nconst buyerName = getQueryParams().name;\nconst buyerEmail = getQueryParams().email;\nconst buyerTel = getQueryParams().phone.replace(/-/g, '');\n\nconst count = ref(0);\n\nconst hashString = computed(() => {\n  const str = `${ediDate}${MID}${amt}${merchantKey}`;\n  return CryptoJS.SHA256(str).toString(CryptoJS.enc.Hex);\n});\n\nasync function nicepayStart(event) {\n  \n  event.preventDefault();\n  goPay(document.payForm);\n\n  \n\n}\n\nasync function insertDb() {\n\n  console.log('moid : : : ' , moid ,paymentMethod , goodsName ,amt ,managerId)\n  const params = {\n  \"managerid\": parseInt(managerId),\n  \"description\": \"포인트 충전 취소\",\n  \"amount\": parseInt(amt),\n  \"tid\": \"\",\n  \"goodsname\": goodsName,\n  \"moid\": moid,\n  \"paymethod\": paymentMethod\n}\n\n  const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'accept': '*/*',\n        },\n      };\n\n  try {\n    const response = await axios.post(\"http://13.124.62.68:3000/api/points\",\n      params,config\n    );\n    console.log(\"test get  요청\", response.data);\n  } catch (error) {\n    console.error(\"결제 요청 실패:\", error);\n  }\n}\n</script>\n\n<template>\n  <body style=\"display: none\">\n    \n    <form\n      name=\"payForm\"\n      method=\"post\"\n      action=\"http://13.124.62.68:3000/api/points/authReq\"\n      accept-charset=\"euc-kr\"\n      class=\"payment-form\"\n    >\n\n    <!-- <form name=\"payForm\" @submit.prevent=\"nicepaySubmit\" class=\"payment-form\"> -->\n\n      <table>\n        <tr>\n          <th>PayMethod</th>\n          <td><input type=\"text\" name=\"PayMethod\" v-model=\"paymentMethod\" /></td>\n        </tr>\n        <tr>\n          <th>GoodsName</th>\n          <td><input type=\"text\" name=\"GoodsName\" v-model=\"goodsName\" /></td>\n        </tr>\n        <tr>\n          <th>Amt</th>\n          <td><input type=\"text\" name=\"Amt\" v-model=\"amt\" /></td>\n        </tr>\n        <tr>\n          <th>MID</th>\n          <td><input type=\"text\" name=\"MID\" v-model=\"MID\" /></td>\n        </tr>\n        <tr>\n          <th>Moid</th>\n          <td><input type=\"text\" name=\"Moid\" v-model=\"moid\" /></td>\n        </tr>\n        <tr>\n          <th>BuyerName</th>\n          <td><input type=\"text\" name=\"BuyerName\" v-model=\"buyerName\" /></td>\n        </tr>\n        <tr>\n          <th>BuyerEmail</th>\n          <td>\n            <input type=\"text\" name=\"BuyerEmail\" v-model=\"buyerEmail\" />\n          </td>\n        </tr>\n        <tr>\n          <th>BuyerTel</th>\n          <td><input type=\"text\" name=\"BuyerTel\" v-model=\"buyerTel\" /></td>\n        </tr>\n        <tr>\n          <th>ReturnURL [Mobile only]</th>\n          <td><input type=\"text\" name=\"ReturnURL\" v-model=\"returnURL\" /></td>\n        </tr>\n        <tr>\n          <th>Virtual Account Expiration Date(YYYYMMDD)</th>\n          <td><input type=\"text\" name=\"VbankExpDate\" value=\"\" /></td>\n        </tr>\n\n        <input type=\"hidden\" name=\"NpLang\" value=\"KO\" />\n        <!-- EN:English, CN:Chinese, KO:Korean -->\n        <input type=\"hidden\" name=\"GoodsCl\" value=\"1\" />\n        <!-- products(1), contents(0)) -->\n        <input type=\"hidden\" name=\"TransType\" value=\"0\" />\n        <!-- USE escrow false(0)/true(1) -->\n        <input type=\"hidden\" name=\"CharSet\" value=\"utf-8\" />\n        <!-- Return CharSet -->\n        <input type=\"hidden\" name=\"ReqReserved\" value=\"\" />\n        <!-- mall custom field -->\n\n        <!-- DO NOT CHANGE -->\n        <input type=\"hidden\" name=\"EdiDate\" v-model=\"ediDate\" />\n        <!-- YYYYMMDDHHMISS -->\n        <input type=\"hidden\" name=\"SignData\" v-model=\"hashString\" />\n        <!-- EncryptData -->\n      </table>\n      <div class=\"button-group\">\n        <a href=\"#\" class=\"btn_blue\" @click=\"nicepayStart\">REQUEST</a>\n        <!-- <a href=\"#\" class=\"btn_blue\" @click=\"test\">test</a> -->\n      </div>\n    </form>\n  </body>\n</template>\n \n<style scoped>\n.payment-form {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\n.payment-form table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 20px;\n}\n\n.payment-form th {\n  text-align: left;\n  padding: 8px;\n  background-color: #f2f2f2;\n  border-bottom: 1px solid #ddd;\n}\n\n.payment-form td {\n  padding: 8px;\n  border-bottom: 1px solid #ddd;\n}\n\n.payment-form input[type=\"text\"] {\n  width: calc(100% - 16px);\n  padding: 6px 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.btn_blue {\n  display: inline-block;\n  padding: 10px 20px;\n  color: #fff;\n  background-color: #007bff;\n  text-decoration: none;\n  border-radius: 4px;\n  text-align: center;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.btn_blue:hover {\n  background-color: #0056b3;\n}\n</style>\n"]}]}