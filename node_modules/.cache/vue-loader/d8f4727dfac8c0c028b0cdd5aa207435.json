{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerASDetail.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerASDetail.vue","mtime":1733818648882},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ManagerASDetail.vue"],"names":[],"mappings":";AAofile":"ManagerASDetail.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\r\n    <div class=\"all\">\r\n        <ManagerHeader />\r\n        <div class=\"wrap\">\r\n            <div class=\"as-container\">\r\n                <ManagerNavbar />\r\n                <div class=\"wrapper\">\r\n                    <!-- 타이틀 부분 -->\r\n                    <div class=\"title-box\">\r\n                        <div class=\"pretendard-bold-normal-black-28px\">A/S 관리</div>\r\n                    </div>\r\n                    <div class=\"list-box\">\r\n                        <!-- A/S 신청 내역 제목 -->\r\n                        <div class=\"as-title\">\r\n                            <div class=\"pretendard-bold-log-cabin-30px\">{{ title }}</div>\r\n                            <div class=\"as-info pretendard-regular-normal-mountain-mist-20px\">\r\n                                <div class=\"as-info-first\">\r\n                                    <div class=\"valign-text-middle\">\r\n                                        {{ requestedAt.split(\"T\")[0] }}\r\n                                    </div>\r\n                                    <span>l</span>\r\n                                    <div class=\"valign-text-middle\" :class=\"statusClass(status)\">\r\n                                        {{ status }}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"notice-info-btn\" v-if=\"status === '접수'\">\r\n                                    <button class=\"delete-button pretendard-medium-white-18px\"\r\n                                        @click=\"deleteAS\">삭제</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <!-- A/S 신청 내용 -->\r\n                        <div class=\"as-content\">\r\n                            <div class=\"as-content-st pretendard-light-granite-gray-18px\">\r\n                                <p class=\"ft valign-text-middle\">{{ content }}</p>\r\n                            </div>\r\n                            <button class=\"list-btn pretendard-medium-white-18px\" @click=\" toGoList()\">\r\n                                목록으로\r\n                            </button>\r\n                            <div class=\" reply-content\">\r\n                                <div class=\"reply-write\">\r\n                                    <textarea placeholder=\"내용을 입력해 주세요\" class=\"reply-textarea\"\r\n                                        v-model=\"contents\"></textarea>\r\n                                    <div class=\"reply-buttons\">\r\n                                        <button class=\"cancel-button pretendard-regular-normal-white-18px\">\r\n                                            취소\r\n                                        </button>\r\n                                        <button class=\"submit-button pretendard-regular-normal-white-18px\"\r\n                                            @click=\"postComments\">\r\n                                            입력\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                 <!-- 24.12.10 수정 - reply 전체 폰트 수정 -->\r\n                                 <div class=\"reply-view\">\r\n                                    <div class=\"reply-count pretendard-bold-black-20px\">댓글 {{ comments.length }}</div>\r\n                                    <!-- 24.11.22 수정 - 추가 -->\r\n                                    <!-- 댓글이 있을 경우 -->\r\n                                    <div v-if=\"comments.length > 0\">\r\n                                        <div class=\"comment\" v-for=\"comment in comments\" :key=\"comment.id\">\r\n                                            <div class=\"comment-header\">\r\n                                                <img class=\"comment-avatar\"\r\n                                                    src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-736@2x.png\"\r\n                                                    alt=\"User avatar\" />\r\n                                                <span class=\"comment-author pretendard-medium-mine-shaft-20px\">{{\r\n                                                    comment.comment_author\r\n                                                    }}</span>\r\n                                                <span class=\"comment-date pretendard-regular-normal-mine-shaft-18px\">{{\r\n                                                    comment.comment_createdAt\r\n                                                        ? comment.comment_createdAt.split(\"T\")[0]\r\n                                                        : \"날짜 없음\"\r\n                                                }}</span>\r\n                                            </div>\r\n                                            <div class=\"comment-body pretendard-regular-normal-granite-gray-18px\">\r\n                                                <div v-if=\"comment.isEditing\">\r\n                                                    <textarea type=\"text\" v-model=\"comment.editedContent\"\r\n                                                        class=\"comment-input pretendard-regular-normal-granite-gray-18px\"\r\n                                                        placeholder=\"댓글을 수정하세요\" />\r\n                                                </div>\r\n                                                <div v-else>\r\n                                                    {{ comment.comment_content || '내용 없음' }}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div class=\"comment-actions\">\r\n                                                <button class=\"comment-edit-button pretendard-regular-normal-white-18px\"\r\n                                                    @click=\"toggleEditComment(comment)\">\r\n                                                    {{ comment.isEditing ? \"완료\" : \"수정\" }}\r\n                                                </button>\r\n                                                <button class=\"delete-button pretendard-regular-normal-white-18px\"\r\n                                                    @click=\"deleteComments(comment.comment_id)\">\r\n                                                    삭제\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- 24.11.22 수정 - 추가 -->\r\n                                    <!-- 댓글이 없을 경우 -->\r\n                                    <div v-else>\r\n                                        <!-- 24.11.26 수정 - font 추가 -->\r\n                                        <p class=\"pretendard-regular-normal-granite-gray-18px\">등록된 댓글이 없습니다.</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ManagerHeader from './ManagerHeader.vue';\r\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\r\nimport { managerStore } from '@/store/managerStore';  // API 호출\r\n\r\nexport default {\r\n    name: \"ManagerASDetail\",\r\n    components: {\r\n        ManagerHeader,\r\n        ManagerNavbar,\r\n    },\r\n    data() {\r\n        return {\r\n            id: null,\r\n            title: \"\",\r\n            content: \"\",\r\n            contents: \"\",\r\n            requestedAt: \"\",\r\n            status: \"\",\r\n            basicProfileImg: 'https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-736@2x.png',\r\n            comments: [],\r\n        };\r\n    },\r\n    async mounted() {\r\n        // 라우터에서 id를 받아옴\r\n        this.id = this.$route.query.id;\r\n        console.log(\"받아온 ID:\", this.id);\r\n        await this.getASDetail();\r\n    },\r\n    methods: {\r\n        statusClass(status) {\r\n            if (status === \"접수\") return \"status-reception\";\r\n            if (status === \"진행중\") return \"status-processing\";\r\n            if (status === \"취소\") return \"status-hold\";\r\n            if (status === \"완료\") return \"status-complete\";\r\n            return \"\";\r\n        },\r\n        async getASDetail() {\r\n            try {\r\n                // A/S 상세 데이터를 가져옴\r\n                const response = await managerStore.getTask(`as-requests/${this.id}`);\r\n                console.log(\"A/S 상세 데이터:\", response);\r\n\r\n                // 데이터를 data 속성에 할당\r\n                this.title = response[0].asRequest_title;\r\n                this.content = response[0].asRequest_description;\r\n                this.requestedAt = response[0].asRequest_requestedAt.split(\"T\")[0];\r\n                this.status = response[0].asRequest_status;\r\n\r\n                this.comments = (response[0].commentList || []).filter(\r\n                    (comment) =>\r\n                        comment.comment_content !== null &&\r\n                        comment.comment_content.trim() !== \"\" &&\r\n                        comment.comment_author !== null\r\n                ).map((comment) => ({\r\n                    ...comment,\r\n                    isEditing: false, // Add isEditing with a default value of false\r\n                    profileImg: comment.profileImg || this.basicProfileImg, // 댓글 작성자 프로필 이미지\r\n                    editedContent: comment.comment_content,\r\n                }));\r\n            } catch (error) {\r\n                console.error(\"A/S 상세 데이터를 가져오는 중 오류 발생:\", error);\r\n            }\r\n        },\r\n        async deleteAS() {\r\n            const response = await managerStore.deleteTask(`as-requests/${this.id}`);\r\n            alert('A/S가 삭제되었습니다.');\r\n            this.$router.push({ path: \"/manageras-management\" });\r\n\r\n        },\r\n        toGoList() {\r\n            this.$router.push({ path: \"/manageras-management\" });\r\n        },\r\n        async updateAnswer() {\r\n            console.log(\"진행 상태:\", this.selectedStatus);\r\n            const params = {\r\n                status: this.selectedStatus,\r\n            };\r\n            try {\r\n                const response = await managerStore.updateTask(\r\n                    `as-requests/${this.id}`,\r\n                    params\r\n                );\r\n                console.log(\"업데이트 결과:\", response);\r\n                alert(\"답변이 등록되었습니다.\");\r\n            } catch (error) {\r\n                console.error(\"업데이트 중 오류 발생:\", error);\r\n                alert(\"업데이트 중 오류가 발생했습니다.\");\r\n            }\r\n        },\r\n        async postComments() {\r\n            try {\r\n\r\n                // 로컬 스토리지에서 managerInfo 가져오기\r\n                const managerInfo = JSON.parse(localStorage.getItem('managerInfo'));\r\n                const storeName = managerInfo.identifier;\r\n                const now = new Date();\r\n                const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\r\n                const createdAt = koreaTime\r\n                    .toISOString()\r\n                    .replace(\"T\", \" \")\r\n                    .slice(0, 19);\r\n                // POST 요청으로 데이터를 서버에 전송\r\n                const params = {\r\n                    // title: this.title,\r\n                    content: this.contents,\r\n                    author: storeName,\r\n                    category: \"as관리\",\r\n                    views: 0,\r\n                    freeBoardId: \"1\",\r\n                    userId: \"1\",\r\n                    afterServiceId: this.id,\r\n                    askId: \"1\",\r\n                    createdAt: createdAt,\r\n                    commentText: \"0\",\r\n                    updatedAt: createdAt,\r\n                };\r\n                console.log(\"보내는 데이터:\", JSON.stringify(params, null, 2));\r\n\r\n                const response = await managerStore.postTask(\"comments\", params);\r\n\r\n                console.log(\"등록 성공:\");\r\n                alert(\"등록이 되었습니다\");\r\n                await this.getASDetail();\r\n                this.contents = \"\"; // 입력한 댓글 초기화\r\n            } catch (error) {\r\n                console.error(\"등록 실패:\", error);\r\n                alert(\"등록에 실패했습니다.\");\r\n            }\r\n        },\r\n        toggleEditComment(comment) {\r\n            if (comment.isEditing) {\r\n                // 수정 모드에서 완료를 누르면 `updateComment` 호출\r\n                this.updateComment(comment);\r\n            } else {\r\n                // 수정 모드로 전환할 때 기존 댓글 내용을 `editedContent`에 복사\r\n                comment.editedContent = comment.comment_content;\r\n            }\r\n            comment.isEditing = !comment.isEditing;\r\n        },\r\n        async updateComment(comment) {\r\n            try {\r\n                const now = new Date();\r\n                const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\r\n                const updatedAt = koreaTime.toISOString().replace(\"T\", \" \").slice(0, 19);\r\n\r\n                const params = {\r\n                    content: comment.editedContent,\r\n                    updatedAt: updatedAt,\r\n                };\r\n\r\n                // 서버에 업데이트 요청\r\n                const response = await managerStore.updateTask(`comments/${comment.comment_id}`, params);\r\n                console.log(\"댓글 수정 응답:\", response);\r\n\r\n                // if (response.success) {\r\n                //   alert(\"댓글이 수정되었습니다.\");\r\n                //   comment.comment_content = comment.editedContent; // 수정된 내용 반영\r\n                //   comment.isEditing = false; // 수정 모드 종료\r\n                // } else {\r\n                //   alert(\"댓글 수정에 실패했습니다.\");\r\n                // }\r\n                await this.getASDetail();\r\n            } catch (error) {\r\n                console.error(\"댓글 수정 중 오류 발생:\", error);\r\n                alert(\"댓글 수정 중 오류가 발생했습니다.\");\r\n            }\r\n        }\r\n        ,\r\n        async deleteComments(commentId) {\r\n            try {\r\n                // 특정 댓글을 삭제\r\n                const response = await managerStore.deleteTask(`comments/${commentId}`);\r\n                console.log(\"댓글 삭제 응답:\", response);\r\n\r\n                // 삭제 후 댓글 목록을 갱신\r\n                alert(\"댓글이 삭제되었습니다.\");\r\n                await this.getASDetail();\r\n                window.location.reload();\r\n            } catch (error) {\r\n                console.error(\"댓글 삭제 중 오류 발생:\", error);\r\n                alert(\"댓글 삭제에 실패했습니다.\");\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 전체 컨테이너의 배경색 설정 */\r\n.as-container {\r\n    background-color: #f5f6f6;\r\n    display: flex;\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: row;\r\n}\r\n\r\n.wrapper {\r\n    width: 100%;\r\n    padding: 30px;\r\n    gap: 20px;\r\n}\r\n\r\n/* 타이틀 박스 */\r\n.title-box {\r\n    background-color: #fff;\r\n    padding: 24px 30px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n/* 리스트 박스 */\r\n.list-box {\r\n    width: 100%;\r\n    display: grid;\r\n    gap: 10px;\r\n    align-items: center;\r\n    background-color: #fff;\r\n    padding: 30px;\r\n}\r\n\r\n.as-title {\r\n    display: grid;\r\n    gap: 16px;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-bottom: 40px;\r\n}\r\n\r\n.as-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    justify-content: space-between;\r\n}\r\n\r\n.as-info-first {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n}\r\n\r\n/* 상태 - 접수 */\r\n.status-reception,\r\n.status-processing,\r\n.status-hold,\r\n.status-complete {\r\n    color: #14b655;\r\n    border: 1px solid #14b655;\r\n    width: 80px;\r\n    padding: 11px 0px;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n}\r\n\r\n/* 상태 - 진행중 */\r\n.status-processing {\r\n    color: #d30f1a;\r\n    border: 1px solid #d30f1a;\r\n}\r\n\r\n/* 상태 - 취소 */\r\n.status-hold {\r\n    color: #999999;\r\n    border: 1px solid #999999;\r\n}\r\n\r\n/* 상태 - 완료 */\r\n.status-complete {\r\n    color: #184199;\r\n    border: 1px solid #184199;\r\n}\r\n\r\n.as-content {\r\n    align-items: center;\r\n    align-self: stretch;\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    flex-direction: column;\r\n    gap: 50px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.as-content-st {\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    border: 1px solid;\r\n    border-color: var(--alto);\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    padding: 40px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.ft {\r\n    letter-spacing: 0;\r\n    line-height: 28px;\r\n    margin-top: -1px;\r\n    position: relative;\r\n    /* width: 1320px; */\r\n}\r\n\r\n.list-btn {\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    background-color: var(--monza);\r\n    width: 200px;\r\n    height: 50px;\r\n    border: none;\r\n}\r\n\r\n.reply {\r\n    height: 150px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.reply-input {\r\n    align-items: flex-start;\r\n    background-color: var(--hint-of-red);\r\n    border: 1px solid;\r\n    border-color: var(--celeste);\r\n    display: flex;\r\n    gap: 10px;\r\n    height: 150px;\r\n    left: 0;\r\n    padding: 20px;\r\n    position: relative;\r\n    top: 0;\r\n    width: 100%;\r\n}\r\n\r\n.reply-btn {\r\n    display: flex;\r\n    position: absolute;\r\n    /* 부모 요소의 하단에 배치 */\r\n    bottom: 10px;\r\n    right: 0;\r\n}\r\n\r\n.cancel-btn,\r\n.insert-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 0.5px solid;\r\n    border-color: var(--blackwhitewhite);\r\n    border-radius: 8px;\r\n    gap: 10px;\r\n    height: 48px;\r\n    width: 90px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.cancel-btn {\r\n    background-color: var(--mountain-mist);\r\n}\r\n\r\n.insert-btn {\r\n    background-color: var(--torea-bay);\r\n}\r\n\r\n.reply-list {\r\n    align-items: flex-start;\r\n    align-self: stretch;\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    flex-direction: column;\r\n    gap: 30px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.reply-count {\r\n    align-items: center;\r\n    align-self: stretch;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 1px;\r\n    border-color: var(--mountain-mist);\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    gap: 10px;\r\n    padding: 30px 0px 15px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.reply-count-text {\r\n    letter-spacing: -0.8px;\r\n    line-height: 32px;\r\n    margin-top: -1px;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: fit-content;\r\n}\r\n\r\n.reply-header {\r\n    align-items: center;\r\n    display: inline-flex;\r\n    flex: 0 0 auto;\r\n    gap: 20px;\r\n    position: relative;\r\n}\r\n\r\n.reply-writer {\r\n    align-items: center;\r\n    display: inline-flex;\r\n    flex: 0 0 auto;\r\n    gap: 8px;\r\n    position: relative;\r\n}\r\n\r\n.profile-img {\r\n    height: 30px;\r\n    position: relative;\r\n    width: 30px;\r\n}\r\n\r\n.nickname {\r\n    letter-spacing: -0.8px;\r\n    line-height: 32px;\r\n    margin-top: -1px;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: fit-content;\r\n}\r\n\r\n.insertDate {\r\n    letter-spacing: -0.72px;\r\n    line-height: 32px;\r\n    margin-top: -1px;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: fit-content;\r\n}\r\n\r\n.reply-background {\r\n    align-self: stretch;\r\n    background-color: var(--hint-of-red);\r\n    height: 200px;\r\n    position: relative;\r\n    width: 100%;\r\n}\r\n\r\n.reply-content-btn {\r\n    display: flex;\r\n    position: absolute;\r\n    /* 부모 요소의 하단에 배치 */\r\n    bottom: 10px;\r\n    right: 0;\r\n}\r\n\r\n.modify-btn,\r\n.delete-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 0.5px solid;\r\n    border-color: var(--blackwhitewhite);\r\n    border-radius: 8px;\r\n    gap: 10px;\r\n    height: 48px;\r\n    width: 90px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.modify-btn {\r\n    background-color: var(--mountain-mist);\r\n}\r\n\r\n.delete-btn {\r\n    background-color: var(--monza);\r\n}\r\n\r\n.reply-content-detail {\r\n    left: 25px;\r\n    /* letter-spacing: -0.72px; */\r\n    line-height: 32px;\r\n    position: absolute;\r\n    top: 81px;\r\n}\r\n\r\n.process-status {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n\r\n.status {\r\n    display: flex;\r\n    margin-right: 40px;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.process-status span {\r\n    color: #d30f1a;\r\n}\r\n\r\n.process-status select {\r\n    height: 56px;\r\n    width: 93%;\r\n    right: 0;\r\n}\r\n\r\n.answer-insert {\r\n    letter-spacing: 0;\r\n    line-height: normal;\r\n    position: relative;\r\n    white-space: nowrap;\r\n    width: 100%;\r\n    height: 54px;\r\n    border: none;\r\n    background-color: #184199;\r\n    color: #fff;\r\n}\r\n\r\n.reply-content {\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 20px 0px;\r\n}\r\n\r\n.reply-write {\r\n    background-color: #fafafa;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.reply-textarea {\r\n    width: 100%;\r\n    background-color: #fafafa;\r\n    border: none;\r\n    height: 49px;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    resize: none;\r\n}\r\n\r\n.reply-buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    gap: 10px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.cancel-button {\r\n    background-color: #999;\r\n    border: none;\r\n    width: 90px;\r\n    height: 48px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\n.submit-button {\r\n    background-color: #184199;\r\n    border: none;\r\n    width: 90px;\r\n    height: 48px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\n.reply-view {\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.reply-count {\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.divider {\r\n    border-top: 1px solid #dddddd;\r\n    margin: 10px 0;\r\n}\r\n\r\n.comment {\r\n    padding: 15px 0;\r\n    border-bottom: 1px solid #eeeeee;\r\n}\r\n\r\n.comment-header {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    font-size: 14px;\r\n}\r\n\r\n.comment-avatar {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.comment-author {\r\n    font-weight: bold;\r\n}\r\n\r\n.comment-date {\r\n    color: #888888;\r\n}\r\n\r\n.comment-body {\r\n    padding: 20px;\r\n    background-color: #f9f9f9;\r\n    margin-top: 30px;\r\n}\r\n\r\n.comment-actions {\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n    background-color: #f9f9f9;\r\n    padding: 20px;\r\n}\r\n\r\n.comment-edit-button {\r\n    /* 24.12.10 수정 - 배경색 변경 */\r\n    background-color: #999999;\r\n    border: none;\r\n    width: 90px;\r\n    height: 48px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\n.delete-button {\r\n    background-color: #d30f1a;\r\n    border: none;\r\n    width: 90px;\r\n    height: 48px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\n.comment-body textarea {\r\n    border: none;\r\n    width: 100%;\r\n    background-color: #f9f9f9;\r\n    height: 100%;\r\n}\r\n</style>"]}]}