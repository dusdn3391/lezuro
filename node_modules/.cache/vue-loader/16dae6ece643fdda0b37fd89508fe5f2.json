{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminASManagement.vue?vue&type=style&index=0&id=6418be66&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminASManagement.vue","mtime":1734057636405},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi53cmFwcGVyIHsKICBmbGV4LWdyb3c6IDE7CiAgLyog64KY66i47KeAIOqzteqwhOydhCDssKjsp4DtlZjqsowg7ZWoICovCiAgcGFkZGluZzogMzBweDsKICBnYXA6IDIwcHg7Cn0KCi8qIO2DgOydtO2LgCDrsJXsiqQgKi8KLnRpdGxlLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIHNlYXJjaC1ib3ggKi8KLnNlYXJjaC1ib3ggewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMzBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBoZWlnaHQ6IDE5MHB4OwogIHdpZHRoOiAxMDAlOwp9CgouZGF0ZS1zZWFyY2ggewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDEwcHg7Cn0KCi5kYXRlLXNlYXJjaCBpbnB1dCB7CiAgd2lkdGg6IDI1MHB4OwogIGhlaWdodDogNjBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIHBhZGRpbmc6IDAgMjBweDsKfQoKLyogMjQuMTIuMDQg7IiY7KCVICovCi5kYXRldGFiLWJ0biB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGhlaWdodDogNjBweDsKICBwYWRkaW5nOiAxNnB4IDMwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICBnYXA6IDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKfQoKLnN0b3JlLXNlYXJjaCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgpzZWxlY3QgewogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmxhY2t3aGl0ZXdoaXRlKTsKICBkaXNwbGF5OiBmbGV4OwogIGhlaWdodDogNjBweDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgcGFkZGluZzogMHB4IDIwcHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiAyNTBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIG1hcmdpbjogMTJweDsKfQoKLnNlYXJjaC1jb250YWluZXIgewogIC8qIHdpZHRoOiAxMDAlOyAqLwogIHdpZHRoOiA3NiU7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IDBweCAxMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGhlaWdodDogNjBweDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi5zZWFyY2gtY29udGFpbmVyIGltZyB7CiAgaGVpZ2h0OiAyNHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMjRweDsKICB0ZXh0LWFsaWduOiByaWdodDsKfQoKLnNlYXJjaC1pbnB1dCB7CiAgYm9yZGVyOiBub25lOwogIG91dGxpbmU6IG5vbmU7CiAgcGFkZGluZzogMTBweDsKICB3aWR0aDogMzAwcHg7Cn0KCi8qIOumrOyKpO2KuCDrsJXsiqQgKi8KLmxpc3QtYm94IHsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogd3JhcDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGdhcDogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7Cn0KCi5saXN0LWJveC1idG4gewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi5hZGQtYnRuIHsKICBsZXR0ZXItc3BhY2luZzogMDsKICBsaW5lLWhlaWdodDogbm9ybWFsOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIHdpZHRoOiAxNTBweDsKICBoZWlnaHQ6IDQ1cHg7CiAgYm9yZGVyOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6ICMxODQxOTk7CiAgY29sb3I6ICNmZmY7Cn0KCi5kZWxldGUtYnRuIHsKICBsZXR0ZXItc3BhY2luZzogMDsKICBsaW5lLWhlaWdodDogbm9ybWFsOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIHdpZHRoOiAxNTBweDsKICBoZWlnaHQ6IDQ1cHg7CiAgYm9yZGVyOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6ICNjY2M7CiAgY29sb3I6ICNmZmY7CiAgbWFyZ2luLXJpZ2h0OiAxMHB4Owp9CgoudGFibGUtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93LXg6IGF1dG87Cn0KCi5jb3Vyc2UtbGlzdCB7CiAgd2lkdGg6IDEwMCU7Cn0KCnRhYmxlIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwp9Cgp0aCwKdGQgewogIHBhZGRpbmc6IDI2cHggMHB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKdGggewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7Cn0KCi8q66as7Iqk7Yq4IOuwleyKpCAqLwouYXMtbGlzdC1ib3ggewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiB3cmFwOwogIGdhcDogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7Cn0KCi50YWJzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGhlaWdodDogNDVweDsKfQoKLnRhYi1idG4gewogIGZsZXg6IDE7CiAgcGFkZGluZzogMTVweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYm9yZGVyOiBub25lOwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7CiAgY3Vyc29yOiBwb2ludGVyOwogIHdpZHRoOiAxNTBweDsKfQoKLyogMjQuMTIuMDQg7IiY7KCVICovCi5kYXRldGFiLWJ0bi5hY3RpdmUsCi50YWItYnRuLmFjdGl2ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMzM5OTsKICBjb2xvcjogI2ZmZjsKfQoKLyog7YWM7J2067iUIOyKpO2DgOydvCAqLwoudGFibGUtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHdpZHRoOiAxMDAlOwogIG92ZXJmbG93LXg6IGF1dG87Cn0KCnRhYmxlIHsKICB3aWR0aDogMTAwJTsKICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwp9Cgp0aCwKdGQgewogIHBhZGRpbmc6IDI2cHggMHB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKdGggewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7Cn0KCi8qIOuyhO2KvCAtIOygkeyImCAqLwouc3RhdHVzLXJlY2VwdGlvbiB7CiAgY29sb3I6ICMxNGI2NTU7CiAgYm9yZGVyOiAxcHggc29saWQgIzE0YjY1NTsKICB3aWR0aDogODBweDsKICBwYWRkaW5nOiAxMXB4IDBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8qIOyFgCDslYjsl5DshJwg7KSR7JWZ7JeQIOychOy5mO2VmOuPhOuhnSDrs4Dqsr0gKi8KICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgLyog7YWN7Iqk7Yq464+EIOqwgOyatOuNsCDsoJXroKwgKi8KfQoKLyog67KE7Yq8IC0g7LKY66as7KSRICovCi5zdGF0dXMtcHJvY2Vzc2luZyB7CiAgY29sb3I6ICNkMzBmMWE7CiAgYm9yZGVyOiAxcHggc29saWQgI2QzMGYxYTsKICB3aWR0aDogODBweDsKICBwYWRkaW5nOiAxMXB4IDBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8qIOyFgCDslYjsl5DshJwg7KSR7JWZ7JeQIOychOy5mO2VmOuPhOuhnSDrs4Dqsr0gKi8KICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgLyog7YWN7Iqk7Yq464+EIOqwgOyatOuNsCDsoJXroKwgKi8KfQoKLyog67KE7Yq8IC0g67O066WYICovCi5zdGF0dXMtaG9sZCB7CiAgY29sb3I6ICM5OTk5OTk7CiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTk5OTsKICB3aWR0aDogODBweDsKICBwYWRkaW5nOiAxMXB4IDBweDsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLyog67KE7Yq8IC0g7JmE66OMICovCi5zdGF0dXMtY29tcGxldGUgewogIGNvbG9yOiAjMTg0MTk5OwogIGJvcmRlcjogMXB4IHNvbGlkICMxODQxOTk7CiAgd2lkdGg6IDgwcHg7CiAgcGFkZGluZzogMTFweCAwcHg7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5wYWdpbmF0aW9uLWNvbnRyb2xzIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGdhcDogMjBweDsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgovKiAyNC4xMS4xMSDsiJjsoJUgLSDstpTqsIAgKi8KLnBhZ2UtbnVtYmVycyB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGdhcDogMjBweDsKfQoKLyogMjQuMTIuMDQg7IiY7KCVIC0g7LaU6rCAICovCi5wYWdlLW51bWJlciB7CiAgd2lkdGg6IDQwcHg7CiAgaGVpZ2h0OiA0MHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA1MCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi8qIDI0LjEyLjA0IOyImOyglSAtIOy2lOqwgCAqLwoucGFnZS1udW1iZXIuYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwogIGNvbG9yOiB3aGl0ZTsKfQoKLyogMjQuMTIuMDQg7IiY7KCVIC0g7LaU6rCAICovCi5wYWdlLW51bWJlcjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZWVlZTsKfQoKLnBhZ2luYXRpb24tYXJyb3cgewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnBhZ2luYXRpb24tYXJyb3cuZGlzYWJsZWQgewogIG9wYWNpdHk6IDAuNTsKICBjdXJzb3I6IG5vdC1hbGxvd2VkOwp9CgoucGFnaW5hdGlvbi1hcnJvdy5mbGlwcGVkIHsKICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOwp9Cg=="},{"version":3,"sources":["AdminASManagement.vue"],"names":[],"mappings":";AAkffile":"AdminASManagement.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class=\"all\">\n    <AdminHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <AdminNavbar />\n        <div class=\"wrapper\">\n          <!-- 타이틀 부분 -->\n          <div class=\"title-box\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">A/S 관리</h2>\n          </div>\n          <!-- Select box 부분 -->\n          <div class=\"search-box\">\n            <div class=\"date-search\">\n              <span class=\"date pretendard-regular-normal-mine-shaft-18px\">날짜검색</span>\n              <!-- 24.12.04 수정 - 추가 -->\n              <div v-for=\"dateTab in dateTabs\" :key=\"dateTab\"\n                :class=\"['datetab-btn pretendard-regular-normal-mine-shaft-16px', { active: selectedDateTab === dateTab }]\"\n                @click=\"selectDateTab(dateTab)\">\n                {{ dateTab }}\n              </div>\n              <!-- 날짜 선택 부분 -->\n              <!-- <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"startDate\" /> -->\n              <!-- 24.12.04 수정 -->\n              <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"selectedDate.start\"\n                @change=\"validateStartDate\" />\n              ~\n              <!-- <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"endDate\" /> -->\n              <!-- 24.12.04 수정 -->\n              <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px\" v-model=\"selectedDate.end\"\n                @change=\"validateEndDate\" />\n            </div>\n            <div class=\"store-search\">\n              <!-- 24.12.11 수정 - 문구 수정 -->\n              <span class=\"date pretendard-regular-normal-mine-shaft-18px\">A/S검색</span>\n              <!-- select box -->\n            <!-- 24.12.11 수정 - 검색 모델 추가, 옵션 value 수정 -->\n            <select v-model=\"searchAs\" class=\"pretendard-regular-normal-mine-shaft-18px\">\n                <option value=\"store\" selected>매장이름</option>\n                <option value=\"title\">제목</option>\n              </select>\n\n              <!-- 검색어 입력 input 박스 -->\n              <div class=\"search-container\">\n                <input type=\"text\" class=\"search-input pretendard-regular-normal-mountain-mist-18px\"\n                  v-model=\"searchQuery\" placeholder=\"검색어를 입력해주세요\" />\n                <img\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/searchbtn-9.svg\"\n                  alt=\"searchBtn\" />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"list-box\">\n            <div class=\"list-box-btn\">\n              <div class=\"pretendard-bold-log-cabin-24px\">A/S 리스트</div>\n              <div>\n                <button class=\"delete-btn pretendard-semibold-mountain-mist-16px\" @click=\"deleteSelected\">\n                  선택 삭제\n                </button>\n                <!-- <button class=\"add-btn pretendard-semibold-mountain-mist-16px\" @click=\"addStore\">\n                                    매장 추가\n                                </button> -->\n              </div>\n            </div>\n            <!-- 리스트 부분 -->\n            <div class=\"as-list-box\">\n              <!-- <div class=\"tabs\">\n                                <button v-for=\"tab in tabs\" :key=\"tab\"\n                                    :class=\"['tab-btn pretendard-semibold-mountain-mist-16px', { active: selectedTab === tab }]\"\n                                    @click=\"selectTab(tab)\">\n                                    {{ tab }}\n                                </button>\n                            </div> -->\n              <div class=\"tabs\">\n                <button v-for=\"tab in tabs\" :key=\"tab\" :class=\"[\n                  'tab-btn pretendard-semibold-mountain-mist-16px',\n                  { active: selectedTab === tab },\n                ]\" @click=\"selectTab(tab)\">\n                  {{ tab }}\n                    <!-- 24.12.13 수정 - 색상 변경 -->\n                    <span :style=\"{ color: selectedTab === tab ? '#D30F1A' : '#184199' }\">\n                    {{ statusCounts[tab.replace(\" 내역\", \"\")] }}\n                  </span>\n                </button>\n              </div>\n              <div class=\"course-list\">\n                <div class=\"table-container\">\n                  <table>\n                    <thead>\n                      <tr class=\"pretendard-bold-mine-shaft-18px\">\n                        <th>\n                          <input type=\"checkbox\" :checked=\"isAllSelected\" @change=\"toggleSelectAll\" />\n                        </th>\n                        <th>번호</th>\n                        <th>매장</th>\n                        <th>AS 신청 내역</th>\n                        <th>접수일시</th>\n                        <th>진행상태</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(list, index) in paginatedItems\" :key=\"index\"\n                        class=\"pretendard-semibold-mountain-mist-16px\">\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\">\n                          <input type=\"checkbox\" v-model=\"selectedItems\" :value=\"list.id\" />\n                        </td>\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\" @click=\"toGoAsDetail(list)\">\n                          <!-- {{ lists.length - ((currentPage - 1) * itemsPerPage + index) }} -->\n                          <!-- 24.12.03 수정 -->\n                          {{ list.id }}\n                          <!-- {{ index + 1 }} -->\n                          <!-- {{ list.number }} -->\n                        </td>\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\" @click=\"toGoAsDetail(list)\">\n                          {{ list.branch.name }}\n                        </td>\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\" @click=\"toGoAsDetail(list)\">\n                          <!-- {{ list.description }} -->\n                          <!-- 24.12.03 수정 - descrition을 title로 수정 -->\n                          {{ list.title }}\n                        </td>\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\" @click=\"toGoAsDetail(list)\">\n                          <!-- {{ list.requestedAt.split('T')[0] }} -->\n                          {{ list.requestedAt.split(\"T\")[0] }}\n                        </td>\n                        <td class=\"pretendard-regular-normal-granite-gray-18px\" @click=\"toGoAsDetail(list)\">\n                          <span :class=\"statusClass(list.status)\">\n                            {{ list.status }}\n                          </span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <div class=\"pagination-controls\">\n                    <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                      :class=\"{ disabled: currentPage === 1 }\" />\n                    <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                      <!-- 24.12.04 수정 - 추가 -->\n                      <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"[\n                        'page-number',\n                        { active: page === currentPage },\n                      ]\" @click=\"goToPage(page)\">\n                        {{ page }}\n                      </div>\n                    </div>\n                    <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n                      :class=\"{ disabled: currentPage === totalPages }\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- <AdminScoreCardModal v-if=\"isModalVisible\" @close=\"closeModal\" /> -->\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AdminHeader from \"./AdminHeader.vue\";\nimport AdminNavbar from \"./AdminNavbar.vue\";\nimport { adminStore } from \"@/store/adminStore\"; // API 호출\n\nexport default {\n  name: \"AdminASManagement\",\n  components: {\n    AdminHeader,\n    AdminNavbar,\n  },\n  data() {\n    return {\n      selectedDate: {\n        start: \"\",\n        end: \"\",\n      },\n      // 24.12.04 수정 - 추가\n      selectedDateTab: \"전체\",\n      // 24.12.04 수정 - 추가\n      dateTabs: [\"전체\"],\n      selectedTab: \"전체 내역\",\n      // tabs: [\"전체 내역\", \"처리중\", \"보류\", \"접수\", \"완료\"],\n      // 24.11.18 수정\n      tabs: [\"전체 내역\", \"진행중\", \"취소\", \"접수\", \"완료\"],\n      selectedStore: \"\",\n      selectedTitle: \"\", // 24.12.11 수정 - selectedAsDetails - selectedTitle 로 수정\n      searchQuery: \"\",\n      selectedItems: [],\n      lists: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      currentPage: 1,\n      itemsPerPage: 5, \n      searchAs: 'store', // 24.12.11 수정 - 검색 모델 추가 \n    };\n  },\n  computed: {\n    // 24.12.04 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n\n\n    isAllSelected() {\n      return (\n        this.paginatedItems.length > 0 &&\n        this.paginatedItems.every((list) => this.selectedItems.includes(list.id))\n      );\n    },\n    totalPages() {\n      return Math.ceil(this.filteredLists.length / this.itemsPerPage);\n    },\n    paginatedItems() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      return this.filteredLists.slice(start, start + this.itemsPerPage);\n    },\n    filteredLists() {\n      let result = this.lists;\n\n      // 24.12.11 수정 - 검색 옵션 필터링\n      // 검색어가 있는 경우 필터링을 시작하기 전에 검색 기준에 따라 필터링을 적용\n      if (this.searchQuery) {\n        if (this.searchAs === 'store') {\n          result = result.filter((list) =>\n            list.branch.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n        } else if (this.searchAs === 'title') {\n          result = result.filter((list) =>\n            list.title.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n        }\n      }\n\n      // 매장 검색 필터\n      // if (this.selectedStore) {\n      //   result = result.filter((list) => list.branch.name === this.selectedStore);\n      // }\n\n      // 제목 검색 필터\n      // if (this.selectedAsDetails) {\n      //   result = result.filter(\n      //     (list) => list.description === this.selectedAsDetails\n      //   );\n      // }\n\n      // 검색어 필터\n      // if (this.searchQuery) {\n      //   const query = this.searchQuery.toLowerCase();\n      //   result = result.filter(\n      //     (list) =>\n      //       list.description.toLowerCase().includes(query) ||\n      //       list.branch.name.toLowerCase().includes(query)\n      //   );\n      // }\n\n      // 날짜 검색 필터\n      if (this.selectedDate.start && this.selectedDate.end) {\n        const startDate = new Date(this.selectedDate.start);\n        let endDate = new Date(this.selectedDate.end);\n\n        // endDate가 선택된 경우, 시간을 23:59:59로 설정\n        endDate.setHours(23, 59, 59, 999);\n\n        result = result.filter(\n          (list) =>\n            new Date(list.requestedAt) >= startDate &&\n            new Date(list.requestedAt) <= endDate\n        );\n      } else if (this.selectedDate.start) {\n        // startDate만 있을 경우 필터링\n        const startDate = new Date(this.selectedDate.start);\n        result = result.filter(\n          (list) => new Date(list.requestedAt) >= startDate\n        );\n      } else if (this.selectedDate.end) {\n        // endDate만 있을 경우 필터링, 시간을 23:59:59로 설정\n        const endDate = new Date(this.selectedDate.end);\n        endDate.setHours(23, 59, 59, 999);\n        result = result.filter((list) => new Date(list.requestedAt) <= endDate);\n      }\n\n      // 탭 필터\n      if (this.selectedTab !== \"전체 내역\") {\n        result = result.filter((list) => list.status === this.selectedTab);\n      }\n\n      // 24.12.04 수정 - 추가\n      // 전체 탭이 선택되었으면 날짜 필터 적용 안 함\n      if (this.selectedDateTab !== \"전체\") {\n        if (this.selectedDate.start && this.selectedDate.end) {\n          const startDate = new Date(this.selectedDate.start);\n          let endDate = new Date(this.selectedDate.end);\n          endDate.setHours(23, 59, 59, 999);\n\n          result = result.filter(\n            (list) =>\n              new Date(list.requestedAt) >= startDate &&\n              new Date(list.requestedAt) <= endDate\n          );\n        } else if (this.selectedDate.start) {\n          const startDate = new Date(this.selectedDate.start);\n          result = result.filter(\n            (list) => new Date(list.requestedAt) >= startDate\n          );\n        } else if (this.selectedDate.end) {\n          const endDate = new Date(this.selectedDate.end);\n          endDate.setHours(23, 59, 59, 999);\n          result = result.filter((list) => new Date(list.requestedAt) <= endDate);\n        }\n      }\n      return result;\n    },\n    // 상태별 항목 수 계산\n    statusCounts() {\n      return {\n        전체: this.lists.length,\n        // 처리중: this.lists.filter((list) => list.status === \"처리중\").length,\n        // 보류: this.lists.filter((list) => list.status === \"보류\").length,\n        // 24.11.18 수정\n        진행중: this.lists.filter((list) => list.status === \"진행중\").length,\n        취소: this.lists.filter((list) => list.status === \"취소\").length,\n        접수: this.lists.filter((list) => list.status === \"접수\").length,\n        완료: this.lists.filter((list) => list.status === \"완료\").length,\n      };\n    },\n    llSelected: {\n      get() {\n        if (this.paginatedItems.length === 0) return false;\n        return this.paginatedItems.every((item) =>\n          this.selectedItems.includes(item.number)\n        );\n      },\n      set(value) {\n        if (value) {\n          const newSelections = this.paginatedItems\n            .map((item) => item.number)\n            .filter((number) => !this.selectedItems.includes(number));\n          this.selectedItems = [...this.selectedItems, ...newSelections];\n        } else {\n          const toRemove = this.paginatedItems.map((item) => item.number);\n          this.selectedItems = this.selectedItems.filter(\n            (number) => !toRemove.includes(number)\n          );\n        }\n      },\n    },\n  },\n  mounted() {\n    this.getAS();\n  },\n  // 24.12.04 수정 - 추가\n  watch: {\n    filteredLists() {\n      this.currentPage = 1; // 검색 결과 변경 시 첫 페이지로 이동\n    },\n  },\n  methods: {\n    // 24.12.04 수정 - 추가\n    selectDateTab(dateTab) {\n      this.selectedDateTab = dateTab;\n      if (dateTab === \"전체\") {\n        // 전체를 선택하면 날짜 초기화\n        this.selectedDate.start = \"\";\n        this.selectedDate.end = \"\";\n      }\n    },\n    // 24.12.04 수정 - 추가\n    validateStartDate() {\n      if (this.selectedDate.end && new Date(this.selectedDate.start) > new Date(this.selectedDate.end)) {\n        alert(\"시작 날짜는 종료 날짜보다 늦을 수 없습니다.\");\n        this.selectedDate.start = \"\"; // 초기화\n      }\n      this.selectedDateTab = \"\"; // 전체 탭 해제\n    },\n    // 24.12.04 수정 - 추가\n    validateEndDate() {\n      if (this.selectedDate.start && new Date(this.selectedDate.end) < new Date(this.selectedDate.start)) {\n        alert(\"종료 날짜는 시작 날짜보다 이를 수 없습니다.\");\n        this.selectedDate.end = \"\"; // 초기화\n      }\n      this.selectedDateTab = \"\"; // 전체 탭 해제\n    },\n    async getAS() {\n      this.lists = await adminStore.getTask(`as-requests`);\n      console.log(\"manager : : : \", this.lists);\n    },\n    addStore() {\n      this.$router.push({ path: \"/adminas-managementdetail\" });\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.currentPage = 1; // 탭 선택 시 페이지를 초기화\n    },\n    statusClass(status) {\n      if (status === \"접수\") return \"status-reception\";\n      if (status === \"진행중\") return \"status-processing\";\n      if (status === \"취소\") return \"status-hold\";\n      if (status === \"완료\") return \"status-complete\";\n      return \"\";\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    goToPage(page) {\n      // this.currentPage = page;\n      // 24.12.04 수정 - 추가\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    toggleSelectAll() {\n      if (this.isAllSelected) {\n        this.selectedItems = this.selectedItems.filter(\n          (id) => !this.paginatedItems.some((list) => list.id === id)\n        );\n      } else {\n        const newSelection = this.paginatedItems\n          .filter((list) => !this.selectedItems.includes(list.id))\n          .map((list) => list.id);\n        this.selectedItems = this.selectedItems.concat(newSelection);\n      }\n    },\n    async deleteSelected() {\n      if (this.selectedItems.length === 0) {\n        alert(\"삭제할 항목을 선택해주세요.\");\n        return;\n      }\n\n      if (confirm(\"선택된 항목을 정말 삭제하시겠습니까?\")) {\n\n        for (var i = 0; i < this.selectedItems.length; i++) {\n          const deleteDt = await adminStore.deleteTask(`as-requests/${this.selectedItems[i]}`);\n        }\n\n\n\n        this.lists = this.lists.filter(\n          (list) => !this.selectedItems.includes(list.id)\n        );\n        this.selectedItems = [];\n\n        // 페이지가 삭제 후 총 페이지 수보다 클 경우 현재 페이지를 조정\n        if (this.currentPage > this.totalPages) {\n          this.currentPage = this.totalPages || 1;\n        }\n      }\n    },\n    search() {\n      // 검색 버튼 클릭 시 페이지를 첫 페이지로 이동\n      this.currentPage = 1;\n    },\n    toGoAsDetail(item) {\n      // Step 1: 클릭된 항목의 전체 정보와 ID 출력\n      console.log(\"Step 1: 클릭된 A/S 항목\", item);\n      console.log(\"Step 1: 선택된 A/S 항목 ID:\", item.id);\n\n      if (item.id) {\n        // Step 2: 라우터 이동 전 ID 출력\n        console.log(\"Step 2: 라우터 이동 준비, ID:\", item.id);\n\n        // 라우터로 페이지 이동\n        this.$router.push({\n          path: \"/adminas-managementdetail\",\n          query: { id: item.id },\n        });\n\n        // Step 3: 라우터 이동 후 출력 (라우터의 beforeEach 훅에서 확인 가능)\n        console.log(\"Step 3: 라우터 이동 완료\");\n      } else {\n        console.error(\"Step 1: 항목에 ID가 없습니다:\", item);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background-color: #f5f6f6;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n\n.wrapper {\n  flex-grow: 1;\n  /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  gap: 20px;\n}\n\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* search-box */\n.search-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 190px;\n  width: 100%;\n}\n\n.date-search {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.date-search input {\n  width: 250px;\n  height: 60px;\n  border: 1px solid #ddd;\n  padding: 0 20px;\n}\n\n/* 24.12.04 수정 */\n.datetab-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  padding: 16px 30px;\n  border: 1px solid #ddd;\n  gap: 10px;\n  background-color: #fff;\n}\n\n.store-search {\n  display: flex;\n  align-items: center;\n}\n\nselect {\n  align-items: center;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  height: 60px;\n  justify-content: space-between;\n  padding: 0px 20px;\n  position: relative;\n  width: 250px;\n  border: 1px solid #ddd;\n  margin: 12px;\n}\n\n.search-container {\n  /* width: 100%; */\n  width: 76%;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  height: 60px;\n  justify-content: space-between;\n}\n\n.search-container img {\n  height: 24px;\n  position: relative;\n  width: 24px;\n  text-align: right;\n}\n\n.search-input {\n  border: none;\n  outline: none;\n  padding: 10px;\n  width: 300px;\n}\n\n/* 리스트 박스 */\n.list-box {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #fff;\n  padding: 30px;\n}\n\n.list-box-btn {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.add-btn {\n  letter-spacing: 0;\n  line-height: normal;\n  position: relative;\n  white-space: nowrap;\n  width: 150px;\n  height: 45px;\n  border: none;\n  background-color: #184199;\n  color: #fff;\n}\n\n.delete-btn {\n  letter-spacing: 0;\n  line-height: normal;\n  position: relative;\n  white-space: nowrap;\n  width: 150px;\n  height: 45px;\n  border: none;\n  background-color: #ccc;\n  color: #fff;\n  margin-right: 10px;\n}\n\n.table-container {\n  background-color: #fff;\n  width: 100%;\n  overflow-x: auto;\n}\n\n.course-list {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 26px 0px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n}\n\nth {\n  background-color: #f5f5f5;\n}\n\n/*리스트 박스 */\n.as-list-box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  background-color: #fff;\n  padding: 30px;\n}\n\n.tabs {\n  background-color: #fff;\n  height: 45px;\n}\n\n.tab-btn {\n  flex: 1;\n  padding: 15px;\n  text-align: center;\n  border: none;\n  background-color: #f5f5f5;\n  cursor: pointer;\n  width: 150px;\n}\n\n/* 24.12.04 수정 */\n.datetab-btn.active,\n.tab-btn.active {\n  background-color: #003399;\n  color: #fff;\n}\n\n/* 테이블 스타일 */\n.table-container {\n  background-color: #fff;\n  width: 100%;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  padding: 26px 0px;\n  border-bottom: 1px solid #ddd;\n  text-align: center;\n}\n\nth {\n  background-color: #f5f5f5;\n}\n\n/* 버튼 - 접수 */\n.status-reception {\n  color: #14b655;\n  border: 1px solid #14b655;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  /* 셀 안에서 중앙에 위치하도록 변경 */\n  text-align: center;\n  /* 텍스트도 가운데 정렬 */\n}\n\n/* 버튼 - 처리중 */\n.status-processing {\n  color: #d30f1a;\n  border: 1px solid #d30f1a;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  /* 셀 안에서 중앙에 위치하도록 변경 */\n  text-align: center;\n  /* 텍스트도 가운데 정렬 */\n}\n\n/* 버튼 - 보류 */\n.status-hold {\n  color: #999999;\n  border: 1px solid #999999;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  text-align: center;\n}\n\n/* 버튼 - 완료 */\n.status-complete {\n  color: #184199;\n  border: 1px solid #184199;\n  width: 80px;\n  padding: 11px 0px;\n  border-radius: 5px;\n  display: inline-block;\n  text-align: center;\n}\n\n.pagination-controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n}\n\n/* 24.11.11 수정 - 추가 */\n.page-numbers {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: #eeeeee;\n  cursor: pointer;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n/* 24.12.04 수정 - 추가 */\n.page-number:hover {\n  background-color: #eeeeee;\n}\n\n.pagination-arrow {\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n</style>\n"]}]}