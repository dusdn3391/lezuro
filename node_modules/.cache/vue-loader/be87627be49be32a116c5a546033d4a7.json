{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminShopAddModal.vue?vue&type=style&index=0&id=5bb0be24&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminShopAddModal.vue","mtime":1733189586341},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5tb2RhbC1vdmVybGF5IHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHRvcDogMDsKICAgIGxlZnQ6IDA7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41KTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICB6LWluZGV4OiAxMDAwOwp9CgoubW9kYWwgewogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgICB3aWR0aDogODgwcHg7CiAgICBwYWRkaW5nOiA0MHB4OwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIGJveC1zaGFkb3c6IDBweCA0cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgICAvKiAyNC4xMi4wMyDsiJjsoJUgLSDstpTqsIAgKi8KICAgIGhlaWdodDogMTAwJTsKICAgIG92ZXJmbG93LXk6IGF1dG87Cn0KCi5tb2RhbC1oZWFkZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwOwp9CgouZXF1aXBtZW50X25hbWUgewogICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgIHdpZHRoOiA5NC41cHg7Cn0KCi5jbG9zZS1idXR0b24gewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGZvbnQtc2l6ZTogMjBweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnBvaW50LWNoYXJnZSB7CiAgICBtYXJnaW4tdG9wOiAyMHB4Owp9CgoucG9pbnQtdGl0bGUgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBnYXA6IDEwcHg7CiAgICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgouZXF1aXAtYWxpZ24gewogICAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjZGNjsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cgouc2hvcC10aXRsZSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGdhcDogMTJweDsKfQoKLmFkZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0NDQ0OwogICAgd2lkdGg6IDE1MHB4OwogICAgaGVpZ2h0OiA2MHB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgY3Vyc29yOiBwb2ludGVyOwp9Cgouc3RvcmUgewogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpOwogICAgaGVpZ2h0OiA2MHB4OwogICAgcGFkZGluZzogMCAxNXB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5jYW5jZWwtYnV0dG9uLAouY29uZmlybS1idXR0b24gewogICAgd2lkdGg6IDQ5JTsKICAgIGhlaWdodDogNTBweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmNhbmNlbC1idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzk5OTk5OTsKICAgIGNvbG9yOiAjZmZmZmZmOwp9CgouY29uZmlybS1idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzE4NDE5OTsKICAgIGNvbG9yOiAjZmZmZmZmOwp9CgouY2FuY2VsLWJ1dHRvbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzc3Nzc3Owp9CgouY29uZmlybS1idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMjA4MDsKfQoKLm1vZGFsLWZvb3RlciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgbWFyZ2luLXRvcDogMzBweDsKfQoKLmVxdWlwIHsKICAgIHdpZHRoOiA1NTBweDsKICAgIGhlaWdodDogNjBweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgICBwYWRkaW5nOiAwIDE1cHg7CiAgICBvdXRsaW5lOiBub25lOwoKfQoKLmNvdW50IHsKICAgIHdpZHRoOiAxNTBweDsKICAgIGhlaWdodDogNjBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmFkZC1tb2RhbC1idG4tYWxpZ24gewogICAgZGlzcGxheTogZmxleDsKICAgIGdhcDogMTBweDsKfQo="},{"version":3,"sources":["AdminShopAddModal.vue"],"names":[],"mappings":";AAofile":"AdminShopAddModal.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n    <div class=\"modal-overlay\" @click=\"closeModal\">\n        <div class=\"modal\" @click.stop>\n            <!-- 모달 헤더 -->\n            <div class=\"modal-header\">\n                <div class=\"modal-title pretendard-extra-extra-bold-log-cabin-24px\">매장 추가</div>\n                <img class=\"material-symbolsclose-3\"\n                    src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/material-symbols-close.svg\"\n                    alt=\"material-symbols:close\" @click=\"closeModal\" />\n            </div>\n\n            <!-- 장비 리스트 반복 -->\n            <div class=\"point-charge\">\n                <div class=\"shop-title\">\n                    <div class=\"equipment_name pretendard-regular-normal-log-cabin-16px\"> 매장명</div>\n                    <!-- <input type=\"text\" class=\"store pretendard-medium-log-cabin-16px\" placeholder=\"매장명을 입력해주세요\"> -->\n                    <!-- 24.11.18 수정 - v-if 추가 -->\n                    <select v-if=\"!isEditMode\" v-model=\"selectedShopId\" class=\"store pretendard-medium-log-cabin-16px\">\n                        <option value=\"\" disabled selected>매장명을 선택해주세요 </option>\n                        <option v-for=\"shop in shopOptions\" :key=\"shop.id\" :value=\"shop.id\">\n                            {{ shop.name }}\n                        </option>\n                    </select>\n                    <!-- 24.11.18 수정 - 추가 : edit 모드에서는 <option>을 고정으로 -->\n                    <select v-else class=\"store pretendard-medium-log-cabin-16px\" disabled>\n                        <option value=\"\" disabled selected>{{ machine.branchName }}</option>\n                    </select>\n                </div>\n                <div v-for=\"(equipment, index) in equipmentList\" :key=\"index\" class=\"point-title\">\n                    <div class=\"equipment_name pretendard-regular-normal-log-cabin-16px\">\n                        장비종류{{ index + 1 }}\n                    </div>\n                    <div :class=\"'equip' + (index + 1)\" class=\"equip equip-align pretendard-medium-log-cabin-16px\">\n                        {{ equipment.name }}\n                    </div>\n                    <input type=\"text\" v-model=\"quantities[index]\" class=\"count pretendard-medium-mountain-mist-16px\"\n                        placeholder=\"수량\" />\n                </div>\n\n                <!-- <p>수량 배열: {{ quantities }}</p> -->\n\n                <!-- 장비추가 부분 -->\n                <div class=\"point-title\">\n                    <div class=\"equipment_name pretendard-regular-normal-log-cabin-16px\">\n                        장비추가\n                    </div>\n                    <input type=\"text\" v-model=\"newEquipment\" class=\"equip pretendard-medium-log-cabin-16px\"\n                        placeholder=\"장비명을 입력해주세요\" />\n                    <button class=\"add pretendard-medium-white-16px\" @click=\"addEquipment\">장비추가</button>\n                </div>\n            </div>\n\n            <div class=\"add-modal-btn-align\">\n                <!-- 선택하기/취소하기 버튼 -->\n                <button class=\"cancel-button pretendard-bold-white-18px\" @click=\"closeModal\">취소하기</button>\n                <!-- 24.12.03 수정 - 추가 -->\n                <button class=\"confirm-button pretendard-bold-white-18px\" @click=\"confirmSelection\"> {{ isEditMode ?\n                    '수정하기' : '등록하기' }}</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { adminStore } from '@/store/adminStore';  // API 호출\nexport default {\n    name: \"AdminShopAddModal\",\n    data() {\n        return {\n            // 초기 장비 리스트\n            equipmentList: [\n                { name: \"키오스크\" },\n                { name: \"카메라 센서\" },\n                { name: \"빔 프로젝트\" },\n                { name: \"오토키업기\" },\n                { name: \"티 브러쉬\" },\n                { name: \"타석매트\" },\n            ],\n            newEquipment: \"\", // 새로운 장비명을 위한 데이터\n            shopOptions: [],\n            selectedShopId: \"\",\n            quantities: [],\n            mode: \"add\", // 24.11.18 수정 - 추가\n            isEditMode: !!this.machine.id, // machine.id가 있을 경우 edit 모드 -  24.11.18 수정 - 추가\n        };\n    },\n    props: {\n        // isVisible: {\n        //     type: Boolean,\n        //     required: true,\n        // },\n        machine: {\n            type: Object,\n            required: false,\n            default: () => ({}), // 기본값을 빈 객체로 설정\n        },\n    },\n    mounted() {\n        this.getGameshop();\n        // 24.11.18 수정 - 추가\n        if (this.mode === \"edit\" && this.machine.branchName) {\n            // edit 모드일 경우 branchName을 selectedShopId에 설정\n            this.selectedShopId = this.machine.branchName;\n        }\n    },\n    created() {\n        // Initialize the quantities array with empty strings for each equipment\n        this.quantities = new Array(this.equipmentList.length).fill('');\n\n        // 24.11.18 수정 - 추가\n        if (this.isEditMode && this.machine) {\n            this.quantities = [\n                this.machine.kiosk || '',\n                this.machine.cameraSensor || '',\n                this.machine.beamProjector || '',\n                this.machine.autoTeeUp || '',\n                this.machine.teeBrush || '',\n                this.machine.targetMat || ''\n            ];\n        }\n    },\n    // 24.11.18 수정 - 추가\n    watch: {\n        isEditMode(newValue) {\n            if (newValue && this.machine) {\n                this.quantities = [\n                    this.machine.kiosk || '',\n                    this.machine.cameraSensor || '',\n                    this.machine.beamProjector || '',\n                    this.machine.autoTeeUp || '',\n                    this.machine.teeBrush || '',\n                    this.machine.targetMat || ''\n                ];\n            }\n        }\n    },\n    methods: {\n        // 새로운 장비 추가\n        addEquipment() {\n            if (this.newEquipment.trim()) {\n                // 새로운 장비를 리스트에 추가\n                this.equipmentList.push({ name: this.newEquipment });\n                // 24.12.03 수정 - 추가\n                // 추가된 장비의 수량을 위해 quantities 배열도 업데이트\n                this.quantities.push('');\n                this.newEquipment = \"\"; // 입력 필드 초기화\n            } else {\n                alert(\"장비명을 입력해주세요!\");\n            }\n        },\n        async getGameshop() {\n            try {\n                const response = await adminStore.getTask(\"v1/branch/list\");\n                this.shopOptions = response.map(shop => ({ id: shop.id, name: shop.name }));\n                console.log(\"shopOptions: [], : :: : \", JSON.stringify(this.shopOptions))\n            } catch (error) {\n                console.error(\"매장 데이터를 가져오는 중 오류 발생:\", error);\n            }\n        },\n        closeModal() {\n            this.$emit(\"close\"); // 부모 컴포넌트에 모달 닫기 이벤트 전달\n        },\n        // async confirmSelection() {\n        //     const params = {\n        //         \"branchId\": parseInt(this.selectedShopId),\n        //         \"kiosk\": parseInt(this.quantities[0]),\n        //         \"cameraSensor\": parseInt(this.quantities[1]),\n        //         \"beamProjector\": parseInt(this.quantities[2]),\n        //         \"autoTeeUp\": parseInt(this.quantities[3]),\n        //         \"teeBrush\": parseInt(this.quantities[4]),\n        //         \"targetMat\": parseInt(this.quantities[5])\n        //     }\n\n        //     console.log(\"selectedShopId : : : :\", this.selectedShopId)\n        //     console.log(\"selectedShopId : : : :\", JSON.stringify(params))\n        //     // 선택 확인 로직을 추가할 수 있습니다.\n        //     try {\n        //         const response = await adminStore.postTask(\"branch-equipment\", params);\n\n        //         console.log(\"shopOptions: [], : :: : \", JSON.stringify(response)\n        //         )\n        //         this.$emit(\"confirm\"); // 부모 컴포넌트에 확인 이벤트 전달\n        //     } catch (error) {\n        //         console.error(\"매장 데이터를 가져오는 중 오류 발생:\", error);\n        //     }\n\n        // },\n\n        // 24.11.18 수정\n        async confirmSelection() {\n\n            try {\n                let response;\n                if (this.isEditMode) {\n                    const params = {\n                        kiosk: parseInt(this.quantities[0]) || 0,\n                        cameraSensor: parseInt(this.quantities[1]) || 0,\n                        beamProjector: parseInt(this.quantities[2]) || 0,\n                        autoTeeUp: parseInt(this.quantities[3]) || 0,\n                        teeBrush: parseInt(this.quantities[4]) || 0,\n                        targetMat: parseInt(this.quantities[5]) || 0,\n                        // 24.12.03 수정 - 추가\n                        // 추가된 장비 정보를 equipmentDetails 형식으로 생성\n                        equipmentDetails: this.equipmentList.slice(6).map((equipment, index) => ({\n                            title: equipment.name,\n                            num: parseInt(this.quantities[index + 6]) || 0,\n                        })),\n                    };\n\n                    response = await adminStore.updateTask(\n                        `branch-equipment/${this.machine.id}`,\n                        params\n                    );\n                } else {\n                    const params = {\n                        branchId: parseInt(this.selectedShopId),\n                        kiosk: parseInt(this.quantities[0]) || 0,\n                        cameraSensor: parseInt(this.quantities[1]) || 0,\n                        beamProjector: parseInt(this.quantities[2]) || 0,\n                        autoTeeUp: parseInt(this.quantities[3]) || 0,\n                        teeBrush: parseInt(this.quantities[4]) || 0,\n                        targetMat: parseInt(this.quantities[5]) || 0,\n                        // 24.12.03 수정 - 추가\n                        // 추가된 장비 정보를 equipmentDetails 형식으로 생성\n                        equipmentDetails: this.equipmentList.slice(6).map((equipment, index) => ({\n                            title: equipment.name,\n                            num: parseInt(this.quantities[index + 6]) || 0,\n                        })),\n                    };\n\n                    response = await adminStore.postTask(\"branch-equipment\", params);\n\n                }\n                console.log(\"응답:\", response);\n                this.$emit(\"confirm\");\n            } catch (error) {\n                console.error(\"오류 발생:\", error);\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n}\n\n.modal {\n    background-color: white;\n    width: 880px;\n    padding: 40px;\n    border-radius: 10px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n    /* 24.12.03 수정 - 추가 */\n    height: 100%;\n    overflow-y: auto;\n}\n\n.modal-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-bottom: 20px;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.equipment_name {\n    white-space: nowrap;\n    width: 94.5px;\n}\n\n.close-button {\n    background: none;\n    border: none;\n    font-size: 20px;\n    cursor: pointer;\n}\n\n.point-charge {\n    margin-top: 20px;\n}\n\n.point-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.equip-align {\n    background-color: #F5F6F6;\n    display: flex;\n    align-items: center;\n    align-items: center;\n    justify-content: center;\n}\n\n.shop-title {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n}\n\n.add {\n    background-color: #444444;\n    width: 150px;\n    height: 60px;\n    text-align: center;\n    border: none;\n    cursor: pointer;\n}\n\n.store {\n    width: calc(100% - 30px);\n    height: 60px;\n    padding: 0 15px;\n    border: 1px solid #ddd;\n    margin-bottom: 20px;\n}\n\n.cancel-button,\n.confirm-button {\n    width: 49%;\n    height: 50px;\n    border: none;\n    cursor: pointer;\n}\n\n.cancel-button {\n    background-color: #999999;\n    color: #ffffff;\n}\n\n.confirm-button {\n    background-color: #184199;\n    color: #ffffff;\n}\n\n.cancel-button:hover {\n    background-color: #777777;\n}\n\n.confirm-button:hover {\n    background-color: #002080;\n}\n\n.modal-footer {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 30px;\n}\n\n.equip {\n    width: 550px;\n    height: 60px;\n    border: 1px solid #ddd;\n    padding: 0 15px;\n    outline: none;\n\n}\n\n.count {\n    width: 150px;\n    height: 60px;\n    text-align: center;\n}\n\n.add-modal-btn-align {\n    display: flex;\n    gap: 10px;\n}\n</style>\n"]}]}