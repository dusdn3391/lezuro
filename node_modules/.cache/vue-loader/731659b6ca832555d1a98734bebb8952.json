{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/manager/ManagerRoom.vue?vue&type=style&index=0&id=0ef7cc74&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/manager/ManagerRoom.vue","mtime":1730875565879},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KLndyYXBwZXIgewogIGZsZXgtZ3JvdzogMTsgLyog64KY66i47KeAIOqzteqwhOydhCDssKjsp4DtlZjqsowg7ZWoICovCiAgcGFkZGluZzogMzBweDsKICBnYXA6IDIwcHg7Cn0KLyog7YOA7J207YuAIOuwleyKpCAqLwoudGl0bGUtYm94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyog64Kg7KecIOyEoO2DnSDrsJXsiqQgKi8KLmRhdGUtcGlja2VyLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQouZGF0ZXtwYWRkaW5nOjIzLjVweCAyMHB4fQovKiDrsKkg66as7Iqk7Yq4IOuwleyKpCAqLwoucm9vbS1saXN0LWJveCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzoyMHB4OwogIHBhZGRpbmctYm90dG9tOjEzMHB4Owp9CgovKiDqsJzrs4Qg67CpIOuwleyKpCAqLwoucm9vbS1ib3ggewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogNDBweCAzMHB4OwogIHdpZHRoOiAyNzBweDsKICBoZWlnaHQ6IDI3MHB4OwogIGJvcmRlci1yYWRpdXM6IDVweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwp9CgovKiDrsKkg7KCc66qp6rO8IOyYiOyVvSDrsoTtirwgKi8KLnJvb20taGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9CgoucmVzZXJ2ZS1idG4gewogIGJhY2tncm91bmQtY29sb3I6ICNFMzRENTU7CiAgY29sb3I6ICNmZmY7CiAgYm9yZGVyOiBub25lOwogIHBhZGRpbmc6IDVweDsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KCi8qIOyDge2DnCDtkZzsi5wgKi8KLnJvb20tc3RhdHVzIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBnYXA6NnB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5zdGF0dXMtbGFiZWwgewogIHBhZGRpbmc6IDcuNXB4IDYuNXB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjb2xvcjogI2ZmZjsKfQoKLnJvb20tYm94LmF2YWlsYWJsZSB7CiAgYm9yZGVyLWNvbG9yOiAjMTRCNjU1Owp9Cgoucm9vbS1ib3gud2FpdGluZyB7CiAgYm9yZGVyLWNvbG9yOiAjRDMwRjFBOwp9Cgoucm9vbS1ib3gudXBjb21pbmcgewogIGJvcmRlci1jb2xvcjogIzE4NDE5OTsKCn0KCi5hdmFpbGFibGUgLnN0YXR1cy1sYWJlbHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTRCNjU1Owp9CgouYXZhaWxhYmxlIC5yZXNlcnZhdGlvbi10aW1le2NvbG9yOiMxNEI2NTU7fQoKLndhaXRpbmcgLnN0YXR1cy1sYWJlbHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDMwRjFBOwoKfQoud2FpdGluZyAucmVzZXJ2YXRpb24tdGltZSB7Y29sb3I6I0QzMEYxQX0KCi51cGNvbWluZyAuc3RhdHVzLWxhYmVsewogIGJhY2tncm91bmQtY29sb3I6ICMxODQxOTk7Cn0KLnVwY29taW5nIC5yZXNlcnZhdGlvbi10aW1lewogICAgY29sb3I6IzE4NDE5OTsKfQoucmVzZXJ2YXRpb24tdGltZSB7CiAgY29sb3I6ICMzMzM7Cn0KCi8qIOyYiOyVvSDsg4HshLggKi8KLnJlc2VydmF0aW9uLWRldGFpbHMgewogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIHBhZGRpbmc6IDEwcHg7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJvcmRlcjogbm9uZTsKfQoKLnJlc2VydmF0aW9uLXRpbWUgewoKICBsZXR0ZXItc3BhY2luZzogLTFweDsKfQoKLnJlc2VydmF0aW9uLWFjdGlvbnMgewogIGRpc3BsYXk6IGZsZXg7Cn0KLnJlc2VydmF0aW9uLXRpbWUtYmxvY2t7CiAgICAgIGxldHRlci1zcGFjaW5nOi0xcHg7Cn0KLmRlbGV0ZS1idG4sCi5lZGl0LWJ0biB7CiAgICAgIGxldHRlci1zcGFjaW5nOiAtMnB4OwogIGJhY2tncm91bmQ6IG5vbmU7CiAgYm9yZGVyOiBub25lOwogIGNvbG9yOiAjRDMwRjFBOwogIGdhcDo2cHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouZWRpdC1idG4gewogIGNvbG9yOiAjMTg0MTk5Owp9CgovKiArTW9yZSDrsoTtirwgKi8KLm1vcmUtYnRuIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICNiYmI7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cgouc2Nyb2xsLWNvbnRhaW5lciB7CiAgbWF4LWhlaWdodDogbm9uZTsKICBvdmVyZmxvdy15OiBoaWRkZW47Cn0KCi8qIOyKpO2BrOuhpCDqsIDriqXtlZwg7IOB7YOc7J28IOuVjCDsiqTtgazroaTrsJQg7KCB7JqpICovCi5zY3JvbGwtY29udGFpbmVyLnNjcm9sbGFibGUgewogIG1heC1oZWlnaHQ6IDE1MHB4OyAvKiA06rCcIOydtOyDgeydmCDsmIjslb3snbQg7J6I7J2EIOuVjCDsiqTtgazroaTrsJTqsIAg7IOd6rmAICovCiAgb3ZlcmZsb3cteTogYXV0bzsKfQo="},{"version":3,"sources":["ManagerRoom.vue"],"names":[],"mappings":";AA2XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ManagerRoom.vue","sourceRoot":"src/components/manager","sourcesContent":["<template>\n   <div class=\"all\">\n    <ManagerHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <ManagerNavbar />\n        <div class=\"wrapper\">\n    <!-- 타이틀 부분 -->\n    <div class=\"title-box \">\n      <h2 class=\"pretendard-bold-normal-black-28px\">예약관리</h2>\n    </div>\n\n    <!-- 날짜 선택 부분 -->\n    <div class=\"date-picker-box\">\n      <input type=\"date\" class=\"date pretendard-regular-normal-mine-shaft-18px \" v-model=\"selectedDate\" />\n    </div>\n\n    \n    <!-- 룸 리스트 부분 -->\n    <div class=\"room-list-box\">\n      <div\n        v-for=\"room in availableRoom\"\n        :key=\"room.id\"\n        :class=\"['room-box', room.status]\"\n      >\n        <div class=\"room-header\">\n          <span class=\"pretendard-bold-normal-black-28px\">{{ room.room_id }} 번방</span>\n          <button class=\"reserve-btn pretendard-medium-white-14px\" @click=\"openModal\">예약하기</button>\n        </div>\n\n        <div class=\"room-status\">\n          <span class=\"status-label pretendard-medium-white-12px\" :class=\"room.status\">{{ room.status === \"available\" ? \"이용중\" : room.status === \"waiting\" ? \"대기중\" : \"예약\" }}</span>\n          <div v-if=\"room.reservations && room.reservations.length\">\n          <span v-if=\"room.status !== 'waiting' && room.reservations[0].check === '사이값'\" class=\"reservation-time pretendard-bold-24px\">{{ room.reservations[0].startTime.slice(11, 16) }} ~ {{ room.reservations[0].endTime.slice(11, 16) }}</span>\n        </div>\n        </div>\n\n        <!-- <div v-if=\"room.reservations\">aaa</div>\n        <div v-else>bbbb</div> -->\n        \n        <!-- 예약 목록 -->\n         <!--   <div v-if=\"room.reservations && room.reservations.length\">aaabbbccc</div> -->\n       <div :class=\"['scroll-container', { 'scrollable': shouldScrollBeVisible(room) }]\" v-if=\"room.status !== 'waiting'\">\n        <div v-if=\"room.reservations && room.reservations.length\">\n        <!-- 처음 2개의 예약을 항상 표시 -->\n          <div v-for=\"(reservation) in visibleReservations(room)\" :key=\"reservation.id\" class=\"reservation-details\" v-if=\"reservation.check === '초과값' || reservation.check === '사이값'\">\n            <div class=\"reservation-time-block pretendard-regular-normal-black-14px\">\n              \n              예약 {{ reservation.startTime.slice(11, 16) }} ~ {{ reservation.endTime.slice(11, 16) }}\n            </div>\n            <div class=\"reservation-actions\">\n              <button class=\"delete-btn pretendard-medium-normal-granite-gray-12px\">삭제</button>\n              <span>|</span>\n              <button class=\"edit-btn pretendard-medium-normal-granite-gray-12px\">수정</button>\n            </div>\n          </div>\n          \n          <!-- +MORE 버튼 -->\n        \n          <div v-show=\"shouldShowMoreButton(room)\" class=\"more-btn\" @click=\"showMoreReservations(room)\">\n            + MORE\n          </div>\n          \n        </div>\n        \n      </div>\n\n      </div>\n      <ManagerReservationModal v-if=\"isModalVisible\" @close=\"closeModal\" />\n    </div>\n  </div>\n      </div>\n    </div>\n   </div>\n</template>\n\n<script>\n\n\nimport ManagerReservationModal from \"./ManagerReservationModal.vue\";\nimport ManagerHeader from \"./ManagerHeader.vue\";\nimport ManagerNavbar from \"./ManagerNavbar.vue\";\nimport { managerStore } from '@/store/managerStore';  // API 호출\nimport { ref } from 'vue';\n\n\nexport default {\n  name:\"ManagerRoom\",\n    components:{\n         ManagerReservationModal,\n           ManagerHeader,\n    ManagerNavbar,\n    },\n  data() {\n    return {\n        isModalVisible:false,\n      selectedDate: \"2024-12-15\",\n      currentDate : \"\",\n      currentTime : \"\",\n      currentDateTime : \"\",\n      availableRoom : [],\n      roomDt : [],\n      rooms: [\n        {\n          id: 1,\n          name: \"1번방\",\n          statusText: \"이용중\",\n          statusClass: \"available\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n            { id: 3, time: \"12:00 ~ 14:00\" },\n\n              { id: 4, time: \"12:00 ~ 14:00\" },\n          ],\n             showMore: false,\n        },\n        {\n          id: 2,\n          name: \"2번방\",\n          statusText: \"대기중\",\n          statusClass: \"waiting\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"12:00 ~ 14:00\" },\n          ],\n             showMore: false,\n        },\n        {\n          id: 3,\n          name: \"3번방\",\n          statusText: \"예약\",\n          statusClass: \"upcoming\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n            { id: 3, time: \"14:00 ~ 16:00\" }, \n          ],\n             showMore: false,\n        },\n        {\n          id: 4,\n          name: \"4번방\",\n          statusText: \"예약\",\n          statusClass: \"upcoming\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" }\n          ],\n             showMore: false,\n        },\n        {\n          id: 5,\n          name: \"5번방\",\n          statusText: \"대기중\",\n          statusClass: \"waiting\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n          ],\n             showMore: false,\n        },\n        {\n          id: 6,\n          name: \"6 번방\",\n          statusText: \"이용중\",\n          statusClass: \"available\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n          ],\n                     showMore: false,\n        },\n        {\n          id: 7,\n          name: \"7 번방\",\n          statusText: \"예약\",\n          statusClass: \"upcoming\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n            { id: 3, time: \"14:00 ~ 16:00\" }, \n          ],\n             showMore: false,\n        },\n        {\n          id: 8,\n          name: \"8번방\",\n          statusText: \"대기중\",\n          statusClass: \"waiting\",\n          currentReservation: \"12:00 ~ 14:00\",\n            reservations: [\n          ],\n             showMore: false,\n       \n        },\n        {\n          id: 9,\n          name: \"9번방\",\n          statusText: \"이용중\",\n          statusClass: \"available\",\n          currentReservation: \"12:00 ~ 14:00\",\n          reservations: [\n            { id: 1, time: \"08:00 ~ 10:00\" },\n            { id: 2, time: \"12:00 ~ 14:00\" },\n            { id: 3, time: \"14:00 ~ 16:00\" }, \n\n          ],\n             showMore: false,\n        },\n        {\n          id: 10,\n          name: \"10번방\",\n          statusText: \"대기중\",\n          statusClass: \"waiting\",\n          currentReservation: \"12:00 ~ 14:00\",\n            reservations: [\n          ],\n                showMore: false,\n        },\n      ],\n    };\n  },\n  created (){ // view가 그려지기전 호출 \n  \n  },\n  mounted(){ // 실제로 화면에 내용이 그려진 직후에 확인.\n    this.getRoomDt()\n    this.updateCurrentDateTime();\n    // setInterval(this.updateCurrentDateTime, 1000); // 1초마다 업데이트\n   \n  },\n  watch : { // 데이터 변경시 호출\n    selectedDate(newDate, oldDate){\n      console.log(`selectedDate changed from ${oldDate} to ${newDate}`);\n      \n      // 선택한 날짜에 따라 새로운 데이터를 가져오거나, 다른 작업을 수행\n      this.getReservationDt(newDate);\n    }\n  },\n  computed(){ // data() 속성 값이 변했을 때, 이를 감지하고 자동으로 다시 연산 (Watch와 비슷하지만 Computed에서 중요한 부분은 결과 값을 \"저장\"하는 부분입니다.) v-model 이랑 같이 사용\n\n  },\n  methods: {\n    // 처음 2개의 예약을 표시하거나, showMore가 true일 때는 모든 예약을 표시\n    visibleReservations(room) {\n      console.log('filteredReservations : : ' ,JSON.stringify(room))\n\n      const filteredReservations = room.reservations.filter(reservation => {\n        return reservation.check === '사이값' || reservation.check === '초과값';\n      });\n\n      // showMore 상태에 따라 결과 반환\n      if (room.showMore) {\n        return filteredReservations; // 모든 필터된 예약을 표시\n      }\n\n      \n      return filteredReservations.slice(0, 2); // 처음 2개의 필터된 예약만 표시\n    },\n\n    // +MORE 버튼을 표시할지 여부\n    shouldShowMoreButton(room) {\n      return room.reservations.length > 2 && !room.showMore;\n    },\n\n    // +MORE 버튼을 클릭했을 때 나머지 예약을 표시\n    showMoreReservations(room) {\n      room.showMore = true;\n    },\n\n    // 예약이 4개 이상일 때만 스크롤바를 보이게 하는 조건\n    shouldScrollBeVisible(room) {\n      // console.log(\"Rooooom : : : \" , room)\n      return room.showMore && room.reservations.length > 3; // +MORE 클릭 후 4개 이상일 때 스크롤 표시\n    },\n    openModal(){\n      this.isModalVisible = true;\n    },\n    closeModal(){\n      this.isModalVisible = false;\n    },\n    async getRoomDt(){\n      this.availableRoom = await managerStore.getTask(`rooms`);\n      \n      console.log(\"roomNumbering : : : : : : \" , this.availableRoom)\n    },\n    async getReservationDt(date) {\n        // await taskStore.addTask(task);\n        // console.log(\"API 통신 시작\")\n        // 룸 정보 가져오는 구문 (GET)\n\n      this.roomDt = await managerStore.getTask(`reservations/${date}`);\n\n      console.log(\"this.roomDt : : : : : : \" , JSON.stringify(this.roomDt))\n      this.updateRoomStatus()\n      // console.log(\"roomDt[0].reser_user : : : \"  , this.roomDt[0].reser_user)\n      // localStorage.setItem('roomDt', JSON.stringify(this.roomDt));\n      // this.isAdding = false;\n      // this.isEditMode = false;\n      // this.currentTask = null;\n    },\n    // 현재 시간 구하기\n    updateCurrentDateTime() {\n      const now = new Date();\n\n      // UTC+9로 변환\n      const offset = 9 * 60; // 9시간 * 60분\n      const kstDate = new Date(now.getTime() + offset * 60 * 1000);\n\n      // 날짜와 시간 형식 지정\n      const formattedDate = `${kstDate.getUTCFullYear()}-${String(kstDate.getUTCMonth() + 1).padStart(2, '0')}-${String(kstDate.getUTCDate()).padStart(2, '0')}`;\n      const formattedTime = `${String(kstDate.getUTCHours()).padStart(2, '0')}:${String(kstDate.getUTCMinutes()).padStart(2, '0')}:${String(kstDate.getUTCSeconds()).padStart(2, '0')}`;\n\n      // UTC+9에 맞춘 ISO 8601 형식으로 출력\n      this.currentDateTime = `${formattedDate}T${formattedTime}.000Z`;\n      this.currentDate = formattedDate;\n      this.currentTime = formattedTime;\n      this.selectedDate = this.currentDate\n      console.log(this.currentDateTime); // 예: 2024-11-06T04:49:05+09:00\n\n      console.log(\"현재 날짜 시간\" + this.currentDateTime)\n      this.getReservationDt(this.currentDate);\n    },\n\n    getFormattedTime() {\n      const now = new Date();\n      return new Date(this.currentDateTime).getTime(); // ISO 형식으로 변환\n    },\n    updateRoomStatus() {\n      const formattedTime = this.getFormattedTime();\n      this.roomDt.forEach((room, roomIndex) => {\n          room.reservations.forEach((reservation, resIndex) => {\n            const start = new Date(reservation.startTime).getTime();\n            const end = new Date(reservation.endTime).getTime();\n\n            // console.log(new Date('2024-11-05T16:49:05.906Z').getTime())\n            \n            if (formattedTime >= start && formattedTime <= end) {\n              this.roomDt[roomIndex].reservations[resIndex].check = \"사이값\";\n              console.log(\"사이값 ㅣ: : : : ; start : :: : \"+start)\n              // console.log(\"start:\", start);\n              // console.log(\"end:\", end );\n              // console.log(\"formattedTime:\", formattedTime );\n            } else if (formattedTime < start) {\n              console.log(\"초과 : : : start : :: : \"+start)\n              this.roomDt[roomIndex].reservations[resIndex].check = \"초과값\";\n            //   console.log(\"start:\", start);\n            // console.log(\"end:\", end );\n            // console.log(\"formattedTime:\", formattedTime );\n            }\n            // 만약 추가 처리가 필요하면 여기에 추가\n          });\n          \n        });\n\n\n        if(this.roomDt.length > 0){\n          console.log(\"예약 정보 확인하는 중 : : : \" , JSON.stringify(this.roomDt))\n          for(var i =0;  i < this.availableRoom.length;  i++){ \n            for(var a =0;  a < this.roomDt.length; a++){\n              if(this.roomDt[a].room_id === this.availableRoom[i].room_id){\n                this.availableRoom[i].reservations = this.roomDt[a].reservations\n              }\n            }\n          }\n          this.availableRoom = [...this.availableRoom];\n          console.log(\"최종 룸 정보 확인 : : : : \" , JSON.stringify(this.availableRoom))\n        }\n      \n    }\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 컨테이너의 배경색 설정 */\n.reservation-container {\n  background: #f5f6f6;\n  display: flex;\n  height: 100%;\n  /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n  flex-direction: row;\n}\n.wrapper {\n  flex-grow: 1; /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  gap: 20px;\n}\n/* 타이틀 박스 */\n.title-box {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n/* 날짜 선택 박스 */\n.date-picker-box {\n  background-color: #fff;\n  padding: 30px;\n    margin-bottom: 20px;\n}\n.date{padding:23.5px 20px}\n/* 방 리스트 박스 */\n.room-list-box {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  background-color: #fff;\n  padding:20px;\n  padding-bottom:130px;\n}\n\n/* 개별 방 박스 */\n.room-box {\n  background-color: #fff;\n  padding: 40px 30px;\n  width: 270px;\n  height: 270px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n/* 방 제목과 예약 버튼 */\n.room-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.reserve-btn {\n  background-color: #E34D55;\n  color: #fff;\n  border: none;\n  padding: 5px;\n  border-radius: 4px;\n}\n\n/* 상태 표시 */\n.room-status {\n  display: flex;\n  justify-content: space-between;\n  gap:6px;\n  margin-bottom: 10px;\n}\n\n.status-label {\n  padding: 7.5px 6.5px;\n  border-radius: 4px;\n  color: #fff;\n}\n\n.room-box.available {\n  border-color: #14B655;\n}\n\n.room-box.waiting {\n  border-color: #D30F1A;\n}\n\n.room-box.upcoming {\n  border-color: #184199;\n\n}\n\n.available .status-label{\n  background-color: #14B655;\n}\n\n.available .reservation-time{color:#14B655;}\n\n.waiting .status-label{\n  background-color: #D30F1A;\n\n}\n.waiting .reservation-time {color:#D30F1A}\n\n.upcoming .status-label{\n  background-color: #184199;\n}\n.upcoming .reservation-time{\n    color:#184199;\n}\n.reservation-time {\n  color: #333;\n}\n\n/* 예약 상세 */\n.reservation-details {\n  background-color: #f5f5f5;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: none;\n}\n\n.reservation-time {\n\n  letter-spacing: -1px;\n}\n\n.reservation-actions {\n  display: flex;\n}\n.reservation-time-block{\n      letter-spacing:-1px;\n}\n.delete-btn,\n.edit-btn {\n      letter-spacing: -2px;\n  background: none;\n  border: none;\n  color: #D30F1A;\n  gap:6px;\n  cursor: pointer;\n}\n\n.edit-btn {\n  color: #184199;\n}\n\n/* +More 버튼 */\n.more-btn {\n  text-align: center;\n  color: #bbb;\n  cursor: pointer;\n}\n\n.scroll-container {\n  max-height: none;\n  overflow-y: hidden;\n}\n\n/* 스크롤 가능한 상태일 때 스크롤바 적용 */\n.scroll-container.scrollable {\n  max-height: 150px; /* 4개 이상의 예약이 있을 때 스크롤바가 생김 */\n  overflow-y: auto;\n}\n</style>\n"]}]}