{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/MyProfile.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/MyProfile.vue","mtime":1735528674954},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBIZWFkZXIgZnJvbSAiLi9IZWFkZXIiOwppbXBvcnQgUmpac1dpIGZyb20gIi4vUmpac1dpIjsKaW1wb3J0IEFjY291bnREZWxldGlvbk1vZGFsIGZyb20gIi4vQWNjb3VudERlbGV0aW9uTW9kYWwudnVlIjsKaW1wb3J0IFJlc2VydmF0aW9uQ2FuY2VsTW9kYWwgZnJvbSAiLi9SZXNlcnZhdGlvbkNhbmNlbE1vZGFsIjsKaW1wb3J0IEdhbWVEZXRhaWwgZnJvbSAiLi9HYW1lRGV0YWlsIjsgLy8gMjQuMTIuMTIg7IiY7KCVIC0g7LaU6rCACmltcG9ydCBYRm9vdGVyIGZyb20gIi4vWEZvb3RlciI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IHRhc2tTdG9yZSB9IGZyb20gIkAvc3RvcmUvdGFza1N0b3JlIjsgLy8gQVBJIO2YuOy2nAppbXBvcnQgRWRpdFByb2ZpbGUgZnJvbSAiLi9FZGl0UHJvZmlsZS52dWUiOyAvLzI0LjExLjE1IOyImOyglSAtIOy2lOqwgAppbXBvcnQgRWRpdFNvY2lhbFByb2ZpbGUgZnJvbSAiLi9FZGl0U29jaWFsUHJvZmlsZS52dWUiOy8vMjQuMTEuMTUg7IiY7KCVIC0g7LaU6rCACmltcG9ydCBFZGl0UGFzc3dvcmQgZnJvbSAiLi9FZGl0UGFzc3dvcmQudnVlIjsvLzI0LjExLjE1IOyImOyglSAtIOy2lOqwgApleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk15UHJvZmlsZSIsCiAgY29tcG9uZW50czogewogICAgSGVhZGVyLAogICAgUmpac1dpLAogICAgRWRpdFByb2ZpbGUsLy8yNC4xMS4xNSDsiJjsoJUgLSDstpTqsIAKICAgIEVkaXRTb2NpYWxQcm9maWxlLC8vMjQuMTEuMTUg7IiY7KCVIC0g7LaU6rCACiAgICBFZGl0UGFzc3dvcmQsIC8vMjQuMTEuMTUg7IiY7KCVIC0g7LaU6rCACiAgICBBY2NvdW50RGVsZXRpb25Nb2RhbCwKICAgIFJlc2VydmF0aW9uQ2FuY2VsTW9kYWwsCiAgICBHYW1lRGV0YWlsLCAvLyAyNC4xMi4xMiDsiJjsoJUgLSDstpTqsIAKICAgIFhGb290ZXIsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9naW5JbmZvOiB7fSwKICAgICAgY29tbWVudHM6IFtdLAogICAgICBjb250ZW50czogIiIsCiAgICAgIGltYWdlVXJsOiAiIiwKICAgICAgaW5xdWlyeUN1cnJlbnRQYWdlOiAxLCAvLyAxOjEg66y47J2Y64K07Jet7J2YIO2YhOyerCDtjpjsnbTsp4AKICAgICAgcmVzZXJ2YXRpb25DdXJyZW50UGFnZTogMSwKICAgICAgc2VsZWN0ZWRJbnF1aXJ5OiBudWxsLAogICAgICBpdGVtc1BlclBhZ2U6IDUsCiAgICAgIFJpdGVtc1BlclBhZ2U6IDMsCiAgICAgIGFycm93TGVmdEltYWdlOgogICAgICAgICJodHRwczovL2Nkbi5hbmltYWFwcC5jb20vcHJvamVjdHMvNjZkYTUxMmQwYzIyZDQ3ODAxNWUwZTA3L3JlbGVhc2VzLzY2ZGE1MWQ4Y2Y1MDE1M2NlZjk5NTJkZi9pbWcvaWNvbmFtb29uLWFycm93LXVwLTItdGhpbi5zdmciLCAvLyDsmbzsqr0g7ZmU7IK07ZGcIOydtOuvuOyngCBVUkwKICAgICAgYXJyb3dSaWdodEltYWdlOgogICAgICAgICJodHRwczovL2Nkbi5hbmltYWFwcC5jb20vcHJvamVjdHMvNjZkYTUxMmQwYzIyZDQ3ODAxNWUwZTA3L3JlbGVhc2VzLzY2ZGE1MWQ4Y2Y1MDE1M2NlZjk5NTJkZi9pbWcvaWNvbmFtb29uLWFycm93LXVwLTItdGhpbi5zdmciLCAvLyDsmKTrpbjsqr0g7ZmU7IK07ZGcIOydtOuvuOyngCBVUkwKICAgICAgdGFiczogWyLrgrTsoJXrs7Qg67OA6rK9IiwgIjE6MSDrrLjsnZjrgrTsl60iLCAi7JiI7JW964K07JetIl0sCiAgICAgIGlucXVpcmllczogW10sCiAgICAgIHJlc2VydmF0aW9uczogW10sCiAgICAgIHNlbGVjdGVkVGFiOiAi64K07KCV67O0IOuzgOqyvSIsCiAgICAgIG1lbWJlckluZm86IHt9LAogICAgICBxdWlja0xvZ2luU3RhdHVzOiB7fSwKICAgICAgaXNNb2RhbFZpc2libGU6IGZhbHNlLAogICAgICBwcm9maWxlX2ltYWdlOiAiIiwKICAgICAgaXNPcGVuUmVzZXJ2YXRpb25DYW5jZWxNb2RhbDogZmFsc2UsCiAgICAgIHNlbGVjdGVkUmVzZXJ2YXRpb25JZDogbnVsbCwKICAgICAgaXNPcGVuRWRpdFByb2ZpbGU6IGZhbHNlLC8vMjQuMTEuMTUg7IiY7KCVIC0g7LaU6rCACiAgICAgIGlzT3BlbkVkaXRTb2NpYWxQcm9maWxlOiBmYWxzZSwgLy8yNC4xMS4xNSDsiJjsoJUgLSDstpTqsIAKICAgICAgaXNPcGVuRWRpdFBhc3N3b3JkOiBmYWxzZSwgLy8yNC4xMS4xNSDsiJjsoJUgLSDstpTqsIAKICAgICAgYmFzaWNQcm9maWxlSW1nOiAnaHR0cHM6Ly9jZG4uYW5pbWFhcHAuY29tL3Byb2plY3RzLzY2ZGE1MTJkMGMyMmQ0NzgwMTVlMGUwNy9yZWxlYXNlcy82NmRhNTFkOGNmNTAxNTNjZWY5OTUyZGYvaW1nL2dyb3VwLTczNkAyeC5wbmcnLCAvLyAyNC4xMS4yNiDsiJjsoJUgLSDstpTqsIAKICAgICAgcmVzZXJ2YXRpb25PcHRpb246ICLsoITssrQiLC8vIDI0LjEyLjA5IOyImOyglSAtIOy2lOqwgCA6IOyYiOyVveuCtOyXrSBzZWxlY3Qg67CV7IqkCiAgICAgIGlucXVpcnlPcHRpb246ICLsoITssrQiLC8vIDI0LjEyLjA5IOyImOyglSAtIOy2lOqwgCA6IOusuOydmOuCtOyXrSBzZWxlY3Qg67CV7IqkCiAgICAgIHNlbGVjdGVkU2hvcDogbnVsbCwgLy8gMjQuMTIuMTIg7IiY7KCVIC0g7LaU6rCAIDog7JiI7JW964K07JetIOunpOyepSDsg4HshLjtjpjsnbTsp4Ag7J2064+ZCiAgICAgIGlzT3BlbkdhbWVEZXRhaWw6IGZhbHNlLCAvLyAyNC4xMi4xMiDsiJjsoJUgLSDstpTqsIAgOiDsmIjslb3rgrTsl60g66ek7J6lIOyDgeyEuO2OmOydtOyngCDrqqjri6wgCiAgICB9OwogIH0sCiAgcHJvcHM6IFsickpac1dJUHJvcHMiXSwKICB3YXRjaDogewogICAgIiRyb3V0ZS5xdWVyeS50YWIiKG5ld1RhYikgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gbmV3VGFiIHx8ICLrgrTsoJXrs7Qg67OA6rK9IjsgLy8g6riw67O4IO2DreydgCAn64K07KCV67O0IOuzgOqyvScKICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSDstpTqsIAKICAgIHJlc2VydmF0aW9uT3B0aW9uKG5ld1ZhbHVlKSB7CiAgICAgIC8vIOyYteyFmOydtCDrs4Dqsr3rkKAg65WMIO2OmOydtOyngOulvCAx66GcIOy0iOq4sO2ZlAogICAgICB0aGlzLnJlc2VydmF0aW9uQ3VycmVudFBhZ2UgPSAxOwogICAgfSwKICAgIC8vIDI0LjEyLjA5IOyImOyglSAtIOy2lOqwgAogICAgaW5xdWlyeU9wdGlvbigpIHsKICAgICAgLy8g7Ji17IWY7J20IOuzgOqyveuQoCDrlYwg7Y6Y7J207KeA66W8IDHroZwg7LSI6riw7ZmUCiAgICAgIHRoaXMuaW5xdWlyeUN1cnJlbnRQYWdlID0gMTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCBsb2dpbkluZm8gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJsb2dpbkluZm8iKSk7CgogICAgdGhpcy5sb2dpbkluZm8gPSBsb2dpbkluZm8gfHwge307CiAgICBjb25zb2xlLmxvZygi7LSI6riw7ZmU65CcIHRoaXMubG9naW5JbmZvOiIsIHRoaXMubG9naW5JbmZvKTsKCiAgICAvLyDsv7zrpqwg7YyM652866+47YSwICd0YWIn7J2EIO2ZleyduO2VmOyXrCDquLDrs7gg7YOt7J2EIOyEpOyglQogICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LnRhYikgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGhpcy4kcm91dGUucXVlcnkudGFiOwogICAgfQogICAgdGhpcy5nZXRNeXByb2ZpbGUoKTsKICAgIHRoaXMuZ2V0TXlDb250YWN0KCk7CiAgICB0aGlzLmdldFJlc2VydmF0aW9uTGlzdCgpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIDI0LjEyLjA5IOyImOyglSAtIOy2lOqwgAogICAgc29ydGVkSW5xdWlyaWVzKCkgewogICAgICBpZiAodGhpcy5pbnF1aXJ5T3B0aW9uID09PSAn7KCE7LK0JykgewogICAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRlZEl0ZW1zOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaW5xdWlyeU9wdGlvbiA9PT0gJ+ygkeyImOyZhOujjCcpIHsKICAgICAgICByZXR1cm4gdGhpcy5wYWdpbmF0ZWRJdGVtcwogICAgICAgICAgLmZpbHRlcihpbnF1aXJ5ID0+IGlucXVpcnkuc3RhdHVzID09PSAid2FpdGluZyIpCiAgICAgICAgICAuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgICAvLyB1bmRlZmluZWQg6rKA7IKsCiAgICAgICAgICAgIGlmICghYS50aW1lIHx8ICFiLnRpbWUpIHJldHVybiAwOyAvLyDsnKDtmqjtlZjsp4Ag7JWK7J2AIOqyveyasCDsoJXroKztlZjsp4Ag7JWK7J2MCiAgICAgICAgICAgIHJldHVybiBhLnRpbWUubG9jYWxlQ29tcGFyZShiLnRpbWUpOyAvLyDsi5zqsIQg7Iic7Jy866GcIOygleugrAogICAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5pbnF1aXJ5T3B0aW9uID09PSAn64u167OA7JmE66OMJykgewogICAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRlZEl0ZW1zCiAgICAgICAgICAuZmlsdGVyKGlucXVpcnkgPT4gaW5xdWlyeS5zdGF0dXMgPT09ICdhbnN3ZXInKQogICAgICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGIuY3JlYXRlZEF0KSAtIG5ldyBEYXRlKGEuY3JlYXRlZEF0KSk7IC8vIOy1nOyLoOyInOycvOuhnCDsoJXroKwKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5wYWdpbmF0ZWRJdGVtczsKICAgICAgfQogICAgfSwKICAgIC8vIDI0LjEyLjA5IOyImOyglSAtIOy2lOqwgAogICAgZmlsdGVyZWRJbnF1aXJpZXMoKSB7CiAgICAgIGlmICh0aGlzLmlucXVpcnlPcHRpb24gPT09ICLsoITssrQiKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaW5xdWlyaWVzOwogICAgICB9IGVsc2UgaWYgKHRoaXMuaW5xdWlyeU9wdGlvbiA9PT0gIuygkeyImOyZhOujjCIpIHsKICAgICAgICByZXR1cm4gdGhpcy5pbnF1aXJpZXMuZmlsdGVyKGlucXVpcnkgPT4gaW5xdWlyeS5zdGF0dXMgPT09ICJ3YWl0aW5nIik7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5pbnF1aXJ5T3B0aW9uID09PSAi64u167OA7JmE66OMIikgewogICAgICAgIHJldHVybiB0aGlzLmlucXVpcmllcy5maWx0ZXIoaW5xdWlyeSA9PiBpbnF1aXJ5LnN0YXR1cyA9PT0gImFuc3dlciIpOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLmlucXVpcmllczsKICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSDstpTqsIAKICAgIHNvcnRlZFJlc2VydmF0aW9ucygpIHsKICAgICAgaWYgKHRoaXMucmVzZXJ2YXRpb25PcHRpb24gPT09ICfsoITssrQnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGVkUmVzZXJ2YXRpb25zOwogICAgICB9CiAgICAgIC8vIDI0LjEyLjExIOyImOyglSAtIOuMgOq4sOykkSAtIOygkeyImOykkSDsnLzroZwg67OA6rK9CiAgICAgIGVsc2UgaWYgKHRoaXMucmVzZXJ2YXRpb25PcHRpb24gPT09ICfsoJHsiJjspJEnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGVkUmVzZXJ2YXRpb25zCiAgICAgICAgICAuZmlsdGVyKHJlc2VydmF0aW9uID0+IHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gJ3dhaXRpbmcnKQogICAgICAgICAgLnNvcnQoKGEsIGIpID0+IGEudGltZS5sb2NhbGVDb21wYXJlKGIudGltZSkpOyAvLyDsi5zqsIQg7Iic7Jy866GcIOygleugrAogICAgICB9IGVsc2UgaWYgKHRoaXMucmVzZXJ2YXRpb25PcHRpb24gPT09ICfsmIjslb3smYTro4wnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdGVkUmVzZXJ2YXRpb25zCiAgICAgICAgICAuZmlsdGVyKHJlc2VydmF0aW9uID0+IHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gJ2NvbmZpcm0nKQogICAgICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGIuY3JlYXRlZEF0KSAtIG5ldyBEYXRlKGEuY3JlYXRlZEF0KSk7IC8vIOy1nOyLoOyInOycvOuhnCDsoJXroKwKICAgICAgfSBlbHNlIGlmICh0aGlzLnJlc2VydmF0aW9uT3B0aW9uID09PSAn7JiI7JW97Leo7IaMJykgewogICAgICAgIHJldHVybiB0aGlzLnBhZ2luYXRlZFJlc2VydmF0aW9ucwogICAgICAgICAgLmZpbHRlcihyZXNlcnZhdGlvbiA9PiByZXNlcnZhdGlvbi5zdGF0dXMgPT09ICdjYW5jZWwnKQogICAgICAgICAgLnNvcnQoKGEsIGIpID0+IG5ldyBEYXRlKGIuY3JlYXRlZEF0KSAtIG5ldyBEYXRlKGEuY3JlYXRlZEF0KSk7IC8vIOy1nOyLoOyInOycvOuhnCDsoJXroKwKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5wYWdpbmF0ZWRSZXNlcnZhdGlvbnM7CiAgICAgIH0KICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSDstpTqsIAKICAgIGZpbHRlcmVkUmVzZXJ2YXRpb25zKCkgewogICAgICBsZXQgZmlsdGVyZWQgPSBbXTsKICAgICAgaWYgKHRoaXMucmVzZXJ2YXRpb25PcHRpb24gPT09ICfsoITssrQnKSB7CiAgICAgICAgZmlsdGVyZWQgPSB0aGlzLnJlc2VydmF0aW9uczsKICAgICAgfQogICAgICAvLyAyNC4xMi4xMSDsiJjsoJUgLSDrjIDquLDspJEgLSDsoJHsiJjspJEg7Jy866GcIOuzgOqyvQogICAgICBlbHNlIGlmICh0aGlzLnJlc2VydmF0aW9uT3B0aW9uID09PSAn7KCR7IiY7KSRJykgewogICAgICAgIGZpbHRlcmVkID0gdGhpcy5yZXNlcnZhdGlvbnMuZmlsdGVyKHJlc2VydmF0aW9uID0+IHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gJ3dhaXRpbmcnKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnJlc2VydmF0aW9uT3B0aW9uID09PSAn7JiI7JW97JmE66OMJykgewogICAgICAgIGZpbHRlcmVkID0gdGhpcy5yZXNlcnZhdGlvbnMuZmlsdGVyKHJlc2VydmF0aW9uID0+IHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gJ2NvbmZpcm0nKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnJlc2VydmF0aW9uT3B0aW9uID09PSAn7JiI7JW97Leo7IaMJykgewogICAgICAgIGZpbHRlcmVkID0gdGhpcy5yZXNlcnZhdGlvbnMuZmlsdGVyKHJlc2VydmF0aW9uID0+IHJlc2VydmF0aW9uLnN0YXR1cyA9PT0gJ2NhbmNlbCcpOwogICAgICB9IGVsc2UgewogICAgICAgIGZpbHRlcmVkID0gdGhpcy5yZXNlcnZhdGlvbnM7CiAgICAgIH0KICAgICAgcmV0dXJuIGZpbHRlcmVkOwogICAgfSwKICAgIGNvbXB1dGVkU3RhdHVzKCkgewogICAgICAvLyBjb21tZW50TGlzdOqwgCAx6rCcIOydtOyDgeydtOuptCAi64u167OA7JmE66OMIuuhnCDsg4Htg5zrpbwg67OA6rK9CiAgICAgIC8vIDI0LjExLjI1IOyImOyglQogICAgICAvLyBpZiAodGhpcy5jb21tZW50cy5sZW5ndGggPiAwKSB7CiAgICAgIC8vICAgcmV0dXJuICLri7Xrs4DsmYTro4wiOwogICAgICAvLyB9CiAgICAgIC8vIDI0LjExLjI2IOyImOyglQogICAgICBpZiAodGhpcy5zZWxlY3RlZElucXVpcnkuY29tbWVudExpc3Quc29tZShjb21tZW50ID0+IGNvbW1lbnQuYXV0aG9yID09PSAi6rSA66as7J6QIikpIHsKICAgICAgICByZXR1cm4gIuuLteuzgOyZhOujjCI7CiAgICAgIH0KICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRJbnF1aXJ5LnN0YXR1cyB8fCAi7KCR7IiY7JmE66OMIjsKICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSAgaW5xdWlyaWVzIC0gZmlsdGVyZWRJbnF1aXJpZXMg66GcIOuzgOqyvQogICAgdG90YWxQYWdlcygpIHsKICAgICAgcmV0dXJuIE1hdGguY2VpbCh0aGlzLmZpbHRlcmVkSW5xdWlyaWVzLmxlbmd0aCAvIHRoaXMuaXRlbXNQZXJQYWdlKTsKICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSAgaW5xdWlyaWVzIC0gZmlsdGVyZWRJbnF1aXJpZXMg66GcIOuzgOqyvQogICAgcGFnaW5hdGVkSXRlbXMoKSB7CiAgICAgIGNvbnN0IHN0YXJ0ID0gKHRoaXMuaW5xdWlyeUN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLml0ZW1zUGVyUGFnZTsKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRJbnF1aXJpZXMuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgdGhpcy5pdGVtc1BlclBhZ2UpOwogICAgfSwKICAgIC8vIDI0LjEyLjA5IOyImOyglSAtICByZXNlcnZhdGlvbnMgLSBmaWx0ZXJlZFJlc2VydmF0aW9ucyDroZwg67OA6rK9CiAgICBSZXNlcnZhdGlvbnN0b3RhbFBhZ2VzKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuZmlsdGVyZWRSZXNlcnZhdGlvbnMubGVuZ3RoIC8gdGhpcy5SaXRlbXNQZXJQYWdlKTsKICAgIH0sCiAgICAvLyAyNC4xMi4wOSDsiJjsoJUgLSAgcmVzZXJ2YXRpb25zIC0gZmlsdGVyZWRSZXNlcnZhdGlvbnMg66GcIOuzgOqyvQogICAgcGFnaW5hdGVkUmVzZXJ2YXRpb25zKCkgewogICAgICBjb25zdCBzdGFydCA9ICh0aGlzLnJlc2VydmF0aW9uQ3VycmVudFBhZ2UgLSAxKSAqIHRoaXMuUml0ZW1zUGVyUGFnZTsKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRSZXNlcnZhdGlvbnMuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgdGhpcy5SaXRlbXNQZXJQYWdlKTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+2MqOyKpOybjOuTnCDsnbzsuZgg7Jes67aACiAgICAvLyAgYXN5bmMgY2hla1B3KHBhc3N3b3JkKXsKCiAgICAvLyAgICAgLy8gdjEvYXV0aC9tZS9wYXNzd29yZC9nb29hcmExMjMKICAgIC8vICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5nZXRTZWxlY3RUYXNrcygKICAgIC8vICAgICAgICAgYHYxL2F1dGgvbWUvcGFzc3dvcmQvLyR7cGFzc3dvcmR9YAogICAgLy8gICAgICAgKTsKICAgIC8vICAgICAgIGNvbnNvbGUubG9nKCLqsIDsoLjsmKgg66y47J2YIOyDgeyEuCDsoJXrs7Q6IiwgcmVzcG9uc2UpOwogICAgLy8gICB9LAogICAgY29uZnJpbUVkaXQoKSB7CiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQodHJ1ZSk7CiAgICB9LAogICAgc2VsZWN0VGFiKHRhYikgewogICAgICB0aGlzLnNlbGVjdGVkVGFiID0gdGFiOwogICAgICB0aGlzLnNlbGVjdGVkSW5xdWlyeSA9IG51bGw7CiAgICB9LAogICAgYXN5bmMgcGF0Y2hNeXByb2ZpbGVJbWFnZSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zb2xlLmxvZygidGhpcy5pbWFnZVVybDogOiA6IDogIiwgdGhpcy5pbWFnZVVybCk7CiAgICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgICAgcHJvZmlsZUltYWdlOiB0aGlzLmltYWdlVXJsLCAvLyDshJzrsoTsl5Ag7KCA7J6l7ZWgIO2VhOuTnOuqhSAncHJvZmlsZUltYWdlJ+uhnCDsoITshqEKICAgICAgICB9OwogICAgICAgIC8vIOyEnOuyhOyXkCDtlITroZztlYQg7J2066+47KeAIOyXheuNsOydtO2KuCDsmpTssq0KICAgICAgICBjb25zdCByZXNwb25zZSA9IHRhc2tTdG9yZS51cGRhdGVUYXNrKAogICAgICAgICAgInYxL2F1dGgvbWUvcHJvZmlsZS1pbWFnZSIsCiAgICAgICAgICBwYXJhbXMKICAgICAgICApOwogICAgICAgIGFsZXJ0KCLtlITroZztlYQg7J2066+47KeA6rCAIOyEseqzteyggeycvOuhnCDsl4XrjbDsnbTtirjrkJjsl4jsirXri4jri6QhIik7CiAgICAgICAgdGhpcy5nZXRNeXByb2ZpbGUoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLtlITroZztlYQg7J2066+47KeAIOyXheuNsOydtO2KuCDsi6TtjKg6IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLtlITroZztlYQg7J2066+47KeAIOyXheuNsOydtO2KuOyXkCDsi6TtjKjtlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBvbkZpbGVDaGFuZ2UoZXZlbnQpIHsKICAgICAgY29uc29sZS5sb2coIu2GteyLoCDtlZjripQg7KSRISEhIik7CiAgICAgIC8vIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIik7CiAgICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIHRoaXMuZmlsZSA9IGZpbGU7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUuc2l6ZSk7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUubmFtZSk7CiAgICAgIGNvbnNvbGUubG9nKGZpbGUudHlwZSk7CiAgICAgIGNvbnN0IHBhcmFtcyA9IHsKICAgICAgICBmaWxlTmFtZTogZmlsZS5uYW1lLAogICAgICAgIGZpbGVTaXplOiBmaWxlLnNpemUsCiAgICAgICAgbWltZVR5cGU6IGZpbGUudHlwZSwKICAgICAgfTsKICAgICAgY29uc29sZS5sb2coIu2GteyLoCDtlZjripQg7KSRISEhIiArIEpTT04uc3RyaW5naWZ5KHRoaXMuZmlsZSkpOwoKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUucG9zdFRhc2soCiAgICAgICAgInYxL2ZpbGVzL3ByZXNpZ25lZC11cmwiLAogICAgICAgIHBhcmFtcwogICAgICApOwogICAgICBjb25zb2xlLmxvZygicmVzcG9uc2UgOiA6IDogOiA6IiArIHJlc3BvbnNlKTsKCiAgICAgIGNvbnN0IHVybCA9IHJlc3BvbnNlWzBdLnByZXNpZ25lZFVybDsKICAgICAgY29uc29sZS5sb2coInJlc3BvbnNlLmZpbGUucGF0aCA6IDogOiA6IDoiICsgSlNPTi5zdHJpbmdpZnkodXJsKSk7CiAgICAgIGlmICh1cmwgPT09IHVuZGVmaW5lZCB8fCB1cmwgPT09IG51bGwpIHsKICAgICAgICBhbGVydCgn64uk7IucIOyLnOuPhO2VtOyjvOyEuOyalC4nKQogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgfQogICAgICAvLyBjb25zdCB1cmwgPSAnaHR0cHM6Ly9sZXp1cm8tYmsuczMuYXAtbm9ydGhlYXN0LTIuYW1hem9uYXdzLmNvbS9jYW1lcmEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNvbnRlbnQtU2hhMjU2PVVOU0lHTkVELVBBWUxPQUQmWC1BbXotQ3JlZGVudGlhbD1BS0lBNkNMSE5CUlczQUE3SlE1WiUyRjIwMjQxMTA3JTJGYXAtbm9ydGhlYXN0LTIlMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQxMTA3VDA3NDIxMVomWC1BbXotRXhwaXJlcz0zNjAwJlgtQW16LVNpZ25hdHVyZT1kZDQxNzZkODI4OGVkOTY0MjIzZjQ3MWZmNzQ1ZmZlYzg5NDMxMjBkYWRmMDE3ZmMyZjM3M2Q5MTU4OGRmNjI2JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZ4LWlkPVB1dE9iamVjdCc7CiAgICAgIHRoaXMuaW1hZ2VVcmwgPSBuZXcgVVJMKHVybCkub3JpZ2luICsgbmV3IFVSTCh1cmwpLnBhdGhuYW1lOwogICAgICB0cnkgewogICAgICAgIC8vIO2MjOydvCDsl4XroZzrk5wKICAgICAgICAvLyAyLiDtlITrpqzsgqzsnbggVVJM7J2EIOyCrOyaqe2VtCBTM+yXkCDtjIzsnbzsnYQg7JeF66Gc65Oc7ZWp64uI64ukLgogICAgICAgIGF3YWl0IGF4aW9zLnB1dCh1cmwsIGZpbGUsIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6IGZpbGUudHlwZSwKICAgICAgICAgICAgLy8gJ0NvbnRlbnQtTGVuZ3RoJzogZmlsZS5zaXplCiAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgICAgIGNvbnNvbGUubG9nKCJGaWxlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseSEiKTsKICAgICAgICB0aGlzLnBhdGNoTXlwcm9maWxlSW1hZ2UoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCJFcnJvciB1cGxvYWRpbmcgZmlsZToiLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBnZXRNeUNvbnRhY3QoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgdXNlcklkID0gTnVtYmVyKHRoaXMubG9naW5JbmZvLmlkKTsKICAgICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJUb2tlbiIpOwogICAgICAgIC8vIGlmICghdG9rZW4pIHsKICAgICAgICAvLyAgIGFsZXJ0KCLroZzqt7jsnbjsnbQg7ZWE7JqU7ZWp64uI64ukLiIpOwogICAgICAgIC8vICAgcmV0dXJuOwogICAgICAgIC8vIH0KCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgICAgICBgaHR0cHM6Ly8xMy4xMjQuNjIuNjg6MzAwMC9hcGkvaW5xdWlyaWVzL3VzZXJJZC8ke3VzZXJJZH1gLAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApOwoKICAgICAgICBjb25zb2xlLmxvZygi7KCE7LK0IHJlc3BvbnNlIOqwneyytDoiLCByZXNwb25zZSk7CiAgICAgICAgY29uc29sZS5sb2coIuusuOydmCDrgrTsl60iLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgY29uc3QgaW5xdWlyaWVzID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgLy8gMjQuMTEuMjEg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgY29uc3QgdXNlck5hbWUgPSB0aGlzLmxvZ2luSW5mby5uYW1lOwogICAgICAgIGNvbnNvbGUubG9nKCd1c2VyTmFtZScsIHVzZXJOYW1lKQoKCiAgICAgICAgY29uc3QgZmlsdGVyZWRJbnF1aXJpZXMgPSBpbnF1aXJpZXMuZmlsdGVyKChpdGVtKSA9PiB7CiAgICAgICAgICByZXR1cm4gaXRlbS51c2VySWQgPT09IHVzZXJJZDsKICAgICAgICB9KTsKCiAgICAgICAgLy8gMjQuMTEuMjUg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgLy8g6rCBIOusuOydmOyXkCDrjJPquIAg66qp66Gd7J2EIOqysO2Vqe2VmOq4sAogICAgICAgIGZvciAobGV0IGl0ZW0gb2YgZmlsdGVyZWRJbnF1aXJpZXMpIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIC8vIOyghOyytCDrjJPquIAg66qp66GdIOu2iOufrOyYpOq4sAogICAgICAgICAgICBjb25zdCBjb21tZW50UmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgICAgICAgICAgYGh0dHBzOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL2NvbW1lbnRzYCwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CgogICAgICAgICAgICAvLyDrjJPquIAg66qp66Gd7JeQ7IScIO2YhOyerCBpdGVtLmlk7JmAIOydvOy5mO2VmOuKlCDrjJPquIDrp4wg7ZWE7YSw66eBCiAgICAgICAgICAgIGNvbnN0IGZpbHRlcmVkQ29tbWVudHMgPSBjb21tZW50UmVzcG9uc2UuZGF0YS5maWx0ZXIoY29tbWVudCA9PiBjb21tZW50LmFza0lkID09PSBpdGVtLmlkKTsKCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdjb21tZW50TGlzdCA6IDo6ICcgLCBKU09OLnN0cmluZ2lmeShjb21tZW50UmVzcG9uc2UpKQogICAgICAgICAgICAvLyAyNC4xMS4yNyDsiJjsoJUKICAgICAgICAgICAgLy8g7ZWE7YSw66eB65CcIOuMk+q4gCDrqqnroZ3sl5AgcHJvZmlsZUltYWdlIOy2lOqwgAogICAgICAgICAgICBpdGVtLmNvbW1lbnRMaXN0ID0gZmlsdGVyZWRDb21tZW50cy5tYXAoKGNvbW1lbnQpID0+ICh7CiAgICAgICAgICAgICAgLi4uY29tbWVudCwKICAgICAgICAgICAgICAvLyBwcm9maWxlSW1hZ2U6IGNvbW1lbnQudXNlcj8ucHJvZmlsZUltYWdlIHx8IG51bGwsIC8vIHVzZXLsl5DshJwgcHJvZmlsZUltYWdlIOqwgOyguOyYpOq4sAogICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygiaXRlbS5jb21tZW50TGlzdCAgOiA6ICIgLGl0ZW0uY29tbWVudExpc3QgKQoKICAgICAgICAgICAgLy8gMjQuMTEuMjYg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgICAgIC8vIOyDge2DnCDsspjrpqw6ICd3YWl0aW5nJ+ydtOuptCAn7KCR7IiY7JmE66OMJywgJ2Fuc3dlcifsnbTrqbQgJ+uLteuzgOyZhOujjCcKICAgICAgICAgICAgaXRlbS5zdGF0dXMgPSBpdGVtLnN0YXR1czsKCiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCLrjJPquIAg642w7J207YSw66W8IOqwgOyguOyYpOuKlCDspJEg7Jik66WYIOuwnOyDnToiLCBlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB0aGlzLmlucXVpcmllcyA9IGZpbHRlcmVkSW5xdWlyaWVzLm1hcCgoaXRlbSkgPT4gKHsKICAgICAgICAgIC4uLml0ZW0sCiAgICAgICAgICAvLyAyNC4xMS4yMSDsiJjsoJUgLSDstpTqsIAKICAgICAgICAgIG5hbWU6IHVzZXJOYW1lLAogICAgICAgIH0pKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLrrLjsnZgg642w7J207YSw66W8IOqwgOyguOyYpOuKlCDspJEg7Jik66WYIOuwnOyDnToiLCBlcnJvcik7CiAgICAgICAgLy8gYWxlcnQoIuuNsOydtO2EsOulvCDqsIDsoLjsmKTripQg7KSRIOusuOygnOqwgCDrsJzsg53tlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBwb3N0Q29tbWVudHMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgbG9naW5JbmZvID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibG9naW5JbmZvIikpOwogICAgICAgIGNvbnN0IGF1dGhvciA9IGxvZ2luSW5mby5uYW1lOwogICAgICAgIGNvbnN0IHVzZXJJZCA9IGxvZ2luSW5mby5pZDsKICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgIGNvbnN0IGtvcmVhVGltZSA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgKyA5ICogNjAgKiA2MCAqIDEwMDApOyAvLyBVVEMrOSDsi5zqsITrjIAg7KGw7KCVCiAgICAgICAgY29uc3QgY3JlYXRlZEF0ID0ga29yZWFUaW1lCiAgICAgICAgICAudG9JU09TdHJpbmcoKQogICAgICAgICAgLnJlcGxhY2UoIlQiLCAiICIpCiAgICAgICAgICAuc2xpY2UoMCwgMTkpOwogICAgICAgIC8vIFBPU1Qg7JqU7LKt7Jy866GcIOuNsOydtO2EsOulvCDshJzrsoTsl5Ag7KCE7IahCiAgICAgICAgY29uc29sZS5sb2coJ2F1dGhvciAxMjMnLCBhdXRob3IpCiAgICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgICAgLy8gdGl0bGU6IHRoaXMudGl0bGUsCiAgICAgICAgICBjb250ZW50OiB0aGlzLmNvbnRlbnRzLAogICAgICAgICAgYXV0aG9yOiBhdXRob3IsCiAgICAgICAgICB1c2VySWQ6IHVzZXJJZCwKICAgICAgICAgIGNhdGVnb3J5OiAi66y47J2Y7ZWY6riwIiwKICAgICAgICAgIHZpZXdzOiAwLAogICAgICAgICAgZnJlZUJvYXJkSWQ6ICIxIiwKICAgICAgICAgIGFmdGVyU2VydmljZUlkOiAiMSIsCiAgICAgICAgICBhc2tJZDogU3RyaW5nKHRoaXMuc2VsZWN0ZWRJbnF1aXJ5LmlkKSwKICAgICAgICAgIGNyZWF0ZWRBdDogY3JlYXRlZEF0LAogICAgICAgICAgY29tbWVudFRleHQ6ICIwIiwKICAgICAgICAgIHVwZGF0ZWRBdDogY3JlYXRlZEF0LAogICAgICAgIH07CiAgICAgICAgY29uc29sZS5sb2coIuuztOuCtOuKlCDrjbDsnbTthLA6IiwgSlNPTi5zdHJpbmdpZnkocGFyYW1zLCBudWxsLCAyKSk7CgogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGFza1N0b3JlLnBvc3RUYXNrKCJjb21tZW50cyIsIHBhcmFtcyk7CgogICAgICAgIGNvbnNvbGUubG9nKCLrk7HroZ0g7ISx6rO1OiIpOwogICAgICAgIGFsZXJ0KCLrk7HroZ3snbQg65CY7JeI7Iq164uI64ukIik7CiAgICAgICAgYXdhaXQgdGhpcy5nZXRJbnF1aXJ5RGV0YWlsKHRoaXMuc2VsZWN0ZWRJbnF1aXJ5LmlkKTsKICAgICAgICB0aGlzLmNvbnRlbnRzID0gIiI7IC8vIOyeheugpe2VnCDrjJPquIAg7LSI6riw7ZmUCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi65Ox66GdIOyLpO2MqDoiLCBlcnJvcik7CiAgICAgICAgYWxlcnQoIuuTseuhneyXkCDsi6TtjKjtlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVFZGl0Q29tbWVudChjb21tZW50KSB7CiAgICAgIGlmIChjb21tZW50LmlzRWRpdGluZykgewogICAgICAgIC8vIOyImOyglSDrqqjrk5zsl5DshJwg7JmE66OM66W8IOuIhOultOuptCBgdXBkYXRlQ29tbWVudGAg7Zi47LacCiAgICAgICAgdGhpcy51cGRhdGVDb21tZW50KGNvbW1lbnQpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOyImOyglSDrqqjrk5zroZwg7KCE7ZmY7ZWgIOuVjCDquLDsobQg64yT6riAIOuCtOyaqeydhCBgZWRpdGVkQ29udGVudGDsl5Ag67O17IKsCiAgICAgICAgY29tbWVudC5lZGl0ZWRDb250ZW50ID0gY29tbWVudC5jb21tZW50X2NvbnRlbnQ7CiAgICAgIH0KICAgICAgY29tbWVudC5pc0VkaXRpbmcgPSAhY29tbWVudC5pc0VkaXRpbmc7CiAgICB9LAogICAgYXN5bmMgdXBkYXRlQ29tbWVudChjb21tZW50KSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsKICAgICAgICBjb25zdCBrb3JlYVRpbWUgPSBuZXcgRGF0ZShub3cuZ2V0VGltZSgpICsgOSAqIDYwICogNjAgKiAxMDAwKTsgLy8gVVRDKzkg7Iuc6rCE64yAIOyhsOyglQogICAgICAgIGNvbnN0IHVwZGF0ZWRBdCA9IGtvcmVhVGltZQogICAgICAgICAgLnRvSVNPU3RyaW5nKCkKICAgICAgICAgIC5yZXBsYWNlKCJUIiwgIiAiKQogICAgICAgICAgLnNsaWNlKDAsIDE5KTsKCiAgICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgICAgY29udGVudDogY29tbWVudC5lZGl0ZWRDb250ZW50LAogICAgICAgICAgdXBkYXRlZEF0OiB1cGRhdGVkQXQsCiAgICAgICAgfTsKCiAgICAgICAgLy8g7ISc67KE7JeQIOyXheuNsOydtO2KuCDsmpTssq0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS51cGRhdGVUYXNrKAogICAgICAgICAgYGNvbW1lbnRzLyR7Y29tbWVudC5jb21tZW50X2lkfWAsCiAgICAgICAgICBwYXJhbXMKICAgICAgICApOwogICAgICAgIGNvbnNvbGUubG9nKCLrjJPquIAg7IiY7KCVIOydkeuLtToiLCByZXNwb25zZSk7CgogICAgICAgIC8vIGlmIChyZXNwb25zZS5zdWNjZXNzKSB7CiAgICAgICAgLy8gICBhbGVydCgi64yT6riA7J20IOyImOygleuQmOyXiOyKteuLiOuLpC4iKTsKICAgICAgICAvLyAgIGNvbW1lbnQuY29tbWVudF9jb250ZW50ID0gY29tbWVudC5lZGl0ZWRDb250ZW50OyAvLyDsiJjsoJXrkJwg64K07JqpIOuwmOyYgQogICAgICAgIC8vICAgY29tbWVudC5pc0VkaXRpbmcgPSBmYWxzZTsgLy8g7IiY7KCVIOuqqOuTnCDsooXro4wKICAgICAgICAvLyB9IGVsc2UgewogICAgICAgIC8vICAgYWxlcnQoIuuMk+q4gCDsiJjsoJXsl5Ag7Iuk7Yyo7ZaI7Iq164uI64ukLiIpOwogICAgICAgIC8vIH0KICAgICAgICAvLyBhd2FpdCB0aGlzLmdldENvbnRhY3REdCgpOwogICAgICAgIC8vICAyNC4xMS4yMSDsiJjsoJUKICAgICAgICBhd2FpdCB0aGlzLmdldElucXVpcnlEZXRhaWwodGhpcy5zZWxlY3RlZElucXVpcnkuaWQpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuuMk+q4gCDsiJjsoJUg7KSRIOyYpOulmCDrsJzsg506IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLrjJPquIAg7IiY7KCVIOykkSDsmKTrpZjqsIAg67Cc7IOd7ZaI7Iq164uI64ukLiIpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZGVsZXRlQ29tbWVudHMoY29tbWVudElkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g7Yq57KCVIOuMk+q4gOydhCDsgq3soJwKICAgICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFkbWluU3RvcmUuZGVsZXRlVGFzayhgY29tbWVudHMvJHtjb21tZW50SWR9YCk7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0YXNrU3RvcmUuZGVsZXRlVGFzayhgY29tbWVudHMvJHtjb21tZW50SWR9YCk7CiAgICAgICAgY29uc29sZS5sb2coIuuMk+q4gCDsgq3soJwg7J2R64u1OiIsIHJlc3BvbnNlKTsKCiAgICAgICAgLy8g7IKt7KCcIO2bhCDrjJPquIAg66qp66Gd7J2EIOqwseyLoAogICAgICAgIGFsZXJ0KCLrjJPquIDsnbQg7IKt7KCc65CY7JeI7Iq164uI64ukLiIpOwogICAgICAgIC8vIGF3YWl0IHRoaXMuZ2V0Q29udGFjdER0KCk7CiAgICAgICAgLy8gMjQuMTEuMjEg7IiY7KCVCiAgICAgICAgYXdhaXQgdGhpcy5nZXRJbnF1aXJ5RGV0YWlsKHRoaXMuc2VsZWN0ZWRJbnF1aXJ5LmlkKTsKICAgICAgICAvLyB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi64yT6riAIOyCreygnCDspJEg7Jik66WYIOuwnOyDnToiLCBlcnJvcik7CiAgICAgICAgYWxlcnQoIuuMk+q4gCDsgq3soJzsl5Ag7Iuk7Yyo7ZaI7Iq164uI64ukLiIpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZ2V0TXlwcm9maWxlKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIlRva2VuIik7CiAgICAgICAgaWYgKCF0b2tlbikgewogICAgICAgICAgYWxlcnQoIuuhnOq3uOyduOydtCDtlYTsmpTtlanri4jri6QuIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICAvLyBBUEkg7JqU7LKtIOuztOuCtOq4sAogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KAogICAgICAgICAgImh0dHBzOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL3YxL2F1dGgvbWUiLAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApOwogICAgICAgIC8vIOydkeuLtSDrjbDsnbTthLDsl5DshJwg7ZWE7JqU7ZWcIOygleuztCDstpTstpwKICAgICAgICBjb25zdCBkYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBpZiAoZGF0YSkgewogICAgICAgICAgdGhpcy5sb2dpbkluZm8gPSBkYXRhOyAvLyDsgqzsmqnsnpAg7KCV67O0IOyggOyepQogICAgICAgICAgdGhpcy5wcm9maWxlX2ltYWdlID0KICAgICAgICAgICAgLy8gMjQuMTEuMjYg7IiY7KCVIC0g6riw67O4IO2UhOuhnO2VhCDsgqzsp4Qg67OA6rK9CiAgICAgICAgICAgIGRhdGEucHJvZmlsZUltYWdlIHx8IHRoaXMuYmFzaWNQcm9maWxlSW1nOyAvLyDtlITroZztlYQg7J2066+47KeAIOyEpOyglQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygi7ZSE66Gc7ZWEIOygleuztOulvCDqsIDsoLjsmKTsp4Ag66q77ZaI7Iq164uI64ukLiIpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLtlITroZztlYQg7KCV67O0IOqwgOyguOyYpOq4sCDsi6TtjKg6IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLtlITroZztlYQg642w7J207YSw66W8IOqwgOyguOyYpOuKlCDspJEg66y47KCc6rCAIOuwnOyDne2WiOyKteuLiOuLpC4iKTsKICAgICAgfQogICAgfSwKICAgIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICBpZiAoIWRhdGUpIHJldHVybiAiIjsKICAgICAgcmV0dXJuIGRhdGUuc3BsaXQoIlQiKVswXTsgLy8g64Kg7Kec66eMIOqwgOyguOyYpOq4sAogICAgfSwKICAgIG9wZW5BY2NvdW50RGVsZXRpb25Nb2RhbCgpIHsKICAgICAgdGhpcy5pc01vZGFsVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgY2xvc2VNb2RhbCgpIHsKICAgICAgdGhpcy5pc01vZGFsVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIC8vIDI0LjExLjE1IOyImOyglSAtIOuqqOuLrOuhnCDsiJjsoJUKICAgIGVkaXRteXNvY2lhbHByb2ZpbGUoKSB7CiAgICAgIC8vIGxvZ2luSW5mb+yXkOyEnCBpZCDqsJLsnYQg6rCA7KC47JmAIOy/vOumrOuhnCDsoITri6wKICAgICAgdGhpcy5pc09wZW5FZGl0U29jaWFsUHJvZmlsZSA9IHRydWU7CgogICAgICAvLyBjb25zdCB1c2VySWQgPSB0aGlzLmxvZ2luSW5mby5pZDsKICAgICAgLy8gaWYgKHVzZXJJZCkgewogICAgICAvLyAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgLy8gICAgIHBhdGg6ICIvZWRpdHNvY2lhbHByb2ZpbGUiLAogICAgICAvLyAgICAgcXVlcnk6IHsgaWQ6IHVzZXJJZCB9LAogICAgICAvLyAgIH0pOwogICAgICAvLyAgIHRoaXMuaXNPcGVuRWRpdFNvY2lhbFByb2ZpbGUgPSB0cnVlOwogICAgICAvLyB9IGVsc2UgewogICAgICAvLyAgIGFsZXJ0KCLroZzqt7jsnbgg7KCV67O06rCAIOyXhuyKteuLiOuLpC4g64uk7IucIOyLnOuPhO2VtCDso7zshLjsmpQuIik7CiAgICAgIC8vIH0KICAgIH0sCiAgICAvLyAyNC4xMS4xNSDsiJjsoJUgLSDstpTqsIAKICAgIGNsb3NlRWRpdFNvY2lhbFByb2ZpbGUoKSB7CiAgICAgIHRoaXMuaXNPcGVuRWRpdFNvY2lhbFByb2ZpbGUgPSBmYWxzZTsKICAgIH0sCiAgICAvLyAyNC4xMS4xNSDsiJjsoJUgLSDrqqjri6zroZwg7IiY7KCVCiAgICBlZGl0bXlwcm9maWxlKCkgewogICAgICAvLyBjb25zdCB1c2VySWQgPSB0aGlzLmxvZ2luSW5mby5pZDsKICAgICAgLy8gaWYgKHVzZXJJZCkgewogICAgICAvLyAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgLy8gICAgIHBhdGg6ICIvZWRpdHByb2ZpbGUiLAogICAgICAvLyAgICAgcXVlcnk6IHsgaWQ6IHVzZXJJZCB9LAogICAgICAvLyAgIH0pOwogICAgICB0aGlzLmlzT3BlbkVkaXRQcm9maWxlID0gdHJ1ZTsKICAgICAgLy8gfQogICAgfSwKICAgIC8vIDI0LjExLjE1IOyImOyglSAtIOy2lOqwgAogICAgY2xvc2VFZGl0UHJvZmlsZSgpIHsKICAgICAgdGhpcy5pc09wZW5FZGl0UHJvZmlsZSA9IGZhbHNlOwogICAgfSwKICAgIC8vMjQuMTEuMTUg7IiY7KCVIC0g66qo64us66GcIOyImOyglQogICAgdG9Hb0VkaXRQYXNzd29yZCgpIHsKICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiAiL2VkaXRwYXNzd29yZCIgfSk7CiAgICAgIHRoaXMuaXNPcGVuRWRpdFBhc3N3b3JkID0gdHJ1ZTsKICAgIH0sCiAgICAvLzI0LjExLjE1IOyImOyglSAtIOy2lOqwgAogICAgY2xvc2VFZGl0UGFzc3dvcmQoKSB7CiAgICAgIHRoaXMuaXNPcGVuRWRpdFBhc3N3b3JkID0gZmFsc2U7CiAgICB9LAogICAgb3BlbkNvbnRhY3REZXRhaWwoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogIi9teWNvbnRhY3QtZGV0YWlsIiB9KTsKICAgIH0sCiAgICBvcGVuUk1vZGFsKHJlc2VydmF0aW9uSWQpIHsKICAgICAgdGhpcy5pc09wZW5SZXNlcnZhdGlvbkNhbmNlbE1vZGFsID0gdHJ1ZTsKICAgICAgdGhpcy5zZWxlY3RlZFJlc2VydmF0aW9uSWQgPSByZXNlcnZhdGlvbklkOwogICAgfSwKICAgIGNsb3NlUk1vZGFsKCkgewogICAgICB0aGlzLmlzT3BlblJlc2VydmF0aW9uQ2FuY2VsTW9kYWwgPSBmYWxzZTsKICAgICAgdGhpcy5zZWxlY3RlZFJlc2VydmF0aW9uSWQgPSBudWxsOwogICAgfSwKICAgIG9uUmVzZXJ2YXRpb25DYW5jZWxlZCgpIHsKICAgICAgdGhpcy5nZXRSZXNlcnZhdGlvbkxpc3QoKTsgLy8g7JiI7JW9IOuqqeuhnSDqsLHsi6AKICAgIH0sCiAgICBuZXh0UmVzZXJ2YXRpb25QYWdlKCkgewogICAgICBpZiAodGhpcy5yZXNlcnZhdGlvbkN1cnJlbnRQYWdlIDwgdGhpcy5SZXNlcnZhdGlvbnN0b3RhbFBhZ2VzKSB7CiAgICAgICAgdGhpcy5yZXNlcnZhdGlvbkN1cnJlbnRQYWdlKys7CiAgICAgIH0KICAgIH0sCiAgICBwcmV2UmVzZXJ2YXRpb25QYWdlKCkgewogICAgICBpZiAodGhpcy5yZXNlcnZhdGlvbkN1cnJlbnRQYWdlID4gMSkgewogICAgICAgIHRoaXMucmVzZXJ2YXRpb25DdXJyZW50UGFnZS0tOwogICAgICB9CiAgICB9LAogICAgZ29Ub1Jlc2VydmF0aW9uUGFnZShwYWdlKSB7CiAgICAgIHRoaXMucmVzZXJ2YXRpb25DdXJyZW50UGFnZSA9IHBhZ2U7CiAgICB9LAogICAgbmV4dElucXVpcnlQYWdlKCkgewogICAgICBpZiAodGhpcy5pbnF1aXJ5Q3VycmVudFBhZ2UgPCB0aGlzLnRvdGFsUGFnZXMpIHsKICAgICAgICB0aGlzLmlucXVpcnlDdXJyZW50UGFnZSsrOwogICAgICB9CiAgICB9LAogICAgcHJldklucXVpcnlQYWdlKCkgewogICAgICBpZiAodGhpcy5pbnF1aXJ5Q3VycmVudFBhZ2UgPiAxKSB7CiAgICAgICAgdGhpcy5pbnF1aXJ5Q3VycmVudFBhZ2UtLTsKICAgICAgfQogICAgfSwKICAgIHRvR29Cb2FyZExpc3QoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogIi9ib2FyZC1saXN0IiB9KTsKICAgIH0sCiAgICBhc3luYyBzZWxlY3RJbnF1aXJ5KGlucXVpcnkpIHsKICAgICAgdGhpcy5zZWxlY3RlZElucXVpcnkgPSBpbnF1aXJ5OyAvLyDshKDtg53rkJwg66y47J2YIOyggOyepQogICAgICBjb25zb2xlLmxvZygi7ISg7YOd65CcIOusuOydmCBJRDoiLCBpbnF1aXJ5LmlkKTsKCiAgICAgIC8vIOyEoO2DneuQnCDrrLjsnZjsnZggSUTrpbwg7J207Jqp7ZW0IOyDgeyEuCDsoJXrs7Trpbwg6rCA7KC47Ji0CiAgICAgIGF3YWl0IHRoaXMuZ2V0SW5xdWlyeURldGFpbChpbnF1aXJ5LmlkKTsKICAgIH0sCiAgICBhc3luYyBnZXRJbnF1aXJ5RGV0YWlsKGlucXVpcnlJZCkgewogICAgICB0cnkgewogICAgICAgIC8vIEFQSSDtmLjstpzsnYQg7Ya17ZW0IO2KueyglSDrrLjsnZjsnZgg7IOB7IS4IOygleuztOulvCDqsIDsoLjsmLQKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRhc2tTdG9yZS5nZXRTZWxlY3RUYXNrcygKICAgICAgICAgIGBpbnF1aXJpZXMvJHtpbnF1aXJ5SWR9YAogICAgICAgICk7CiAgICAgICAgY29uc29sZS5sb2coIuqwgOyguOyYqCDrrLjsnZgg7IOB7IS4IOygleuztDoiLCByZXNwb25zZSk7CgogICAgICAgIC8vIOqwgOyguOyYqCDrjbDsnbTthLDrpbwgc2VsZWN0ZWRJbnF1aXJ57JeQIOyggOyepQogICAgICAgIGlmIChyZXNwb25zZSkgewogICAgICAgICAgdGhpcy5zZWxlY3RlZElucXVpcnkgPSB7CiAgICAgICAgICAgIC4uLnRoaXMuc2VsZWN0ZWRJbnF1aXJ5LAogICAgICAgICAgICB0aXRsZTogcmVzcG9uc2VbMF0uaW5xdWlyeV90aXRsZSwKICAgICAgICAgICAgY29udGVudDogcmVzcG9uc2VbMF0uaW5xdWlyeV9jb250ZW50LAogICAgICAgICAgICAvLyBhdXRob3I6IHJlc3BvbnNlWzBdLmlucXVpcnlfdXNlcl9uYW1lLAogICAgICAgICAgICAvLyAyNC4xMS4yMSDsiJjsoJUKICAgICAgICAgICAgYXV0aG9yOiB0aGlzLmxvZ2luSW5mby5uYW1lLAogICAgICAgICAgICBjcmVhdGVkQXQ6IHJlc3BvbnNlWzBdLmlucXVpcnlfY3JlYXRlZEF0LnNwbGl0KCJUIilbMF0sCiAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2VbMF0uc3RhdHVzLAogICAgICAgICAgfTsKCiAgICAgICAgICAvLyB0aGlzLmNvbW1lbnRzID0gcmVzcG9uc2VbMF0uY29tbWVudExpc3QgfHwgW107CiAgICAgICAgICAvLyB0aGlzLmNvbW1lbnRzID0gdGhpcy5jb21tZW50cy5tYXAoKGNvbW1lbnQpID0+ICh7CiAgICAgICAgICAvLyAgIC4uLmNvbW1lbnQsCiAgICAgICAgICAvLyAgIGlzRWRpdGluZzogZmFsc2UsCiAgICAgICAgICAvLyAgIGVkaXRlZENvbnRlbnQ6IGNvbW1lbnQuY29tbWVudF9jb250ZW50LAogICAgICAgICAgLy8gfSkpOwoKICAgICAgICAgIGNvbnNvbGUubG9nKCdyZXMgMTIzJywgcmVzcG9uc2UpCiAgICAgICAgICAvLyAyNC4xMS4yMSDsiJjsoJUKICAgICAgICAgIHRoaXMuY29tbWVudHMgPSAocmVzcG9uc2VbMF0uY29tbWVudExpc3QgfHwgW10pLmZpbHRlcigKICAgICAgICAgICAgKGNvbW1lbnQpID0+CiAgICAgICAgICAgICAgY29tbWVudC5jb21tZW50X2NvbnRlbnQgIT09IG51bGwgJiYKICAgICAgICAgICAgICBjb21tZW50LmNvbW1lbnRfY29udGVudC50cmltKCkgIT09ICIiICYmCiAgICAgICAgICAgICAgY29tbWVudC5jb21tZW50X2F1dGhvciAhPT0gbnVsbAogICAgICAgICAgKS5tYXAoKGNvbW1lbnQpID0+ICh7CiAgICAgICAgICAgIC4uLmNvbW1lbnQsCiAgICAgICAgICAgIGlzRWRpdGluZzogZmFsc2UsCiAgICAgICAgICAgIC8vIDI0LjExLjI3IOyImOyglQogICAgICAgICAgICBwcm9maWxlSW1hZ2U6IGNvbW1lbnQucHJvZmlsZUltYWdlIHx8IHRoaXMuYmFzaWNQcm9maWxlSW1nLCAvLyB1c2Vy7JeQ7IScIHByb2ZpbGVJbWFnZSDqsIDsoLjsmKTquLAKICAgICAgICAgICAgZWRpdGVkQ29udGVudDogY29tbWVudC5jb21tZW50X2NvbnRlbnQsCiAgICAgICAgICB9KSk7CgogICAgICAgICAgLy8gY29uc29sZS5sb2coInRoaXMuc2VsZWN0ZWRJbnF1aXJ5OiIsIHRoaXMuc2VsZWN0ZWRJbnF1aXJ5KTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJ0aGlzLnNlbGVjdGVkSW5xdWlyeS5wcm9maWxlSW1hZ2UiLCB0aGlzLnNlbGVjdGVkSW5xdWlyeS5jb21tZW50TGlzdFswXS5wcm9maWxlSW1hZ2UpOwogICAgICAgICAgLy8gY29uc29sZS5sb2coImNvbW1lbnQucHJvZmlsZUltYWdlIiwgdGhpcy5jb21tZW50c1swXS5wcm9maWxlSW1hZ2UpCiAgICAgICAgICAvLyBjb25zb2xlLmxvZygidGhpcy5jb21tZW50cyAxMjM6IiwgdGhpcy5jb21tZW50cyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIuusuOydmCDsg4HshLgg7KCV67O066W8IOqwgOyguOyYrCDsiJgg7JeG7Iq164uI64ukLiIpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLrrLjsnZgg7IOB7IS4IOygleuztCDqsIDsoLjsmKTquLAg7Iuk7YyoOiIsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGdldFJlc2VydmF0aW9uTGlzdCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJUb2tlbiIpOwogICAgICAgIGNvbnN0IHVzZXJJZCA9IE51bWJlcih0aGlzLmxvZ2luSW5mby5pZCk7CiAgICAgICAgaWYgKCF0b2tlbiB8fCAhdXNlcklkKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCLthqDtgbAg65iQ64qUIOyCrOyaqeyekCBJROqwgCDsl4bsirXri4jri6QuIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgKICAgICAgICAgIGBodHRwczovLzEzLjEyNC42Mi42ODozMDAwL2FwaS9yZXNlcnZhdGlvbnMvdXNlci8ke3VzZXJJZH1gLAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApOwoKICAgICAgICAvLyDsnZHri7Ug642w7J207YSwIO2ZleyduAogICAgICAgIGNvbnNvbGUubG9nKCLsmIjslb3smIjslb3smIjslb3smIjslb3smIjslb3smIjslb0iLCByZXNwb25zZSk7CiAgICAgICAgY29uc29sZS5sb2coIuyYiOyVveyYiOyVvSIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICBjb25zdCByZXNlcnZhdGlvbnNEYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgLy8g7JiI7JW9IOuCtOyXreydtCDsobTsnqztlaAg6rK97JqwCiAgICAgICAgaWYgKHJlc2VydmF0aW9uc0RhdGEgJiYgcmVzZXJ2YXRpb25zRGF0YS5sZW5ndGggPiAwKSB7CiAgICAgICAgICBjb25zdCByZXNlcnZhdGlvbnMgPSBbXTsKCiAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgcmVzZXJ2YXRpb25zRGF0YSkgewogICAgICAgICAgICAvLyDqsIEgaXRlbSDrgrTsnZgg66qo65OgIHJlc2VydmF0aW9uc+ulvCDrsJjrs7Ug7LKY66asCiAgICAgICAgICAgIGlmIChpdGVtLnJlc2VydmF0aW9ucyAmJiBpdGVtLnJlc2VydmF0aW9ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgZm9yIChjb25zdCByZXNlcnZhdGlvbiBvZiBpdGVtLnJlc2VydmF0aW9ucykgewogICAgICAgICAgICAgICAgLy8g7JiI7JW9IOygleuztCDstpTstpwKICAgICAgICAgICAgICAgIGNvbnN0IHJlc2VydmF0aW9uRGF0YSA9IHsKICAgICAgICAgICAgICAgICAgaWQ6IHJlc2VydmF0aW9uLmlkLAogICAgICAgICAgICAgICAgICBtYW5hZ2VyaWQ6IHJlc2VydmF0aW9uLm1hbmFnZXJpZCwKICAgICAgICAgICAgICAgICAgbmFtZTogcmVzZXJ2YXRpb24ucmVzZXJfdXNlciB8fCAiVW5rbm93biIsCiAgICAgICAgICAgICAgICAgIGRhdGU6IHRoaXMuZXh0cmFjdERhdGUocmVzZXJ2YXRpb24uc3RhcnRUaW1lKSwKICAgICAgICAgICAgICAgICAgLy8gdGltZTogYCR7cmVzZXJ2YXRpb24uc3RhcnRUaW1lLnNwbGl0KCdUJylbMV0uc3BsaXQoJzonKS5zbGljZSgwLCAyKS5qb2luKCc6Jyl9IH4gJHtyZXNlcnZhdGlvbi5lbmRUaW1lLnNwbGl0KCdUJylbMV0uc3BsaXQoJzonKS5zbGljZSgwLCAyKS5qb2luKCc6Jyl9IFske3RoaXMuZXh0cmFjdERhdGUocmVzZXJ2YXRpb24uc3RhcnRUaW1lKX1dYCwKICAgICAgICAgICAgICAgICAgLy8gMjQuMTIuMTEg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgICAgICAgICAgIC8vIHRpbWU6IGAke3RoaXMuZXh0cmFjdERhdGUocmVzZXJ2YXRpb24uc3RhcnRUaW1lKX0gWyR7cmVzZXJ2YXRpb24uc3RhcnRUaW1lLnNwbGl0KCdUJylbMV0uc3BsaXQoJzonKS5zbGljZSgwLCAyKS5qb2luKCc6Jyl9IH4gJHtyZXNlcnZhdGlvbi5lbmRUaW1lLnNwbGl0KCdUJylbMV0uc3BsaXQoJzonKS5zbGljZSgwLCAyKS5qb2luKCc6Jyl9XSBgLAogICAgICAgICAgICAgICAgICB0aW1lOiBgJHtyZXNlcnZhdGlvbi5zdGFydFRpbWUuc3BsaXQoJ1QnKVsxXS5zcGxpdCgnOicpLnNsaWNlKDAsIDIpLmpvaW4oJzonKX0gfiAke3Jlc2VydmF0aW9uLmVuZFRpbWUuc3BsaXQoJ1QnKVsxXS5zcGxpdCgnOicpLnNsaWNlKDAsIDIpLmpvaW4oJzonKX1gLAogICAgICAgICAgICAgICAgICBwZW9wbGU6IHJlc2VydmF0aW9uLm1lbWJlciB8fCAiMSIsCiAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzZXJ2YXRpb24uc3RhdHVzIHx8ICJVbmtub3duIiwKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgLy8g7KeA7KCQIOygleuztCDqsIDsoLjsmKTquLAKICAgICAgICAgICAgICAgIGNvbnN0IGJyYW5jaERhdGEgPSBhd2FpdCB0aGlzLmdldEJyYW5jaChyZXNlcnZhdGlvbi5tYW5hZ2VyaWQpOwogICAgICAgICAgICAgICAgaWYgKGJyYW5jaERhdGEpIHsKICAgICAgICAgICAgICAgICAgcmVzZXJ2YXRpb25EYXRhLnN0b3JlID0gYnJhbmNoRGF0YS5zdG9yZTsKICAgICAgICAgICAgICAgICAgcmVzZXJ2YXRpb25EYXRhLmltYWdlID0gYnJhbmNoRGF0YS5pbWFnZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyByZXNlcnZhdGlvbnMg67Cw7Je07JeQIOy2lOqwgAogICAgICAgICAgICAgICAgcmVzZXJ2YXRpb25zLnB1c2gocmVzZXJ2YXRpb25EYXRhKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHJlc2VydmF0aW9ucy5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IGRhdGVBID0gbmV3IERhdGUoYCR7YS5kYXRlfVQke2EudGltZS5zcGxpdCgnIH4gJylbMF19YCk7CiAgICAgICAgICAgIGNvbnN0IGRhdGVCID0gbmV3IERhdGUoYCR7Yi5kYXRlfVQke2IudGltZS5zcGxpdCgnIH4gJylbMF19YCk7CiAgICAgICAgICAgIHJldHVybiBkYXRlQiAtIGRhdGVBOyAvLyDstZzsi6Ag7Iuc6rCE67aA7YSwIOygleugrAogICAgICAgICAgfSk7CiAgICAgICAgICAvLyDqsrDtlanrkJwg642w7J207YSw66W8IHJlc2VydmF0aW9ucyDrsLDsl7Tsl5Ag7KCA7J6lCiAgICAgICAgICB0aGlzLnJlc2VydmF0aW9ucyA9IHJlc2VydmF0aW9uczsKICAgICAgICAgIGNvbnNvbGUubG9nKCLstZzsooUg7JiI7JW9IOuqqeuhnToiLCB0aGlzLnJlc2VydmF0aW9ucyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCLsmIjslb0g64K07Jet7J20IOyXhuyKteuLiOuLpC4iKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigi7JiI7JW9IOuCtOyXrSDqsIDsoLjsmKTquLAg7Iuk7YyoOiIsIGVycm9yKTsKICAgICAgICBhbGVydCgi7JiI7JW9IOuNsOydtO2EsOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCgogICAgZXh0cmFjdERhdGUoZGF0ZVRpbWUpIHsKICAgICAgaWYgKCFkYXRlVGltZSkgcmV0dXJuICIiOwogICAgICByZXR1cm4gZGF0ZVRpbWUuc3BsaXQoIlQiKVswXTsgLy8gJ1lZWVktTU0tREQnIO2YleyLneycvOuhnCDrsJjtmZgKICAgIH0sCiAgICAvLyDsi5zqsIQg67aA67aE66eMIOy2lOy2nO2VmOyXrCAnSEg6bW0nIO2YleyLneycvOuhnCDrs4DtmZgKICAgIGZvcm1hdFRpbWUoZGF0ZVRpbWUpIHsKICAgICAgaWYgKCFkYXRlVGltZSkgcmV0dXJuICIiOwogICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoZGF0ZVRpbWUpOwogICAgICBjb25zdCBob3VycyA9IFN0cmluZyhkYXRlLmdldEhvdXJzKCkpLnBhZFN0YXJ0KDIsICIwIik7CiAgICAgIGNvbnN0IG1pbnV0ZXMgPSBTdHJpbmcoZGF0ZS5nZXRNaW51dGVzKCkpLnBhZFN0YXJ0KDIsICIwIik7CiAgICAgIHJldHVybiBgJHtob3Vyc306JHttaW51dGVzfWA7CiAgICB9LAogICAgYXN5bmMgZ2V0QnJhbmNoKG1hbmFnZXJJZCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIlRva2VuIik7CgogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KAogICAgICAgICAgYGh0dHBzOi8vMTMuMTI0LjYyLjY4OjMwMDAvYXBpL3YxL2JyYW5jaC9tYW5hZ2VySWQvJHttYW5hZ2VySWR9YCwKICAgICAgICAgIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKTsKICAgICAgICBjb25zdCBicmFuY2hEYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICBjb25zb2xlLmxvZygiYnJhbmNoRGF0YSIsIGJyYW5jaERhdGEpCgogICAgICAgIC8vIOuNsOydtO2EsOqwgCDsnojripTsp4Ag7ZmV7J24IO2bhCDrsJjtmZgKICAgICAgICBpZiAoYnJhbmNoRGF0YSkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc3RvcmU6IGJyYW5jaERhdGEubmFtZSwKICAgICAgICAgICAgaW1hZ2U6CiAgICAgICAgICAgICAgYnJhbmNoRGF0YS5tYXBJbWFnZSwKICAgICAgICAgICAgYnJhbmNoSWQ6IGJyYW5jaERhdGEuYnJhbmNoSWQsCiAgICAgICAgICAgIGFkZHJlc3M6IGJyYW5jaERhdGEuYWRkcmVzcywKICAgICAgICAgICAgd2Vla2RheUhvdXJzOiBicmFuY2hEYXRhLndlZWtkYXlIb3VycywKICAgICAgICAgICAgd2Vla2VuZEhvdXJzOiBicmFuY2hEYXRhLndlZWtlbmRIb3VycywKICAgICAgICAgICAgbWFuYWdlcmlkOiBicmFuY2hEYXRhLm1hbmFnZXJpZCwKICAgICAgICAgICAgc3RvcmVTY2FsZTogYnJhbmNoRGF0YS5zdG9yZVNjYWxlLAogICAgICAgICAgICBsb2NhdGlvbjogewogICAgICAgICAgICAgIGxhdGl0dWRlOiBicmFuY2hEYXRhLmxhdGl0dWRlLAogICAgICAgICAgICAgIGxvbmdpdHVkZTogYnJhbmNoRGF0YS5sb25naXR1ZGUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8gMjQuMTIuMTIg7IiY7KCVIC0g7LaU6rCACiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBicmFuY2hEYXRhLmRlc2NyaXB0aW9uLAogICAgICAgICAgICBmcmVlUGFya2luZzogYnJhbmNoRGF0YS5mcmVlUGFya2luZywKICAgICAgICAgICAgdGVsTnVtYmVyOiBicmFuY2hEYXRhLnRlbE51bWJlcgogICAgICAgICAgfTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc29sZS5sb2coIuyngOygkCDsoJXrs7TqsIAg7JeG7Iq164uI64ukLiIpOwogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoIuyngOygkCDsoJXrs7Qg6rCA7KC47Jik6riwIOyLpO2MqDoiLCBlcnJvcik7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBnb1RvSW5xdWlyeVBhZ2UocGFnZSkgewogICAgICB0aGlzLmlucXVpcnlDdXJyZW50UGFnZSA9IHBhZ2U7CiAgICB9LAogICAgc3RhdHVzQ29sb3Ioc3RhdHVzKSB7CiAgICAgIHN3aXRjaCAoc3RhdHVzKSB7CiAgICAgICAgY2FzZSAid2FpdGluZyI6CiAgICAgICAgICByZXR1cm4gInRleHQtd2FpdGluZyI7IC8vIOuMgOq4sOykkSDsg4nsg4Eg7YG0656Y7IqkCiAgICAgICAgY2FzZSAiY29uZmlybSI6CiAgICAgICAgICByZXR1cm4gInRleHQtY29uZmlybSI7IC8vIOyYiOyVveyZhOujjCDsg4nsg4Eg7YG0656Y7IqkCiAgICAgICAgY2FzZSAiY2FuY2VsIjoKICAgICAgICAgIHJldHVybiAidGV4dC1jYW5jZWwiOyAvLyDsmIjslb3st6jshowg7IOJ7IOBIO2BtOuemOyKpAogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICByZXR1cm4gInRleHQtY2FuY2VsIjsgLy8g6riw67O4IOyDieyDgSDtgbTrnpjsiqQKICAgICAgfQogICAgfSwKCiAgICBnb0JhY2tUb0xpc3QoKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRJbnF1aXJ5ID0gbnVsbDsgLy8gUmV0dXJuIHRvIHRoZSBpbnF1aXJ5IGxpc3QKICAgIH0sCiAgICAvLyBhc3luYyB0b0dvUmVzZXJ2YXRpb24ocmVzZXJ2YXRpb25JZCkgewogICAgLy8gICB0cnkgewogICAgLy8gICAgIC8vIOyYiOyVvSBJROuhnCDsmIjslb0g642w7J207YSw66W8IOywvuq4sAogICAgLy8gICAgIGNvbnN0IHJlc2VydmF0aW9uID0gdGhpcy5yZXNlcnZhdGlvbnMuZmluZChyZXMgPT4gcmVzLmlkID09PSByZXNlcnZhdGlvbklkKTsKCiAgICAvLyAgICAgY29uc3QgbWFuYWdlcklkID0gcmVzZXJ2YXRpb24ubWFuYWdlcmlkOyAvLyByZXNlcnZhdGlvbuyXkOyEnCBtYW5hZ2VyaWQg7LaU7LacCgogICAgLy8gICAgIC8vIG1hbmFnZXJJZOuhnCDsp4DsoJAg642w7J207YSwIOqwgOyguOyYpOq4sAogICAgLy8gICAgIGNvbnN0IGJyYW5jaERhdGEgPSBhd2FpdCB0aGlzLmdldEJyYW5jaChtYW5hZ2VySWQpOwoKICAgIC8vICAgICBpZiAoYnJhbmNoRGF0YSkgewogICAgLy8gICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgLy8gICAgICAgICBuYW1lOiAicmVzZXJ2YXRpb24td3JpdGUiLAogICAgLy8gICAgICAgICBwYXJhbXM6IHsKICAgIC8vICAgICAgICAgICBuYW1lOiBicmFuY2hEYXRhLnN0b3JlLAogICAgLy8gICAgICAgICAgIGJyYW5jaElkOiBicmFuY2hEYXRhLmJyYW5jaElkLAogICAgLy8gICAgICAgICAgIGFkZHJlc3M6IGJyYW5jaERhdGEuYWRkcmVzcywKICAgIC8vICAgICAgICAgICB3ZWVrZGF5SG91cnM6IGJyYW5jaERhdGEud2Vla2RheUhvdXJzIHx8ICIiLAogICAgLy8gICAgICAgICAgIHdlZWtlbmRIb3VyczogYnJhbmNoRGF0YS53ZWVrZW5kSG91cnMgfHwgIiIsCiAgICAvLyAgICAgICAgICAgbWFwSW1hZ2U6IGJyYW5jaERhdGEuaW1hZ2UgfHwgIiIsCiAgICAvLyAgICAgICAgICAgbWFuYWdlcmlkOiBtYW5hZ2VySWQsCiAgICAvLyAgICAgICAgICAgc3RvcmVTY2FsZTogYnJhbmNoRGF0YS5zdG9yZVNjYWxlIHx8ICIiLAogICAgLy8gICAgICAgICAgIGxhdGl0dWRlOiBicmFuY2hEYXRhLmxvY2F0aW9uLmxhdGl0dWRlIHx8ICIiLAogICAgLy8gICAgICAgICAgIGxvbmdpdHVkZTogYnJhbmNoRGF0YS5sb2NhdGlvbi5sb25naXR1ZGUgfHwgIiIsCiAgICAvLyAgICAgICAgIH0sCiAgICAvLyAgICAgICB9KTsKICAgIC8vICAgICB9IGVsc2UgewogICAgLy8gICAgICAgY29uc29sZS5lcnJvcigi7KeA7KCQIOuNsOydtO2EsOqwgCDsl4bsirXri4jri6QuIik7CiAgICAvLyAgICAgICBhbGVydCgi7KeA7KCQIOygleuztOulvCDqsIDsoLjsmKTripQg642wIOyLpO2MqO2WiOyKteuLiOuLpC4iKTsKICAgIC8vICAgICB9CiAgICAvLyAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAvLyAgICAgY29uc29sZS5lcnJvcigi7JiI7JW9IOyDgeyEuCDsoJXrs7Trpbwg6rCA7KC47Jik64qUIOykkSDsmKTrpZgg67Cc7IOdOiIsIGVycm9yKTsKICAgIC8vICAgICBhbGVydCgi7JiI7JW9IOyDgeyEuCDsoJXrs7Trpbwg6rCA7KC47Jik64qUIOykkSDrrLjsoJzqsIAg67Cc7IOd7ZaI7Iq164uI64ukLiIpOwogICAgLy8gICB9CiAgICAvLyB9LAogICAgaXNSZXNlcnZhdGlvbkNhbmNlbGFibGUocmVzZXJ2YXRpb24pIHsKICAgICAgY29uc3QgY3VycmVudERhdGVUaW1lID0gbmV3IERhdGUoKTsgLy8g7ZiE7J6sIOuCoOynnOyZgCDsi5zqsIQKICAgICAgY29uc3QgcmVzZXJ2YXRpb25EYXRlVGltZSA9IG5ldyBEYXRlKGAke3Jlc2VydmF0aW9uLmRhdGV9VCR7cmVzZXJ2YXRpb24udGltZS5zcGxpdCgnIH4gJylbMF19YCk7IC8vIOyYiOyVvSDsi5zsnpEg7Iuc6rCECgogICAgICAvLyDsmIjslb0g7IOB7YOc6rCAICdjYW5jZWwn7J20IOyVhOuLiOqzoCwg7JiI7JW9IOyLnOqwhOydtCDtmITsnqzrs7Tri6Qg7J207ZuE7J24IOqyveyasOyXkOunjCB0cnVlCiAgICAgIHJldHVybiByZXNlcnZhdGlvbi5zdGF0dXMgIT09ICdjYW5jZWwnICYmIGN1cnJlbnREYXRlVGltZSA8IHJlc2VydmF0aW9uRGF0ZVRpbWU7CiAgICB9LAogICAgLy8gMjQuMTIuMTIg7IiY7KCVIC0g7LaU6rCACiAgICBhc3luYyB0b0dvQnJhbmNoKHJlc2VydmF0aW9uSWQpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyDsmIjslb0gSUTroZwg7JiI7JW9IOuNsOydtO2EsOulvCDssL7quLAKICAgICAgICBjb25zdCByZXNlcnZhdGlvbiA9IHRoaXMucmVzZXJ2YXRpb25zLmZpbmQocmVzID0+IHJlcy5pZCA9PT0gcmVzZXJ2YXRpb25JZCk7CgogICAgICAgIGNvbnN0IG1hbmFnZXJJZCA9IHJlc2VydmF0aW9uLm1hbmFnZXJpZDsgLy8gcmVzZXJ2YXRpb27sl5DshJwgbWFuYWdlcmlkIOy2lOy2nAoKICAgICAgICAvLyBtYW5hZ2VySWTroZwg7KeA7KCQIOuNsOydtO2EsCDqsIDsoLjsmKTquLAKICAgICAgICBjb25zdCBicmFuY2hEYXRhID0gYXdhaXQgdGhpcy5nZXRCcmFuY2gobWFuYWdlcklkKTsKICAgICAgICBjb25zb2xlLmxvZygnYnJhbmNoRGF0YTEnLCBicmFuY2hEYXRhKQoKICAgICAgICAvLyDtlYTsmpTtlZwg642w7J207YSwIOqwgOqztQogICAgICAgIHRoaXMuc2VsZWN0ZWRTaG9wID0gewogICAgICAgICAgbmFtZTogYnJhbmNoRGF0YS5zdG9yZSwKICAgICAgICAgIGJyYW5jaElkOiBicmFuY2hEYXRhLmJyYW5jaElkLAogICAgICAgICAgYWRkcmVzczogYnJhbmNoRGF0YS5hZGRyZXNzLAogICAgICAgICAgZnJlZVBhcmtpbmc6IGJyYW5jaERhdGEuZnJlZVBhcmtpbmcgfHwgIiIsCiAgICAgICAgICBkZXNjcmlwdGlvbjogYnJhbmNoRGF0YS5kZXNjcmlwdGlvbiB8fCAiIiwKICAgICAgICAgIHRlbE51bWJlcjogYnJhbmNoRGF0YS50ZWxOdW1iZXIgfHwgIiIsCiAgICAgICAgICB3ZWVrZGF5SG91cnM6IGJyYW5jaERhdGEud2Vla2RheUhvdXJzIHx8ICIiLAogICAgICAgICAgd2Vla2VuZEhvdXJzOiBicmFuY2hEYXRhLndlZWtlbmRIb3VycyB8fCAiIiwKICAgICAgICAgIG1hcEltYWdlOiBicmFuY2hEYXRhLmltYWdlIHx8ICIiLAogICAgICAgICAgbWFuYWdlcmlkOiBtYW5hZ2VySWQsCiAgICAgICAgICBzdG9yZVNjYWxlOiBicmFuY2hEYXRhLnN0b3JlU2NhbGUgfHwgIiIsCiAgICAgICAgICBsYXRpdHVkZTogYnJhbmNoRGF0YS5sb2NhdGlvbi5sYXRpdHVkZSB8fCAiIiwKICAgICAgICAgIGxvbmdpdHVkZTogYnJhbmNoRGF0YS5sb2NhdGlvbi5sb25naXR1ZGUgfHwgIiIsCiAgICAgICAgfSwKCiAgICAgICAgICB0aGlzLmlzT3BlbkdhbWVEZXRhaWwgPSB0cnVlOwoKICAgICAgICBjb25zb2xlLmxvZygiVXBkYXRlZCBzZWxlY3RlZFNob3A6IiwgSlNPTi5zdHJpbmdpZnkodGhpcy5zZWxlY3RlZFNob3ApKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCLsmIjslb0g7IOB7IS4IOygleuztOulvCDqsIDsoLjsmKTripQg7KSRIOyYpOulmCDrsJzsg506IiwgZXJyb3IpOwogICAgICAgIGFsZXJ0KCLsmIjslb0g7IOB7IS4IOygleuztOulvCDqsIDsoLjsmKTripQg7KSRIOusuOygnOqwgCDrsJzsg53tlojsirXri4jri6QuIik7CiAgICAgIH0KICAgIH0sCiAgICAvLyAyNC4xMi4xMiDsiJjsoJUgLSDstpTqsIAKICAgIGNsb3NlR2FtZURldGFpbCgpIHsKICAgICAgdGhpcy5pc09wZW5HYW1lRGV0YWlsID0gZmFsc2U7CiAgICAgIHRoaXMuc2VsZWN0ZWRTaG9wID0gbnVsbDsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["MyProfile.vue"],"names":[],"mappings":";AA0jfile":"MyProfile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"myprofile-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" />\n      <div class=\"title valign-text-middle pretendard-bold-mine-shaft-38px\">\n        내정보\n      </div>\n      <div class=\"wrap\">\n        <div class=\"profile_tab pretendard-medium-granite-gray-18px\">\n          <div v-for=\"(tab, index) in tabs\" :key=\"index\" @click=\"selectTab(tab)\"\n            :class=\"['tab', { active: selectedTab === tab }]\">\n            {{ tab }}\n          </div>\n        </div>\n        <!-- 내정보 변경 Section -->\n        <div v-if=\"selectedTab === '내정보 변경'\" class=\"myinfo_wrap\">\n          <!-- Profile Section -->\n          <div class=\"profile-pic-container\">\n            <!-- Placeholder for user profile image -->\n            <div class=\"profile-pic\">\n              <!-- 24.11.26 수정 - 기본프로필 사진 변경 -->\n              <img :src=\"profile_image || basicProfileImg\" alt=\"User Profile\" />\n            </div>\n\n            <!-- Camera icon overlay -->\n            <label for=\"file-upload\" class=\"camera-icon\">\n              <img src=\"../../img/camera.png\" alt=\"Upload Icon\" />\n            </label>\n            <input type=\"file\" id=\"file-upload\" accept=\"image/*\" @change=\"onFileChange\" style=\"display: none\" />\n          </div>\n\n          <!-- 개인정보 Section -->\n          <div class=\"info-section\">\n            <div class=\"info_title\">\n              <!-- 24.12.23 수정 - div 추가 -->\n              <div class=\"info-title-first\">\n                <!-- 24.12.04 수정 - font 변경 -->\n                <div class=\"pretendard-medium-black-24px personaltitle\">\n                  개인정보\n                </div>\n                <div class=\"login_status\">\n                  <div class=\"circle pretendard-medium-log-cabin-18px\" :class=\"{\n                    'naver-color': loginInfo.type === 'NAVER',\n                    'kakao-color': loginInfo.type === 'KAKAO',\n                  }\"></div>\n                  <!-- 24.12.05 수정 - 폰트 추가 -->\n                  <span class=\"pretendard-regular-normal-granite-gray-18px\" v-if=\"loginInfo.type === 'NAVER'\">네이버\n                    로그인</span>\n                  <span class=\"pretendard-regular-normal-granite-gray-18px\" v-else-if=\"loginInfo.type === 'KAKAO'\">카카오\n                    로그인</span>\n                  <span class=\"pretendard-regular-normal-granite-gray-18px\" v-else>일반 로그인</span>\n                </div>\n              </div>\n              <!-- 24.11.15 수정 - 창 이동에서 모달 이동으로 변경 -->\n              <!-- 24.12.20 수정 - 폰트 추가 -->\n              <button class=\"persional-edit-button pretendard-medium-white-18px\" @click=\"editmysocialprofile()\">\n                개인정보 변경\n              </button>\n            </div>\n            <table class=\"info-table\">\n              <thead>\n                <tr class=\"pretendard-bold-mine-shaft-18px\" style=\"background-color: #f5f6f6\">\n                  <th>이름</th>\n                  <th>아이디</th>\n                  <th>생년월일</th>\n                  <th>성별</th>\n                  <th>등급</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"pretendard-light-granite-gray-18px\">\n                  <td>{{ loginInfo.name }}</td>\n                  <td>{{ loginInfo.phone }}</td>\n                  <td>{{ loginInfo.birthDay }}</td>\n                  <!-- 24.12.11 수정 - unknown 인 경우 '-' 출력 -->\n                  <td>{{ loginInfo.gender === \"MALE\" ? \"남자\" : loginInfo.gender === \"FEMALE\" ? \"여자\" : \"-\" }}</td>\n                  <td class=\"rank pretendard-medium-monza-18px\">\n                    {{ loginInfo.grade }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"info-warning pretendard-light-red-14px\">\n              ※ 실제 정보와 다르게 입력하는 경우 추후 대회 참가, 보상에 문제가\n              발생할 수 있습니다.\n            </p>\n          </div>\n\n          <!-- 회원정보 Section -->\n          <div class=\"member-info-section\">\n            <div class=\"member-info-title\">\n              <!-- 24.12.04 수정 - font 변경 -->\n              <div class=\"pretendard-medium-black-24px subtitle\">회원정보</div>\n              <!-- 24.11.15 수정 - 창 이동에서 모달 이동으로 변경 -->\n              <!-- 24.12.20 수정 - 폰트 추가 -->\n              <button class=\"persional-edit-button pretendard-medium-white-18px\" @click=\"editmyprofile()\">\n                회원정보 변경\n              </button>\n            </div>\n            <table class=\"member-info-table\">\n              <tbody>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">닉네임</td>\n                  <!-- 24.12.20 수정 - 폰트 수정 -->\n                  <td class=\"pretendard-medium-granite-gray-18px\">\n                    <!-- {{ loginInfo.username }} -->\n                    <!-- 24.11.26 수정 - 이름 나오게 수정 -->\n                    {{ loginInfo.userName }}\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">\n                    매장로그인 비밀번호\n                  </td>\n                  <!-- 24.12.20 수정 - 폰트 수정 -->\n                  <td class=\"pretendard-medium-granite-gray-18px\">\n                    {{ loginInfo.storeId }}\n                    <!-- 24.12.20 수정 - 폰트 수정 -->\n                    <span class=\"pretendard-medium-suva-gray-16px password-info\">(매장에서 로그인 시\n                      닉네임과 함께 사용하는 간편 비밀번호입니다.)</span>\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">휴대폰 번호</td>\n                  <!-- 24.12.20 수정 - 폰트 수정 -->\n                  <td class=\"pretendard-medium-granite-gray-18px\">\n                    <!-- {{ loginInfo.phoneNm }} -->\n                    <!-- 24.11.26 수정 - 번호 나오게 수정 -->\n                    {{ loginInfo.phoneNm }}\n                  </td>\n                </tr>\n                <tr>\n                  <!-- 24.12.04 수정 - font 변경 -->\n                  <td class=\"pretendard-medium-black-18px\">이메일</td>\n                  <!-- 24.12.20 수정 - 폰트 수정 -->\n                  <td class=\"pretendard-medium-granite-gray-18px last-border\">\n                    {{ loginInfo.email }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- 비밀번호 변경 Section -->\n          <div class=\"password-change-section\">\n            <!-- 24.12.04 수정 - font 변경 -->\n            <div class=\"pretendard-medium-black-24px subtitle\">\n              비밀번호 변경\n            </div>\n            <table class=\"password-change-table\">\n              <tr>\n                <td class=\"pretendard-medium-black-18px\">비밀번호</td>\n                <td>\n                  <!-- 24.11.15 수정 - 모달로 변경 -->\n                  <!-- 24.12.04 수정 - font 변경 -->\n                   <!-- 24.12.23 수정 - div로 변경 -->\n                  <div v-if=\"loginInfo.type === 'PHONE'\"\n                    class=\"password-change-button pretendard-medium-torea-bay-18px\" @click=\"toGoEditPassword()\">\n                    비밀번호 변경\n                </div>\n                </td>\n              </tr>\n            </table>\n          </div>\n\n          <!-- 간편로그인 Section -->\n          <div class=\"quick-login-section\">\n            <!-- 24.12.04 수정 - font 변경 -->\n            <div class=\"pretendard-medium-black-24px subtitle\">\n              간편로그인\n            </div>\n            <table class=\"quick-login-table\">\n              <tr>\n                <td class=\"pretendard-medium-black-18px\">간편 로그인</td>\n                <td>\n                  <div class=\"login-status\">\n                    <div class=\"link-button\">\n                      <div class=\"link-align\">\n                        <!-- 24.12.05 수정 - 색상 필터링 -->\n                        <div class=\"circle pretendard-medium-log-cabin-18px\" :class=\"{\n                          'naver-color': loginInfo.type === 'NAVER',\n                          'kakao-color': loginInfo.type === 'KAKAO',\n                        }\"></div>\n                        <!-- 24.12.20 수정 - 폰트 추가 -->\n                        <div class=\"pretendard-medium-granite-gray-18px\">{{\n                          loginInfo.createdAt\n                            ? loginInfo.createdAt.split(\"T\")[0]\n                            : \"\"\n                        }}\n                          연동</div>\n                      </div>\n                    </div>\n                    <div class=\"social-button\">\n                      <!-- 24.12.05 수정 - 폰트 변경 -->\n                      <button v-if=\"loginInfo.type === 'NAVER'\"\n                        class=\"naver-button pretendard-regular-normal-white-14px\">\n                        네이버 연동\n                      </button>\n\n                      <!-- Kakao 로그인일 경우에만 표시 -->\n                      <!-- 24.12.05 수정 - 폰트 변경 -->\n                      <button v-if=\"loginInfo.type === 'KAKAO'\"\n                        class=\"kakao-button pretendard-regular-normal-log-cabin-14px\">\n                        카카오 연동\n                      </button>\n                      <div v-if=\"!['NAVER', 'KAKAO'].includes(loginInfo.type)\" class=\"no-login-type\"></div>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </table>\n            <!-- 24.12.05 수정 - 폰트 변경 -->\n            <p class=\"logout-note pretendard-light-mountain-mist-18px\">\n              레저로 서비스를 그만 이용하시겠다면,\n              <!-- 24.12.05 수정 - 폰트 변경 -->\n              <span class=\"logout_button pretendard-medium-granite-gray-18px\"\n                @click=\"openAccountDeletionModal\">회원탈퇴</span>\n            </p>\n          </div>\n        </div>\n        <!-- <div v-if=\"selectedTab === '내정보 변경'\" class=\"myinfo_wrap\"> -->\n        <!-- Profile Section, 개인정보 Section, 회원정보 Section, 비밀번호 변경, 간편로그인 -->\n        <!-- Existing content for 내정보 변경 Section -->\n        <!-- </div> -->\n\n        <!-- 24.11.25 수정 - font 색상 수정 -->\n        <!-- 1:1 문의내역 Section -->\n        <div class=\"frame-7820\" v-else-if=\"selectedTab === '1:1 문의내역'\">\n          <!-- Inquiry List -->\n          <!-- 24.11.20 수정 -->\n          <div class=\"frame-7831\" v-if=\"!inquiries.length\">\n            <p class=\"no-data-message\">문의가 없습니다.</p>\n          </div>\n          <!-- 24.11.21 수정 -->\n          <div class=\"frame-7831\" v-if=\"inquiries.length && !selectedInquiry\">\n            <!-- 24.12.09 수정 - 추가 -->\n            <div class=\"select-box pretendard-regular-normal-mine-shaft-18px\">\n              <select v-model=\"inquiryOption\">\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"전체\" selected>전체</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"접수완료\">접수완료</option>\n                <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"답변완료\">답변완료</option>\n              </select>\n            </div>\n            <div>\n              <table class=\"inquiry-table pretendard-regular-granite-gray-18px\">\n                <thead>\n                  <tr class=\"inpuiry-header pretendard-bold-mine-shaft-18px\">\n                    <th>번호</th>\n                    <th>제목</th>\n                    <th>작성일</th>\n                    <th>상태</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <!-- 24.12.09 수정 - paginatedItems - sortedInquiries 로 변경 -->\n                  <tr v-for=\"(item, index) in sortedInquiries\" :key=\"item.id\" @click=\"selectInquiry(item)\">\n\n\n                    <td class=\"table-number pretendard-light-granite-gray-16px\" data-label=\"번호\">\n                      <!-- {{ index + 1 }} -->\n                      <!-- 24.11.25 수정 -->\n                      <!-- {{ inquiries.length - ((inquiryCurrentPage - 1) * itemsPerPage + index) }} -->\n                      <!-- 24.12.23 수정 -->\n                      {{ item.id }}\n                    </td>\n                    <td class=\"table-title pretendard-light-granite-gray-16px\" data-label=\"제목\">\n                      {{ item.title }}\n                    </td>\n                    <td class=\"table-date pretendard-light-granite-gray-16px\" data-label=\"작성일\">\n                      {{ item.createdAt.split(\"T\")[0] }}\n                    </td>\n                    <td class=\"table_status_wrap\" data-label=\"상태\">\n                      <!-- 24.11.26 수정 -->\n                      <div :class=\"[\n                        'table-status',\n                        { completed: item.status === 'answer' },\n                      ]\" class=\"pretendard-semi-bold-log-cabin-14px\">\n                        <!-- {{ item.status }} -->\n                        <!-- {{ item.commentList && item.commentList.length > 0\n                          ? '답변완료'\n                          : item.status === 'waiting'\n                            ? '접수완료'\n                            : '상태 없음'\n                        }} -->\n                        {{ item.status === 'waiting'\n                          ? '접수완료'\n                          : '답변완료' }}\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <!-- <p v-if=\"!inquiries.length\" class=\"no-data-message\">문의가 없습니다.</p> -->\n              <div class=\"pagination-controls\">\n                <img class=\"pagination-arrow\" @click=\"prevInquiryPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n                  :class=\"{ disabled: inquiryCurrentPage === 1 }\" />\n                <!-- 24.11.21 수정 -->\n                <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n                  <div v-for=\"page in totalPages\" :key=\"page\" :class=\"[\n                    'page-number',\n                    { active: page === inquiryCurrentPage },\n                  ]\" @click=\"goToInquiryPage(page)\">\n                    {{ page }}\n                  </div>\n                </div>\n                <img class=\"pagination-arrow flipped\" @click=\"nextInquiryPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n                  :class=\"{ disabled: inquiryCurrentPage === totalPages }\" />\n              </div>\n            </div>\n          </div>\n\n          <!-- Inquiry Detail Section -->\n          <div v-if=\"selectedInquiry\" class=\"inquiry-detail-container\">\n            <div class=\"inquiry-header\">\n              <h2 class=\"inquiry-title pretendard-bold-log-cabin-30px\">\n                {{ selectedInquiry.title }}\n              </h2>\n              <div class=\"inquiry-meta pretendard-regular-normal-mountain-mist-20px\">\n                <!-- 24.12.23 수정 - div 추가 -->\n                <div class=\"inquiry-meta-first\">\n                  <span>{{ selectedInquiry.createdAt }}</span> l\n                  <span>작성자: {{ selectedInquiry.author }}</span>\n                </div>\n                <!-- 24.11.26 수정 - 색 구분 -->\n                <button class=\" pretendard-semi-bold-monza-14px\" :class=\"['status-button',\n                  {\n                    waiting: computedStatus === '접수완료'\n                  }]\">\n                  {{ computedStatus }}\n                </button>\n              </div>\n            </div>\n            <div class=\"inquiry-content\">\n              <!-- 24.12.23 수정 - v-if 추가 -->\n              <img v-if=\"selectedInquiry.imageUrl\" :src=\"selectedInquiry.imageUrl\" />\n              <p class=\"pretendard-light-granite-gray-18px\">{{ selectedInquiry.content }}</p>\n            </div>\n            <div class=\"back\">\n              <button @click=\"goBackToList\" class=\"back-button pretendard-medium-white-18px\">\n                목록으로\n              </button>\n            </div>\n\n            <!-- Reply Section -->\n            <div class=\"reply-content\">\n              <div class=\"reply-write\">\n                <!-- 24.12.23 수정 - 폰트 추가 -->\n                <textarea placeholder=\"내용을 입력해 주세요\" class=\"reply-textarea pretendard-regular-normal-mountain-mist-16px\"\n                  v-model=\"contents\"></textarea>\n                <div class=\"reply-buttons\">\n                  <button class=\"cancel-button pretendard-regular-normal-white-18px\">\n                    취소\n                  </button>\n                  <button class=\"submit-button pretendard-regular-normal-white-18px\" @click=\"postComments\">\n                    입력\n                  </button>\n                </div>\n              </div>\n              <div class=\"reply-view\">\n                <div class=\"reply-count pretendard-bold-black-20px\">답변 {{ comments.length }}</div>\n                <hr class=\"divider\" />\n                <!-- 24.11.21 수정 - 추가 -->\n                <!-- 댓글이 있을 경우 -->\n                <div v-if=\"comments.length > 0\">\n                  <div v-for=\"comment in comments\" :key=\"comment.id\" class=\"comment\">\n                    <div class=\"comment-header\">\n                      <img class=\"comment-avatar\" :src=\"comment.avatar || (comment.profileImage || basicProfileImg)\"\n                        alt=\"User avatar\" />\n                      <span class=\"comment-author pretendard-medium-mine-shaft-20px\">{{\n                        comment.comment_author\n                        }}</span>\n                      <span class=\"comment-date pretendard-regular-normal-mine-shaft-18px\">\n                        {{\n                          comment.comment_createdAt\n                            ? comment.comment_createdAt.split(\"T\")[0]\n                            : \"날짜 없음\"\n                        }}\n                      </span>\n                    </div>\n                    <div class=\"comment-body pretendard-regular-normal-granite-gray-18px\">\n                      <div v-if=\"comment.isEditing\">\n                        <textarea type=\"text\" v-model=\"comment.editedContent\"\n                          class=\"comment-input pretendard-regular-normal-granite-gray-18px\" placeholder=\"댓글을 수정하세요\" />\n                      </div>\n                      <div v-else>\n                        {{ comment.comment_content || \"내용 없음\" }}\n                      </div>\n                    </div>\n                    <div v-if=\"comment.comment_userId === loginInfo.id\" class=\"comment-actions\">\n                      <button class=\"comment-edit-button pretendard-regular-normal-white-18px\"\n                        @click=\"toggleEditComment(comment)\">\n                        {{ comment.isEditing ? \"완료\" : \"수정\" }}\n                      </button>\n                      <button class=\"delete-button pretendard-regular-normal-white-18px\"\n                        @click=\"deleteComments(comment.comment_id)\">\n                        삭제\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <!-- 24.11.21 수정 - 추가 -->\n                <!-- 댓글이 없을 경우 -->\n                <div v-else>\n                  <p class=\"pretendard-regular-normal-granite-gray-18px\">등록된 댓글이 없습니다.</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Back Button -->\n          </div>\n        </div>\n\n\n        <!-- 예약 내역 탭 -->\n        <div class=\"frame-78201\" v-else-if=\"selectedTab === '예약내역'\">\n          <!-- 24.12.09 수정 - 추가 -->\n          <div class=\"select-box pretendard-regular-normal-mine-shaft-18px\">\n            <select v-model=\"reservationOption\">\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"전체\" selected>전체</option>\n              <!-- 24.12.11 수정 - 대기중 - 접수중 으로 변경 -->\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"접수중\">접수중</option>\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"예약완료\">예약완료</option>\n              <option class=\"pretendard-regular-normal-mine-shaft-18px\" value=\"예약취소\">예약취소</option>\n            </select>\n          </div>\n          <p v-if=\"!reservations.length\" class=\"no-data-message\">예약내역이 없습니다.</p>\n          <!-- 24.12.09 수정 - paginatedReservations - sortedReservations 로 변경 -->\n          <div v-for=\"reservation in sortedReservations\" :key=\"reservation.id\" class=\"frame-777\">\n            <div class=\"frame-7925\">\n              <!-- <div class=\"frame-7301\" @click=\"toGoReservation(reservation.id)\"> -->\n              <!-- 24.12.12 수정 - 예약 페이지 - 상세모달로 변경 -->\n              <div class=\"frame-7301\" @click=\"toGoBranch(reservation.id)\">\n                <img class=\"frame-7298\" :src=\"reservation.image\" alt=\"예약 이미지\" />\n              </div>\n              <div class=\"frame-7923\">\n                <!-- <div class=\"frame-7922\" @click=\"toGoReservation(reservation.id)\"> -->\n                <!-- 24.12.12 수정 - 예약 페이지 - 상세모달로 변경 -->\n                <div class=\"frame-7922\" @click=\"toGoBranch(reservation.id)\">\n                  <div class=\"frame-7308\">\n                    <div class=\"frame-7917\">\n                      <div class=\"group-33601\">\n                        <!-- 24.12.23 수정 - 아이콘 변경, class 변경 -->\n                        <img v-if=\"reservation.status === 'waiting'\" class=\"noniconsloading-16 group-33600\"\n                          src=\"../../img/waiting.png\" alt=\"접수중 아이콘\" />\n                        <img v-else-if=\"reservation.status === 'confirm'\" class=\"lets-iconscheck-fill\"\n                          src=\"../../img/confirm.png\" alt=\"예약완료 아이콘\" />\n                        <img v-else-if=\"reservation.status === 'cancel'\" class=\"vector\" src=\"../../img/cancel.png\"\n                          alt=\"예약취소 아이콘\" />\n                      </div>\n                      <!-- 24.12.11 수정 - 폰트 추가 -->\n                      <div class=\"text-16 valign-text-middle pretendard-bold-monza-16px\"\n                        :class=\"statusColor(reservation.status)\">\n                        <!-- 24.12.11 수정 - 대기중 - 접수중 으로 변경 -->\n                        <span v-if=\"reservation.status === 'waiting'\"\n                          :class=\"statusColor(reservation.status)\">접수중</span>\n                        <span v-else-if=\"reservation.status === 'confirm'\"\n                          :class=\"statusColor(reservation.status)\">예약완료</span>\n                        <span v-else-if=\"reservation.status === 'cancel'\"\n                          :class=\"statusColor(reservation.status)\">예약취소</span>\n                        <span v-else>{{ reservation.status }}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"frame-7921\">\n                    <div class=\"frame-7303\">\n                      <div class=\"text reservationtext valign-text-middle pretendard-bold-mine-shaft-24px\">\n                        {{ reservation.store }}\n                      </div>\n                    </div>\n                    <div class=\"frame-7920\">\n                      <div class=\"frame-7918 pretendard-semi-bold-black-16px\">\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약자</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            {{ reservation.name }}\n                          </div>\n                        </div>\n                        <!-- <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약 시간</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            {{ reservation.time }}\n                          </div>\n                        </div> -->\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">예약 시간</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            <!-- {{ reservation.time }} -->\n                            <!-- 24.12.12 수정 -->\n                            <!-- {{ reservation.date + ` ` + `[` + reservation.time + `]` }} -->\n                            <!-- 24.12.20 수정 - resevation-date-time 추가  -->\n                            <div class=\"reservation-date-time\">\n                              <span>{{ reservation.date }}</span>\n                              <!-- 24.12.23 수정 - div 추가 -->\n                              <div>[<span>{{ reservation.time }}</span>]</div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"reservation-align\">\n                          <div class=\"text-5 valign-text-middle\">인원</div>\n                          <div class=\"reservation-name valign-text-middle pretendard-regular-normal-log-cabin-16px\">\n                            {{ reservation.people }}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"frame-7926\">\n                  <!-- 24.12.12 수정 - article - button 수정 -->\n                  <button v-if=\"isReservationCancelable(reservation)\"\n                    class=\"frame-7923-3 pretendard-regular-normal-white-18px\" @click=\"openRModal(reservation.id)\">\n                    예약취소\n                  </button>\n                  <!-- <article v-if=\"isReservationCancelable(reservation)\" class=\"frame-7923-3\"\n                    style=\"background-color: #ccc\" @click=\"openRModal(reservation.id)\">\n                    <div class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\">\n                      예약취소\n                    </div>\n                  </article> -->\n                  <!-- <article class=\"frame-7923-3\">\n                    <div\n                      class=\"text_label-31 valign-text-middle pretendard-regular-normal-white-18px\"\n                    >\n                      매장보기\n                    </div>\n                  </article> -->\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"pagination-controls\" v-if=\"reservations.length\">\n            <img class=\"pagination-arrow\" @click=\"prevReservationPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n              :class=\"{ disabled: reservationCurrentPage === 1 }\" />\n            <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n              <div v-for=\"page in ReservationstotalPages\" :key=\"page\" :class=\"[\n                'page-number',\n                { active: page === reservationCurrentPage },\n              ]\" @click=\"goToReservationPage(page)\">\n                {{ page }}\n              </div>\n            </div>\n            <img class=\"pagination-arrow flipped\" @click=\"nextReservationPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n              :class=\"{\n                disabled: reservationCurrentPage === ReservationstotalPages,\n              }\" />\n          </div>\n        </div>\n      </div>\n      <x-footer />\n    </div>\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditProfile v-if=\"isOpenEditProfile\" @close=\"closeEditProfile\" :loginInfo=\"loginInfo\" @confirm=\"confrimEdit\" />\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditSocialProfile v-if=\"isOpenEditSocialProfile\" :loginInfo=\"loginInfo\" @close=\"closeEditSocialProfile\"\n      @confirm=\"confrimEdit\" />\n    <!-- 24.11.15 수정 - 추가 -->\n    <EditPassword v-if=\"isOpenEditPassword\" @close=\"closeEditPassword\" :phone=\"loginInfo.phone\" />\n    <ReservationCancelModal v-if=\"isOpenReservationCancelModal\" @closeRModal=\"closeRModal\"\n      @reservationCanceled=\"onReservationCanceled\" :reservationId=\"selectedReservationId\" />\n    <AccountDeletionModal v-if=\"isModalVisible\" @close=\"closeModal\" :idx=\"loginInfo.id\" />\n    <!-- 24.12.11 수정 - 추가 -->\n    <GameDetail v-if=\"isOpenGameDetail && selectedShop\" :shop=\"selectedShop\" @close=\"closeGameDetail\" />\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport AccountDeletionModal from \"./AccountDeletionModal.vue\";\nimport ReservationCancelModal from \"./ReservationCancelModal\";\nimport GameDetail from \"./GameDetail\"; // 24.12.12 수정 - 추가\nimport XFooter from \"./XFooter\";\nimport axios from \"axios\";\nimport { taskStore } from \"@/store/taskStore\"; // API 호출\nimport EditProfile from \"./EditProfile.vue\"; //24.11.15 수정 - 추가\nimport EditSocialProfile from \"./EditSocialProfile.vue\";//24.11.15 수정 - 추가\nimport EditPassword from \"./EditPassword.vue\";//24.11.15 수정 - 추가\nexport default {\n  name: \"MyProfile\",\n  components: {\n    Header,\n    RjZsWi,\n    EditProfile,//24.11.15 수정 - 추가\n    EditSocialProfile,//24.11.15 수정 - 추가\n    EditPassword, //24.11.15 수정 - 추가\n    AccountDeletionModal,\n    ReservationCancelModal,\n    GameDetail, // 24.12.12 수정 - 추가\n    XFooter,\n  },\n  data() {\n    return {\n      loginInfo: {},\n      comments: [],\n      contents: \"\",\n      imageUrl: \"\",\n      inquiryCurrentPage: 1, // 1:1 문의내역의 현재 페이지\n      reservationCurrentPage: 1,\n      selectedInquiry: null,\n      itemsPerPage: 5,\n      RitemsPerPage: 3,\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      tabs: [\"내정보 변경\", \"1:1 문의내역\", \"예약내역\"],\n      inquiries: [],\n      reservations: [],\n      selectedTab: \"내정보 변경\",\n      memberInfo: {},\n      quickLoginStatus: {},\n      isModalVisible: false,\n      profile_image: \"\",\n      isOpenReservationCancelModal: false,\n      selectedReservationId: null,\n      isOpenEditProfile: false,//24.11.15 수정 - 추가\n      isOpenEditSocialProfile: false, //24.11.15 수정 - 추가\n      isOpenEditPassword: false, //24.11.15 수정 - 추가\n      basicProfileImg: 'https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/group-736@2x.png', // 24.11.26 수정 - 추가\n      reservationOption: \"전체\",// 24.12.09 수정 - 추가 : 예약내역 select 박스\n      inquiryOption: \"전체\",// 24.12.09 수정 - 추가 : 문의내역 select 박스\n      selectedShop: null, // 24.12.12 수정 - 추가 : 예약내역 매장 상세페이지 이동\n      isOpenGameDetail: false, // 24.12.12 수정 - 추가 : 예약내역 매장 상세페이지 모달 \n    };\n  },\n  props: [\"rJZsWIProps\"],\n  watch: {\n    \"$route.query.tab\"(newTab) {\n      this.selectedTab = newTab || \"내정보 변경\"; // 기본 탭은 '내정보 변경'\n    },\n    // 24.12.09 수정 - 추가\n    reservationOption(newValue) {\n      // 옵션이 변경될 때 페이지를 1로 초기화\n      this.reservationCurrentPage = 1;\n    },\n    // 24.12.09 수정 - 추가\n    inquiryOption() {\n      // 옵션이 변경될 때 페이지를 1로 초기화\n      this.inquiryCurrentPage = 1;\n    }\n  },\n  mounted() {\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n    this.loginInfo = loginInfo || {};\n    console.log(\"초기화된 this.loginInfo:\", this.loginInfo);\n\n    // 쿼리 파라미터 'tab'을 확인하여 기본 탭을 설정\n    if (this.$route.query.tab) {\n      this.selectedTab = this.$route.query.tab;\n    }\n    this.getMyprofile();\n    this.getMyContact();\n    this.getReservationList();\n  },\n  computed: {\n    // 24.12.09 수정 - 추가\n    sortedInquiries() {\n      if (this.inquiryOption === '전체') {\n        return this.paginatedItems;\n      } else if (this.inquiryOption === '접수완료') {\n        return this.paginatedItems\n          .filter(inquiry => inquiry.status === \"waiting\")\n          .sort((a, b) => {\n            // undefined 검사\n            if (!a.time || !b.time) return 0; // 유효하지 않은 경우 정렬하지 않음\n            return a.time.localeCompare(b.time); // 시간 순으로 정렬\n          });\n      } else if (this.inquiryOption === '답변완료') {\n        return this.paginatedItems\n          .filter(inquiry => inquiry.status === 'answer')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else {\n        return this.paginatedItems;\n      }\n    },\n    // 24.12.09 수정 - 추가\n    filteredInquiries() {\n      if (this.inquiryOption === \"전체\") {\n        return this.inquiries;\n      } else if (this.inquiryOption === \"접수완료\") {\n        return this.inquiries.filter(inquiry => inquiry.status === \"waiting\");\n      } else if (this.inquiryOption === \"답변완료\") {\n        return this.inquiries.filter(inquiry => inquiry.status === \"answer\");\n      }\n      return this.inquiries;\n    },\n    // 24.12.09 수정 - 추가\n    sortedReservations() {\n      if (this.reservationOption === '전체') {\n        return this.paginatedReservations;\n      }\n      // 24.12.11 수정 - 대기중 - 접수중 으로 변경\n      else if (this.reservationOption === '접수중') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'waiting')\n          .sort((a, b) => a.time.localeCompare(b.time)); // 시간 순으로 정렬\n      } else if (this.reservationOption === '예약완료') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'confirm')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else if (this.reservationOption === '예약취소') {\n        return this.paginatedReservations\n          .filter(reservation => reservation.status === 'cancel')\n          .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)); // 최신순으로 정렬\n      } else {\n        return this.paginatedReservations;\n      }\n    },\n    // 24.12.09 수정 - 추가\n    filteredReservations() {\n      let filtered = [];\n      if (this.reservationOption === '전체') {\n        filtered = this.reservations;\n      }\n      // 24.12.11 수정 - 대기중 - 접수중 으로 변경\n      else if (this.reservationOption === '접수중') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'waiting');\n      } else if (this.reservationOption === '예약완료') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'confirm');\n      } else if (this.reservationOption === '예약취소') {\n        filtered = this.reservations.filter(reservation => reservation.status === 'cancel');\n      } else {\n        filtered = this.reservations;\n      }\n      return filtered;\n    },\n    computedStatus() {\n      // commentList가 1개 이상이면 \"답변완료\"로 상태를 변경\n      // 24.11.25 수정\n      // if (this.comments.length > 0) {\n      //   return \"답변완료\";\n      // }\n      // 24.11.26 수정\n      if (this.selectedInquiry.commentList.some(comment => comment.author === \"관리자\")) {\n        return \"답변완료\";\n      }\n      return this.selectedInquiry.status || \"접수완료\";\n    },\n    // 24.12.09 수정 -  inquiries - filteredInquiries 로 변경\n    totalPages() {\n      return Math.ceil(this.filteredInquiries.length / this.itemsPerPage);\n    },\n    // 24.12.09 수정 -  inquiries - filteredInquiries 로 변경\n    paginatedItems() {\n      const start = (this.inquiryCurrentPage - 1) * this.itemsPerPage;\n      return this.filteredInquiries.slice(start, start + this.itemsPerPage);\n    },\n    // 24.12.09 수정 -  reservations - filteredReservations 로 변경\n    ReservationstotalPages() {\n      return Math.ceil(this.filteredReservations.length / this.RitemsPerPage);\n    },\n    // 24.12.09 수정 -  reservations - filteredReservations 로 변경\n    paginatedReservations() {\n      const start = (this.reservationCurrentPage - 1) * this.RitemsPerPage;\n      return this.filteredReservations.slice(start, start + this.RitemsPerPage);\n    },\n  },\n  methods: {\n    //패스워드 일치 여부\n    //  async chekPw(password){\n\n    //     // v1/auth/me/password/gooara123\n    //     const response = await taskStore.getSelectTasks(\n    //         `v1/auth/me/password//${password}`\n    //       );\n    //       console.log(\"가져온 문의 상세 정보:\", response);\n    //   },\n    confrimEdit() {\n      window.location.reload(true);\n    },\n    selectTab(tab) {\n      this.selectedTab = tab;\n      this.selectedInquiry = null;\n    },\n    async patchMyprofileImage() {\n      try {\n        console.log(\"this.imageUrl: : : : \", this.imageUrl);\n        const params = {\n          profileImage: this.imageUrl, // 서버에 저장할 필드명 'profileImage'로 전송\n        };\n        // 서버에 프로필 이미지 업데이트 요청\n        const response = taskStore.updateTask(\n          \"v1/auth/me/profile-image\",\n          params\n        );\n        alert(\"프로필 이미지가 성공적으로 업데이트되었습니다!\");\n        this.getMyprofile();\n      } catch (error) {\n        console.error(\"프로필 이미지 업데이트 실패:\", error);\n        alert(\"프로필 이미지 업데이트에 실패했습니다.\");\n      }\n    },\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"token\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await taskStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + response);\n\n      const url = response[0].presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      if (url === undefined || url === null) {\n        alert('다시 시도해주세요.')\n        window.location.reload();\n      }\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n        this.patchMyprofileImage();\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    async getMyContact() {\n      try {\n        const userId = Number(this.loginInfo.id);\n        const token = localStorage.getItem(\"Token\");\n        // if (!token) {\n        //   alert(\"로그인이 필요합니다.\");\n        //   return;\n        // }\n\n        const response = await axios.get(\n          `https://13.124.62.68:3000/api/inquiries/userId/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        console.log(\"전체 response 객체:\", response);\n        console.log(\"문의 내역\", response.data);\n\n        const inquiries = response.data;\n\n        // 24.11.21 수정 - 추가\n        const userName = this.loginInfo.name;\n        console.log('userName', userName)\n\n\n        const filteredInquiries = inquiries.filter((item) => {\n          return item.userId === userId;\n        });\n\n        // 24.11.25 수정 - 추가\n        // 각 문의에 댓글 목록을 결합하기\n        for (let item of filteredInquiries) {\n          try {\n            // 전체 댓글 목록 불러오기\n            const commentResponse = await axios.get(\n              `https://13.124.62.68:3000/api/comments`,\n              {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n\n            // 댓글 목록에서 현재 item.id와 일치하는 댓글만 필터링\n            const filteredComments = commentResponse.data.filter(comment => comment.askId === item.id);\n\n            // console.log('commentList : :: ' , JSON.stringify(commentResponse))\n            // 24.11.27 수정\n            // 필터링된 댓글 목록에 profileImage 추가\n            item.commentList = filteredComments.map((comment) => ({\n              ...comment,\n              // profileImage: comment.user?.profileImage || null, // user에서 profileImage 가져오기\n            }));\n\n            // console.log(\"item.commentList  : : \" ,item.commentList )\n\n            // 24.11.26 수정 - 추가\n            // 상태 처리: 'waiting'이면 '접수완료', 'answer'이면 '답변완료'\n            item.status = item.status;\n\n          } catch (error) {\n            console.error(\"댓글 데이터를 가져오는 중 오류 발생:\", error);\n          }\n        }\n\n        this.inquiries = filteredInquiries.map((item) => ({\n          ...item,\n          // 24.11.21 수정 - 추가\n          name: userName,\n        }));\n      } catch (error) {\n        console.error(\"문의 데이터를 가져오는 중 오류 발생:\", error);\n        // alert(\"데이터를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    async postComments() {\n      try {\n        const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n        const author = loginInfo.name;\n        const userId = loginInfo.id;\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const createdAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n        // POST 요청으로 데이터를 서버에 전송\n        console.log('author 123', author)\n        const params = {\n          // title: this.title,\n          content: this.contents,\n          author: author,\n          userId: userId,\n          category: \"문의하기\",\n          views: 0,\n          freeBoardId: \"1\",\n          afterServiceId: \"1\",\n          askId: String(this.selectedInquiry.id),\n          createdAt: createdAt,\n          commentText: \"0\",\n          updatedAt: createdAt,\n        };\n        console.log(\"보내는 데이터:\", JSON.stringify(params, null, 2));\n\n        const response = await taskStore.postTask(\"comments\", params);\n\n        console.log(\"등록 성공:\");\n        alert(\"등록이 되었습니다\");\n        await this.getInquiryDetail(this.selectedInquiry.id);\n        this.contents = \"\"; // 입력한 댓글 초기화\n      } catch (error) {\n        console.error(\"등록 실패:\", error);\n        alert(\"등록에 실패했습니다.\");\n      }\n    },\n    toggleEditComment(comment) {\n      if (comment.isEditing) {\n        // 수정 모드에서 완료를 누르면 `updateComment` 호출\n        this.updateComment(comment);\n      } else {\n        // 수정 모드로 전환할 때 기존 댓글 내용을 `editedContent`에 복사\n        comment.editedContent = comment.comment_content;\n      }\n      comment.isEditing = !comment.isEditing;\n    },\n    async updateComment(comment) {\n      try {\n        const now = new Date();\n        const koreaTime = new Date(now.getTime() + 9 * 60 * 60 * 1000); // UTC+9 시간대 조정\n        const updatedAt = koreaTime\n          .toISOString()\n          .replace(\"T\", \" \")\n          .slice(0, 19);\n\n        const params = {\n          content: comment.editedContent,\n          updatedAt: updatedAt,\n        };\n\n        // 서버에 업데이트 요청\n        const response = await taskStore.updateTask(\n          `comments/${comment.comment_id}`,\n          params\n        );\n        console.log(\"댓글 수정 응답:\", response);\n\n        // if (response.success) {\n        //   alert(\"댓글이 수정되었습니다.\");\n        //   comment.comment_content = comment.editedContent; // 수정된 내용 반영\n        //   comment.isEditing = false; // 수정 모드 종료\n        // } else {\n        //   alert(\"댓글 수정에 실패했습니다.\");\n        // }\n        // await this.getContactDt();\n        //  24.11.21 수정\n        await this.getInquiryDetail(this.selectedInquiry.id);\n      } catch (error) {\n        console.error(\"댓글 수정 중 오류 발생:\", error);\n        alert(\"댓글 수정 중 오류가 발생했습니다.\");\n      }\n    },\n    async deleteComments(commentId) {\n      try {\n        // 특정 댓글을 삭제\n        // const response = await adminStore.deleteTask(`comments/${commentId}`);\n        const response = await taskStore.deleteTask(`comments/${commentId}`);\n        console.log(\"댓글 삭제 응답:\", response);\n\n        // 삭제 후 댓글 목록을 갱신\n        alert(\"댓글이 삭제되었습니다.\");\n        // await this.getContactDt();\n        // 24.11.21 수정\n        await this.getInquiryDetail(this.selectedInquiry.id);\n        // window.location.reload();\n      } catch (error) {\n        console.error(\"댓글 삭제 중 오류 발생:\", error);\n        alert(\"댓글 삭제에 실패했습니다.\");\n      }\n    },\n    async getMyprofile() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        if (!token) {\n          alert(\"로그인이 필요합니다.\");\n          return;\n        }\n\n        // API 요청 보내기\n        const response = await axios.get(\n          \"https://13.124.62.68:3000/api/v1/auth/me\",\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        // 응답 데이터에서 필요한 정보 추출\n        const data = response.data;\n        if (data) {\n          this.loginInfo = data; // 사용자 정보 저장\n          this.profile_image =\n            // 24.11.26 수정 - 기본 프로필 사진 변경\n            data.profileImage || this.basicProfileImg; // 프로필 이미지 설정\n        } else {\n          console.log(\"프로필 정보를 가져오지 못했습니다.\");\n        }\n      } catch (error) {\n        console.error(\"프로필 정보 가져오기 실패:\", error);\n        alert(\"프로필 데이터를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    formatDate(date) {\n      if (!date) return \"\";\n      return date.split(\"T\")[0]; // 날짜만 가져오기\n    },\n    openAccountDeletionModal() {\n      this.isModalVisible = true;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    // 24.11.15 수정 - 모달로 수정\n    editmysocialprofile() {\n      // loginInfo에서 id 값을 가져와 쿼리로 전달\n      this.isOpenEditSocialProfile = true;\n\n      // const userId = this.loginInfo.id;\n      // if (userId) {\n      //   this.$router.push({\n      //     path: \"/editsocialprofile\",\n      //     query: { id: userId },\n      //   });\n      //   this.isOpenEditSocialProfile = true;\n      // } else {\n      //   alert(\"로그인 정보가 없습니다. 다시 시도해 주세요.\");\n      // }\n    },\n    // 24.11.15 수정 - 추가\n    closeEditSocialProfile() {\n      this.isOpenEditSocialProfile = false;\n    },\n    // 24.11.15 수정 - 모달로 수정\n    editmyprofile() {\n      // const userId = this.loginInfo.id;\n      // if (userId) {\n      //   this.$router.push({\n      //     path: \"/editprofile\",\n      //     query: { id: userId },\n      //   });\n      this.isOpenEditProfile = true;\n      // }\n    },\n    // 24.11.15 수정 - 추가\n    closeEditProfile() {\n      this.isOpenEditProfile = false;\n    },\n    //24.11.15 수정 - 모달로 수정\n    toGoEditPassword() {\n      // this.$router.push({ path: \"/editpassword\" });\n      this.isOpenEditPassword = true;\n    },\n    //24.11.15 수정 - 추가\n    closeEditPassword() {\n      this.isOpenEditPassword = false;\n    },\n    openContactDetail() {\n      this.$router.push({ path: \"/mycontact-detail\" });\n    },\n    openRModal(reservationId) {\n      this.isOpenReservationCancelModal = true;\n      this.selectedReservationId = reservationId;\n    },\n    closeRModal() {\n      this.isOpenReservationCancelModal = false;\n      this.selectedReservationId = null;\n    },\n    onReservationCanceled() {\n      this.getReservationList(); // 예약 목록 갱신\n    },\n    nextReservationPage() {\n      if (this.reservationCurrentPage < this.ReservationstotalPages) {\n        this.reservationCurrentPage++;\n      }\n    },\n    prevReservationPage() {\n      if (this.reservationCurrentPage > 1) {\n        this.reservationCurrentPage--;\n      }\n    },\n    goToReservationPage(page) {\n      this.reservationCurrentPage = page;\n    },\n    nextInquiryPage() {\n      if (this.inquiryCurrentPage < this.totalPages) {\n        this.inquiryCurrentPage++;\n      }\n    },\n    prevInquiryPage() {\n      if (this.inquiryCurrentPage > 1) {\n        this.inquiryCurrentPage--;\n      }\n    },\n    toGoBoardList() {\n      this.$router.push({ path: \"/board-list\" });\n    },\n    async selectInquiry(inquiry) {\n      this.selectedInquiry = inquiry; // 선택된 문의 저장\n      console.log(\"선택된 문의 ID:\", inquiry.id);\n\n      // 선택된 문의의 ID를 이용해 상세 정보를 가져옴\n      await this.getInquiryDetail(inquiry.id);\n    },\n    async getInquiryDetail(inquiryId) {\n      try {\n        // API 호출을 통해 특정 문의의 상세 정보를 가져옴\n        const response = await taskStore.getSelectTasks(\n          `inquiries/${inquiryId}`\n        );\n        console.log(\"가져온 문의 상세 정보:\", response);\n\n        // 가져온 데이터를 selectedInquiry에 저장\n        if (response) {\n          this.selectedInquiry = {\n            ...this.selectedInquiry,\n            title: response[0].inquiry_title,\n            content: response[0].inquiry_content,\n            // author: response[0].inquiry_user_name,\n            // 24.11.21 수정\n            author: this.loginInfo.name,\n            createdAt: response[0].inquiry_createdAt.split(\"T\")[0],\n            status: response[0].status,\n          };\n\n          // this.comments = response[0].commentList || [];\n          // this.comments = this.comments.map((comment) => ({\n          //   ...comment,\n          //   isEditing: false,\n          //   editedContent: comment.comment_content,\n          // }));\n\n          console.log('res 123', response)\n          // 24.11.21 수정\n          this.comments = (response[0].commentList || []).filter(\n            (comment) =>\n              comment.comment_content !== null &&\n              comment.comment_content.trim() !== \"\" &&\n              comment.comment_author !== null\n          ).map((comment) => ({\n            ...comment,\n            isEditing: false,\n            // 24.11.27 수정\n            profileImage: comment.profileImage || this.basicProfileImg, // user에서 profileImage 가져오기\n            editedContent: comment.comment_content,\n          }));\n\n          // console.log(\"this.selectedInquiry:\", this.selectedInquiry);\n          // console.log(\"this.selectedInquiry.profileImage\", this.selectedInquiry.commentList[0].profileImage);\n          // console.log(\"comment.profileImage\", this.comments[0].profileImage)\n          // console.log(\"this.comments 123:\", this.comments);\n        } else {\n          console.error(\"문의 상세 정보를 가져올 수 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"문의 상세 정보 가져오기 실패:\", error);\n      }\n    },\n    async getReservationList() {\n      try {\n        const token = localStorage.getItem(\"Token\");\n        const userId = Number(this.loginInfo.id);\n        if (!token || !userId) {\n          console.error(\"토큰 또는 사용자 ID가 없습니다.\");\n          return;\n        }\n\n        const response = await axios.get(\n          `https://13.124.62.68:3000/api/reservations/user/${userId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        // 응답 데이터 확인\n        console.log(\"예약예약예약예약예약예약\", response);\n        console.log(\"예약예약\", response.data);\n\n        const reservationsData = response.data;\n\n        // 예약 내역이 존재할 경우\n        if (reservationsData && reservationsData.length > 0) {\n          const reservations = [];\n\n          for (const item of reservationsData) {\n            // 각 item 내의 모든 reservations를 반복 처리\n            if (item.reservations && item.reservations.length > 0) {\n              for (const reservation of item.reservations) {\n                // 예약 정보 추출\n                const reservationData = {\n                  id: reservation.id,\n                  managerid: reservation.managerid,\n                  name: reservation.reser_user || \"Unknown\",\n                  date: this.extractDate(reservation.startTime),\n                  // time: `${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')} [${this.extractDate(reservation.startTime)}]`,\n                  // 24.12.11 수정 - 추가\n                  // time: `${this.extractDate(reservation.startTime)} [${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')}] `,\n                  time: `${reservation.startTime.split('T')[1].split(':').slice(0, 2).join(':')} ~ ${reservation.endTime.split('T')[1].split(':').slice(0, 2).join(':')}`,\n                  people: reservation.member || \"1\",\n                  status: reservation.status || \"Unknown\",\n                };\n\n                // 지점 정보 가져오기\n                const branchData = await this.getBranch(reservation.managerid);\n                if (branchData) {\n                  reservationData.store = branchData.store;\n                  reservationData.image = branchData.image;\n                }\n\n                // reservations 배열에 추가\n                reservations.push(reservationData);\n              }\n            }\n          }\n          reservations.sort((a, b) => {\n            const dateA = new Date(`${a.date}T${a.time.split(' ~ ')[0]}`);\n            const dateB = new Date(`${b.date}T${b.time.split(' ~ ')[0]}`);\n            return dateB - dateA; // 최신 시간부터 정렬\n          });\n          // 결합된 데이터를 reservations 배열에 저장\n          this.reservations = reservations;\n          console.log(\"최종 예약 목록:\", this.reservations);\n        } else {\n          console.log(\"예약 내역이 없습니다.\");\n        }\n      } catch (error) {\n        console.error(\"예약 내역 가져오기 실패:\", error);\n        alert(\"예약 데이터를 가져오는 중 오류가 발생했습니다.\");\n      }\n    },\n\n    extractDate(dateTime) {\n      if (!dateTime) return \"\";\n      return dateTime.split(\"T\")[0]; // 'YYYY-MM-DD' 형식으로 반환\n    },\n    // 시간 부분만 추출하여 'HH:mm' 형식으로 변환\n    formatTime(dateTime) {\n      if (!dateTime) return \"\";\n      const date = new Date(dateTime);\n      const hours = String(date.getHours()).padStart(2, \"0\");\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\n      return `${hours}:${minutes}`;\n    },\n    async getBranch(managerId) {\n      try {\n        const token = localStorage.getItem(\"Token\");\n\n        const response = await axios.get(\n          `https://13.124.62.68:3000/api/v1/branch/managerId/${managerId}`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        const branchData = response.data;\n        console.log(\"branchData\", branchData)\n\n        // 데이터가 있는지 확인 후 반환\n        if (branchData) {\n          return {\n            store: branchData.name,\n            image:\n              branchData.mapImage,\n            branchId: branchData.branchId,\n            address: branchData.address,\n            weekdayHours: branchData.weekdayHours,\n            weekendHours: branchData.weekendHours,\n            managerid: branchData.managerid,\n            storeScale: branchData.storeScale,\n            location: {\n              latitude: branchData.latitude,\n              longitude: branchData.longitude\n            },\n            // 24.12.12 수정 - 추가\n            description: branchData.description,\n            freeParking: branchData.freeParking,\n            telNumber: branchData.telNumber\n          };\n        } else {\n          console.log(\"지점 정보가 없습니다.\");\n          return null;\n        }\n      } catch (error) {\n        console.error(\"지점 정보 가져오기 실패:\", error);\n        return null;\n      }\n    },\n    goToInquiryPage(page) {\n      this.inquiryCurrentPage = page;\n    },\n    statusColor(status) {\n      switch (status) {\n        case \"waiting\":\n          return \"text-waiting\"; // 대기중 색상 클래스\n        case \"confirm\":\n          return \"text-confirm\"; // 예약완료 색상 클래스\n        case \"cancel\":\n          return \"text-cancel\"; // 예약취소 색상 클래스\n        default:\n          return \"text-cancel\"; // 기본 색상 클래스\n      }\n    },\n\n    goBackToList() {\n      this.selectedInquiry = null; // Return to the inquiry list\n    },\n    // async toGoReservation(reservationId) {\n    //   try {\n    //     // 예약 ID로 예약 데이터를 찾기\n    //     const reservation = this.reservations.find(res => res.id === reservationId);\n\n    //     const managerId = reservation.managerid; // reservation에서 managerid 추출\n\n    //     // managerId로 지점 데이터 가져오기\n    //     const branchData = await this.getBranch(managerId);\n\n    //     if (branchData) {\n    //       this.$router.push({\n    //         name: \"reservation-write\",\n    //         params: {\n    //           name: branchData.store,\n    //           branchId: branchData.branchId,\n    //           address: branchData.address,\n    //           weekdayHours: branchData.weekdayHours || \"\",\n    //           weekendHours: branchData.weekendHours || \"\",\n    //           mapImage: branchData.image || \"\",\n    //           managerid: managerId,\n    //           storeScale: branchData.storeScale || \"\",\n    //           latitude: branchData.location.latitude || \"\",\n    //           longitude: branchData.location.longitude || \"\",\n    //         },\n    //       });\n    //     } else {\n    //       console.error(\"지점 데이터가 없습니다.\");\n    //       alert(\"지점 정보를 가져오는 데 실패했습니다.\");\n    //     }\n    //   } catch (error) {\n    //     console.error(\"예약 상세 정보를 가져오는 중 오류 발생:\", error);\n    //     alert(\"예약 상세 정보를 가져오는 중 문제가 발생했습니다.\");\n    //   }\n    // },\n    isReservationCancelable(reservation) {\n      const currentDateTime = new Date(); // 현재 날짜와 시간\n      const reservationDateTime = new Date(`${reservation.date}T${reservation.time.split(' ~ ')[0]}`); // 예약 시작 시간\n\n      // 예약 상태가 'cancel'이 아니고, 예약 시간이 현재보다 이후인 경우에만 true\n      return reservation.status !== 'cancel' && currentDateTime < reservationDateTime;\n    },\n    // 24.12.12 수정 - 추가\n    async toGoBranch(reservationId) {\n      try {\n        // 예약 ID로 예약 데이터를 찾기\n        const reservation = this.reservations.find(res => res.id === reservationId);\n\n        const managerId = reservation.managerid; // reservation에서 managerid 추출\n\n        // managerId로 지점 데이터 가져오기\n        const branchData = await this.getBranch(managerId);\n        console.log('branchData1', branchData)\n\n        // 필요한 데이터 가공\n        this.selectedShop = {\n          name: branchData.store,\n          branchId: branchData.branchId,\n          address: branchData.address,\n          freeParking: branchData.freeParking || \"\",\n          description: branchData.description || \"\",\n          telNumber: branchData.telNumber || \"\",\n          weekdayHours: branchData.weekdayHours || \"\",\n          weekendHours: branchData.weekendHours || \"\",\n          mapImage: branchData.image || \"\",\n          managerid: managerId,\n          storeScale: branchData.storeScale || \"\",\n          latitude: branchData.location.latitude || \"\",\n          longitude: branchData.location.longitude || \"\",\n        },\n\n          this.isOpenGameDetail = true;\n\n        console.log(\"Updated selectedShop:\", JSON.stringify(this.selectedShop));\n      } catch (error) {\n        console.error(\"예약 상세 정보를 가져오는 중 오류 발생:\", error);\n        alert(\"예약 상세 정보를 가져오는 중 문제가 발생했습니다.\");\n      }\n    },\n    // 24.12.12 수정 - 추가\n    closeGameDetail() {\n      this.isOpenGameDetail = false;\n      this.selectedShop = null;\n    }\n  },\n};\n</script>\n\n<style scoped src=\"@/style/myprofile/myprofile.css\"></style>\n"]}]}