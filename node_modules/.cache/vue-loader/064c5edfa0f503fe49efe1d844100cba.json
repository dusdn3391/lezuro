{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminBannerWrite.vue?vue&type=style&index=0&id=8d6f2100&prod&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminBannerWrite.vue","mtime":1732602148210},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5icmFuY2gtc2VsZWN0LWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHdpZHRoOiAxMDAlOwogIGdhcDogMTBweDsKfQoKLyogMjQuMTEuMTMg7IiY7KCVLSBtYXJnaW4tdG9wIOuzgOqyvSAqLwouZnJhbWUtNzg1OS0zIHsKICB0b3A6IDIwcHg7CiAgZGlzcGxheTogZmxleDsKICBnYXA6IDEwcHg7CiAgbWFyZ2luLXRvcDogNTBweDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["AdminBannerWrite.vue"],"names":[],"mappings":";AA6PA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AdminBannerWrite.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class=\"all\">\n    <AdminHeader />\n    <div class=\"wrap\">\n      <div class=\"reservation-container\">\n        <AdminNavbar />\n        <div class=\"wrapper\">\n          <div class=\"title-top\">\n            <h2 class=\"pretendard-bold-normal-black-28px\">\n              {{ isEditLocal ? \"배너 수정\" : \"배너 등록\" }}\n            </h2>\n          </div>\n          <div class=\"content-wrap\">\n            <div class=\"write-wrap\">\n              <!-- 제목 입력 -->\n              <div class=\"title-box\">\n                <!-- 24.11.13 수정 - input,textarea, select font 수정 -->\n                <div class=\"content-title pretendard-medium-black-18px\">\n                  타이틀\n                </div>\n                <input\n                  type=\"text\"\n                  v-model=\"title\"\n                  placeholder=\"타이틀를 입력해주세요\"\n                  class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\"\n                />\n              </div>\n              <div class=\"title-box\">\n                <!-- 24.11.13 수정 - input,textarea, select font 수정 -->\n                <div class=\"content-title pretendard-medium-black-18px\">\n                  서브 타이틀\n                </div>\n                <input\n                  type=\"text\"\n                  v-model=\"subtitle\"\n                  placeholder=\"서브 타이틀를 입력해주세요\"\n                  class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\"\n                />\n              </div>\n              <div class=\"title-box\">\n                <!-- 24.11.13 수정 - input,textarea, select font 수정 -->\n                <div class=\"content-title pretendard-medium-black-18px\">\n                  링크\n                </div>\n                <input\n                  type=\"text\"\n                  v-model=\"linkurl\"\n                  placeholder=\"링크를 입력해주세요\"\n                  class=\"frame-7281-8 pretendard-regular-normal-mine-shaft-16px\"\n                />\n              </div>\n\n              <!-- 파일 업로드 -->\n              <div class=\"title-box\">\n                <div class=\"content-title pretendard-medium-black-18px\">\n                  파일\n                </div>\n                <div class=\"frame-7487-4\">\n                  <label for=\"file-upload\" class=\"file-upload-label\">\n                    <img\n                      class=\"fluentfolder-20-filled-4\"\n                      src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/fluent-folder-20-filled-4.svg\"\n                      alt=\"fluent:folder-20-filled\"\n                    />\n                  </label>\n                  <input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    @change=\"onFileChange\"\n                  />\n                  <div\n                    class=\"text-1902 valign-text-middle pretendard-regular-normal-granite-gray-14px\"\n                  >\n                    {{ selectedFileName }}\n                  </div>\n                </div>\n              </div>\n\n              <!-- 버튼들 -->\n              <!-- 24.11.13 수정 -font style, align 변경 -->\n              <div class=\"frame-7859-3\">\n                <button\n                  class=\"cancel-btn pretendard-regular-normal-white-18px\"\n                  @click=\"cancel\"\n                >\n                  취소하기\n                </button>\n                <!-- 24.11.22 수정 - 등록하기로 수정 -->\n                <button\n                  class=\"frame-7923-3 pretendard-regular-normal-white-18px\"\n                  @click=\"postEventDt\"\n                >\n                  {{ isEditLocal ? \"수정하기\" : \"등록하기\" }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport AdminHeader from \"./AdminHeader.vue\";\nimport AdminNavbar from \"./AdminNavbar.vue\";\nimport { adminStore } from \"@/store/adminStore\";\nimport axios from \"axios\";\n\nexport default {\n  name: \"AdminBannerWrite\",\n  components: { AdminHeader, AdminNavbar },\n  data() {\n    return {\n        title: \"\",\n      subtitle: \"\",\n      linkurl: \"\",\n      date: \"\",\n      imageUrl: \"\",\n      isEditLocal: false,\n      selectedFileName: \"\",\n      file: null,\n    };\n  },\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false, // 기본값 설정\n    },\n  },\n  mounted() {\n    const { data, isEdit } = this.$route.params;\n\n    this.isEditLocal = isEdit === true || isEdit === \"true\";\n\n    console.log(\"dddddd\",data)\n    if (data) {\n      try {\n        const parsedData = JSON.parse(data);\n        this.id = parsedData.id;\n        this.title = parsedData.title;\n        this.subtitle = parsedData.subtitle;\n        this.linkurl = parsedData.linkurl;\n        this.imageUrl = parsedData.image;\n        this.selectedFileName = parsedData.image.split(\"/\").pop();\n      } catch (error) {\n        console.error(\"전달된 데이터 파싱 중 오류 발생:\", error);\n      }\n    }\n  },\n\n  methods: {\n    async getEventData() {\n      try {\n        const response = await adminStore.getTask(`events/${this.id}`);\n        console.log(\"가져온 이벤트 데이터:\", response);\n\n        // 가져온 데이터를 컴포넌트 데이터에 할당\n        this.title = response.title;\n        this.startEventDate = response.startTime?.split(\"T\")[0];\n        this.endEventDate = response.endTime?.split(\"T\")[0];\n        this.imageUrl = response.imageUrl;\n        this.selectedFileName = response.imageUrl.split(\"/\").pop(); // 파일명 추출\n      } catch (error) {\n        console.error(\"이벤트 데이터를 가져오는 중 오류 발생:\", error);\n      }\n    },\n    async onFileChange(event) {\n      console.log(\"통신 하는 중!!!\");\n      // const token = localStorage.getItem(\"managerToken\");\n      const file = event.target.files[0];\n      this.file = file;\n      console.log(file.size);\n      console.log(file.name);\n      console.log(file.type);\n      const params = {\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type,\n      };\n      console.log(\"통신 하는 중!!!\" + JSON.stringify(this.file));\n\n      const response = await adminStore.postTask(\n        \"v1/files/presigned-url\",\n        params\n      );\n      console.log(\"response : : : : :\" + JSON.stringify(response));\n\n      const url = response[0].presignedUrl;\n      console.log(\"response.file.path : : : : :\" + JSON.stringify(url));\n      // const url = 'https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/camera.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIA6CLHNBRW3AA7JQ5Z%2F20241107%2Fap-northeast-2%2Fs3%2Faws4_request&X-Amz-Date=20241107T074211Z&X-Amz-Expires=3600&X-Amz-Signature=dd4176d8288ed964223f471ff745ffec8943120dadf017fc2f373d91588df626&X-Amz-SignedHeaders=host&x-id=PutObject';\n      this.imageUrl = new URL(url).origin + new URL(url).pathname;\n      try {\n        // 파일 업로드\n        // 2. 프리사인 URL을 사용해 S3에 파일을 업로드합니다.\n        await axios.put(url, file, {\n          headers: {\n            \"Content-Type\": file.type,\n            // 'Content-Length': file.size\n          },\n        });\n        console.log(\"File uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    cancel() {\n      this.$router.push({ path: \"/adminbanner\" });\n    },\n    async postEventDt() {\n      // 필수 입력 항목 체크\n      if (!this.title || !this.imageUrl || !this.linkurl) {\n      alert(\"모든 필수 항목을 입력해주세요.\");\n      return;\n    }\n\n      try {\n        const { data } = this.$route.params; // params에서 data를 가져옵니다.\n    const parsedData = JSON.parse(data); // JSON 문자열을 객체로 변환\n    const id = parsedData.id; \n        const params = {\n        title: this.title,\n        subtitle: this.subtitle, // 서브 타이틀\n        bannerImg: this.imageUrl, // 업로드된 이미지 URL\n        linkurl: this.linkurl, // 링크\n        };\n\n        if (this.isEditLocal) {\n          // 수정 요청\n          await adminStore.updateTask(`v1/report/${id}`, params);\n          alert(\"이벤트 수정이 완료되었습니다.\");\n        } else {\n          // 새 이벤트 등록 요청\n          await adminStore.postTask(\"v1/report\", params);\n          alert(\"이벤트 등록이 완료되었습니다.\");\n        }\n\n        this.$router.push({ path: \"/adminbanner\" });\n      } catch (error) {\n        console.error(\"이벤트 처리 실패:\", error);\n        alert(\n          this.isEditLocal\n            ? \"이벤트 수정에 실패했습니다.\"\n            : \"이벤트 등록에 실패했습니다.\"\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.branch-select-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 10px;\n}\n\n/* 24.11.13 수정- margin-top 변경 */\n.frame-7859-3 {\n  top: 20px;\n  display: flex;\n  gap: 10px;\n  margin-top: 50px;\n  justify-content: center;\n  width: 100%;\n}\n</style>\n<style scoped>\n.reservation-container {\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n  background: #f5f6f6;\n}\n\n.title-top {\n  background-color: #fff;\n  padding: 30px;\n  margin-bottom: 20px;\n}\n\n.wrapper {\n  flex-grow: 1;\n  /* 나머지 공간을 차지하게 함 */\n  padding: 30px;\n  gap: 20px;\n}\n\n.contact-write {\n  width: 100%;\n}\n\n.write-wrap {\n  width: 100%;\n}\n\n.title {\n  padding-bottom: 44px;\n}\n\n/* 24.11.13 수정 - width 변경, border-radius 삭제 */\n.cancel-btn {\n  align-items: center;\n  background-color: var(--mountain-mist);\n  display: flex;\n  gap: 10px;\n  height: 50px;\n  justify-content: center;\n  padding: 18px 66px;\n  position: relative;\n  width: 200px;\n  border: none;\n  /* border-radius: 7px; */\n}\n\n/* 24.11.13 수정 - width 변경, border-radius 삭제 */\n.frame-7923-3 {\n  border: none;\n  width: 200px;\n  /* border-radius: 7px; */\n  background-color: #001a51;\n}\n\n.content-title {\n  display: flex;\n  gap: 10px;\n  position: relative;\n  width: 150px;\n}\n\n.title-box,\n.content-box,\n.select-box {\n  align-items: center;\n  align-self: stretch;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-color: var(--celeste);\n  border-top-style: solid;\n  border-top-width: 1px;\n  display: flex;\n  flex: 0 0 auto;\n  padding: 20px 20px 20px 0px;\n  position: relative;\n  width: 100%;\n}\n\n/* 24.11.13 수정 - border 겹치는 부분 수정 */\n.content-box {\n  border: none;\n}\n\n.date {\n  width: 100%;\n}\n\n.date input {\n  display: block;\n  width: 100%;\n  background-color: var(--hint-of-red);\n  border: 1px solid #ddd;\n  padding: 10px;\n}\n\n.date input:nth-child(2) {\n  margin-top: 20px;\n}\n\n/* 24.11.13 수정 - border 겹치는 부분 수정 */\n.select-box {\n  border-top: none;\n}\n\n/* 24.11.13 수정 -  placeholder 색 변경 */\ninput::placeholder,\ntextarea::placeholder {\n  color: #999;\n}\n\n.write-wrap {\n  border: 1px solid #dddddd;\n  padding: 40px;\n}\n\n.content-wrap {\n  align-items: center;\n  display: flex;\n  gap: 10px;\n  padding: 30px;\n  position: relative;\n  width: 100%;\n  background-color: #fff;\n  margin-bottom: 20px;\n}\n\n.img-pick {\n  align-items: center;\n  background-color: var(--hint-of-red);\n  border: 0.5px solid;\n  border-color: var(--celeste);\n  display: flex;\n  gap: 10px;\n  height: 55px;\n  width: 90%;\n  padding: 0px 20px;\n  position: relative;\n}\n\n.img-pick label {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.frame-7281-8 {\n  background-color: #fafafa;\n  padding: 20px;\n  width: 100%;\n  border: 0.5px solid #ddd;\n}\n\n.frame-7281-9 {\n  background-color: #fafafa;\n  padding: 20px;\n  width: 100%;\n  border: 0.5px solid #ddd;\n  height: 200px;\n}\n\n.frame-7487-4 {\n  align-items: center;\n  background-color: var(--hint-of-red);\n  border: 0.5px solid;\n  border-color: var(--celeste);\n  display: flex;\n  gap: 10px;\n  height: 55px;\n  padding: 0px 20px;\n  position: relative;\n  width: 100%;\n}\n\n.select-container {\n  width: 100%;\n}\n\n.branch-select-container select {\n  width: 100%;\n  padding: 20px;\n  border: 1px solid #ddd;\n  background-color: #fafafa;\n  color: #999;\n}\n</style>\n"]}]}