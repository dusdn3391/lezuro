{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/admin/AdminStatistics.vue?vue&type=style&index=0&id=633e4a54&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/admin/AdminStatistics.vue","mtime":1733896506173},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIOyghOyytCDsu6jthYzsnbTrhIjsnZgg67Cw6rK97IOJIOyEpOyglSAqLwoucmVzZXJ2YXRpb24tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNmY2OwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIC8qIOq4sOuzuOqwkuydtCDshLjroZzrsKntlqXsnbggZmxleC1kaXJlY3Rpb27snYQg6rCA66Gc67Cp7Zal7Jy866GcIOyEpOyglSAqLwogIGZsZXgtZGlyZWN0aW9uOiByb3c7Cn0KCi53cmFwcGVyIHsKICBmbGV4LWdyb3c6IDE7CiAgLyog64KY66i47KeAIOqzteqwhOydhCDssKjsp4DtlZjqsowg7ZWoICovCiAgcGFkZGluZzogMzBweDsKICB3aWR0aDogODAlOwogIGdhcDogMjBweDsKfQoKLyog7YOA7J207YuAIOuwleyKpCAqLwoudGl0bGUtYm94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDMwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyogc2VhcmNoLWJveCAqLwouc2VhcmNoLWJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGhlaWdodDogMTkwcHg7CiAgd2lkdGg6IDEwMCU7Cn0KCi50YWJzIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGRpc3BsYXk6IGZsZXg7CiAgZ2FwOiAxMHB4OwogIGhlaWdodDogNjBweDsKfQoKLnRhYi1idG4gewogIHBhZGRpbmc6IDE2cHggMzBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogIGdhcDogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLnRhYi1idG4uYWN0aXZlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg0MTk5OwogIGNvbG9yOiAjZmZmOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLmRhdGUtc2VhcmNoIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgaGVpZ2h0OiA2MHB4OwogIGdhcDogMTBweDsKfQoKLmRhdGUtc2VhcmNoIGlucHV0IHsKICB3aWR0aDogMjUwcHg7CiAgaGVpZ2h0OiA2MHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgbWFyZ2luOiAxMnB4OwogIHBhZGRpbmc6IDAgMjBweDsKfQoKLnVzZXItc2VhcmNoIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCnNlbGVjdCB7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibGFja3doaXRld2hpdGUpOwogIGRpc3BsYXk6IGZsZXg7CiAgaGVpZ2h0OiA2MHB4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBwYWRkaW5nOiAwcHggMjBweDsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgd2lkdGg6IDI1MHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgbWFyZ2luOiAxMnB4Owp9CgouZGF0YS1ib3ggewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMzBweDsKICBtYXJnaW46IDIwcHggMDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgaGVpZ2h0OiAxODdweDsKICB3aWR0aDogMTAwJTsKfQoKLnByZXRlbmRhcmQtYm9sZC0yNHB4IHNwYW4gewogIGNvbG9yOiAjZDMwZjFhOwp9CgoucG9pbnQtY2FyZHMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGdhcDogMTBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoucG9pbnQtY2FyZCB7CiAgZmxleDogMTsKICBwYWRkaW5nOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm94LXNoYWRvdzogMHB4IDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpOwp9CgoucG9pbnQtdGl0bGUgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5wb2ludC12YWx1ZSB7CiAgY29sb3I6ICMzMzM7Cn0KCi8qIOqwnOuzhCDsubTrk5wg7YWM65GQ66asIOyDieyDgSAqLwouYmx1ZS1ib3JkZXIgewogIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCAjMTg0MTk5Owp9CgoueWVsbG93LWJvcmRlciB7CiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICNmNGJjMWM7Cn0KCi5yZWQtYm9yZGVyIHsKICBib3JkZXItYm90dG9tOiA0cHggc29saWQgI2QzMGYxYTsKfQoKLmdyZWVuLWJvcmRlciB7CiAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM0Y2FmNTA7Cn0KCi5wdXJwbGUtYm9yZGVyIHsKICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzljMjdiMDsKfQoKLmNoYXJ0LWNvbnRhaW5lciB7CiAgd2lkdGg6IDEwMCU7CiAgLyogaGVpZ2h0OiA0MDBweDsgKi8KICBvdmVyZmxvdy14OiBhdXRvOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgZGlzcGxheTogZmxleDsKICAvKiBtYXgtd2lkdGg6IDgwMHB4OyAqLwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgLyogbWFyZ2luOiAwIGF1dG87ICovCiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLmNoYXJ0LWl0ZW0gewogIGZsZXg6IDAgMCAxNTAwcHg7IC8qIOywqO2KuOydmCDrhIjruYQg6rOg7KCVICovCiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyAvKiDssKjtirgg6rCE6rKpICovCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7Cn0KLmNoYXJ0LWNvbnRhaW5lciBjYW52YXMgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsgLyog7LCo7Yq466W8IOqwgOuhnOuhnCDsoJXroKwgKi8KfQouY2hhcnQtdGl0bGUgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgcGFkZGluZzogMjBweDsKICBoZWlnaHQ6IDYzcHg7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLWJvdHRvbTogMC41cHggc29saWQgI2NjYzsKfQoKLmdyYXBoLWNvbnRhaW5lciB7CiAgbWF4LXdpZHRoOiAxMDAlOwogIGhlaWdodDogYXV0bzsKICBwYWRkaW5nOiAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQo="},{"version":3,"sources":["AdminStatistics.vue"],"names":[],"mappings":";AAuqfile":"AdminStatistics.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n    <div class=\"all\">\n      <AdminHeader />\n      <div class=\"wrap\">\n        <div class=\"reservation-container\">\n          <AdminNavbar />\n          <div class=\"wrapper\">\n            <!-- 타이틀 부분 -->\n            <div class=\"title-box\">\n              <h2 class=\"pretendard-bold-normal-black-28px\">통계</h2>\n            </div>\n            <!-- Select box 부분 -->\n            <div class=\"search-box\">\n              <div class=\"date-search\">\n                <span class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                  >날짜검색</span\n                >\n                <!-- 날짜 선택 부분 -->\n                <div class=\"tabs\">\n                  <div\n                    v-for=\"tab in tabs\"\n                    :key=\"tab\"\n                    :class=\"[\n                      'tab-btn pretendard-regular-normal-mine-shaft-18px ',\n                      { active: selectedTab === tab },\n                    ]\"\n                    @click=\"selectTab(tab)\"\n                  >\n                    {{ tab }}\n                  </div>\n                </div>\n                <input\n                  type=\"date\"\n                  class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                  v-model=\"startDt\"\n                  @change=\"fetchDateRangeData\"\n                />\n                ~\n                <input\n                  type=\"date\"\n                  class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                  v-model=\"endDt\"\n                  @change=\"fetchDateRangeData\"\n                />\n              </div>\n              <div class=\"user-search\">\n                <span class=\"date pretendard-regular-normal-mine-shaft-18px\"\n                  >회원별 검색</span\n                >\n                <!-- select box -->\n  \n                <select\n                  class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n                >\n                  <option value=\"\" disabled selected>전체등급</option>\n                  <option value=\"tournament1\">등급 1</option>\n                  <option value=\"tournament2\">등급 2</option>\n                  <option value=\"tournament3\">등급 3</option>\n                </select>\n  \n                <select\n                  class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n                >\n                  <option value=\"\" disabled selected>전체성별</option>\n                  <option value=\"tournament1\">남자</option>\n                  <option value=\"tournament2\">여자</option>\n                </select>\n                <select\n                  class=\"text-2536 pretendard-regular-normal-mine-shaft-18px\"\n                >\n                  <option value=\"\" disabled selected>전체나이</option>\n                  <option value=\"tournament1\">나이1</option>\n                  <option value=\"tournament2\">나이2</option>\n                </select>\n              </div>\n            </div>\n            <!-- 카드 -->\n            <div class=\"data-box\">\n              <div class=\"pretendard-bold-24px\">\n                전체회원 <span> {{ statistics[0].totalMembers }} </span>\n              </div>\n              <div class=\"point-cards\">\n                <div\n                  v-for=\"(point, index) in pointData\"\n                  :key=\"index\"\n                  :class=\"['point-card', point.borderClass]\"\n                >\n                  <span\n                    class=\"point-title pretendard-regular-normal-log-cabin-18px\"\n                    >{{ point.title }}</span\n                  >\n                  <span class=\"point-value pretendard-bold-normal-black-28px\"\n                    >{{ point.value }} {{ index < 3 ? \"명\" : \"%\" }}</span\n                  >\n                </div>\n              </div>\n            </div>\n  \n            <!-- 차트 -->\n            <div class=\"chart-title pretendard-medium-black-18px\">\n              시간대별 이용현황\n            </div>\n            <div class=\"chart-container\">\n              <div\n                v-for=\"(data, index) in chartData\"\n                :key=\"index\"\n                class=\"chart-item\"\n              >\n                <div class=\"chart-title pretendard-medium-black-18px\">\n                  {{ data.date }} 시간대별 이용현황\n                </div>\n                <div v-if=\"data.labels.length && data.datasets.length\">\n                  <LineChart\n                    :chart-data=\"{\n                      labels: data.labels,\n                      datasets: data.datasets,\n                    }\"\n                    :options=\"chartOptions\"\n                  />\n                </div>\n                <div v-if=\"chartData.length === 0\">\n                  </div>\n              </div>\n            </div>\n  \n            <!-- 차트 -->\n            <div class=\"chart-title pretendard-medium-black-18px\">\n              코스 이용 통계\n            </div>\n            <div class=\"graph-container\">\n              <Bar :chart-data=\"graphData\" :options=\"graphOptions\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n  import AdminHeader from \"./AdminHeader.vue\";\n  import AdminNavbar from \"./AdminNavbar.vue\";\n  import { Line, Bar } from \"vue-chartjs\";\n  import { adminStore } from \"@/store/adminStore\"; // API 호출\n  \n  import {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    LineElement,\n    LinearScale,\n    BarElement,\n    CategoryScale,\n    PointElement,\n  } from \"chart.js\";\n  \n  ChartJS.register(\n    Title,\n    Tooltip,\n    Legend,\n    LineElement,\n    LinearScale,\n    BarElement,\n    CategoryScale,\n    PointElement\n  );\n  \n  export default {\n    name: \"AdminStatistics\",\n    components: {\n      AdminHeader,\n      AdminNavbar,\n      LineChart: Line, // Line 차트를 LineChart로 등록\n      Bar, // Line 차트 컴포넌트를 등록\n    },\n    data() {\n      return {\n        chartData: [],\n        startDt: \"\",\n        endDt: \"\",\n        selectedTab: \"일간\",\n        tabs: [\"일간\", \"주간\", \"월간\", \"연간\"],\n        statistics: [\n          {\n            id: 1,\n            date: \"2024-10-31\",\n            totalMembers: 111,\n            visitors: 11,\n            returningMembers: 22,\n            newMembers: 33,\n            returnRate: 200,\n            newVisitRate: 300,\n          },\n        ],\n        pointData: [\n          { title: \"방문자 수\", value: 45, borderClass: \"blue-border\" },\n          { title: \"재방문자 수\", value: 555, borderClass: \"yellow-border\" },\n          { title: \"신규방문자 수\", value: 300, borderClass: \"red-border\" },\n          { title: \"신규 방문자율\", value: 30.33, borderClass: \"green-border\" },\n          {\n            title: \"일일 신규방문율\",\n            value: \"28.42%\",\n            borderClass: \"purple-border\",\n          },\n        ],\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 400,\n            },\n          },\n        },\n        chartData: {\n          labels: [\n            \"2024-10-01 /09시\",\n            \"10시\",\n            \"11시\",\n            \"12시\",\n            \"13시\",\n            \"14시\",\n            \"15시\",\n            \"16시\",\n            \"17시\",\n            \"18시\",\n          ],\n          datasets: [\n            {\n              label: \"시간대별 시간\",\n              backgroundColor: \"#184199\",\n              data: [0, 25, 100, 100, 110, 200, 225, 100, 50, 0],\n            },\n          ],\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 400,\n          },\n        },\n  \n        graphData: {\n          labels: [\n            \"코스A\",\n            \"코스B\",\n            \"코스C\",\n            \"코스D\",\n            \"코스E\",\n            \"코스F\",\n            \"코스G\",\n            \"코스H\",\n            \"코스I\",\n          ],\n          datasets: [\n            {\n              label: \"코스 이용 시간\",\n              backgroundColor: \"#8BA0CC\",\n              data: [160, 270, 180, 130, 210, 190, 135, 70, 140],\n            },\n          ],\n        },\n        graphOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              beginAtZero: true,\n            },\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      };\n    },\n  \n    mounted() {\n      const today = new Date();\n  \n      // 오늘 날짜를 yyyy-mm-dd 형식으로 포맷하는 함수\n      const formatDate = (date) => {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\"); // 월은 0부터 시작하므로 +1 필요\n        const day = String(date.getDate()).padStart(2, \"0\");\n        return `${year}-${month}-${day}`;\n      };\n  \n      // 오늘 날짜로 startDt와 endDt 초기화\n      this.startDt = formatDate(today);\n      this.endDt = formatDate(today);\n  \n      console.log(\"일간 데이터 시작일:\", this.startDt, \"종료일:\", this.endDt);\n  \n      // 통계 및 일간 데이터 불러오기\n      this.getStatistics();\n      this.getTimeDt(this.startDt, this.endDt);\n  \n      // 코스 데이터는 고정된 기간으로 불러오기\n      this.getCourseDt(\"2024-01-01\", \"2024-12-31\");\n    },\n    methods: {\n      selectTab(tab) {\n        this.selectedTab = tab;\n  \n        if (tab === \"일간\") {\n          this.initializeDates();\n          this.getTimeDt(this.startDt, this.endDt);\n        } else if (tab === \"주간\") {\n          this.initializeWeekDates();\n          this.getTimeDt(this.startDt, this.endDt);\n        } else if (tab === \"월간\") {\n          this.initializeMonthDates();\n          this.getTimeDt(this.startDt, this.endDt);\n        } else if (tab === \"연간\") {\n          this.initializeYearDates();\n          this.getTimeDt(this.startDt, this.endDt);\n        }\n      },\n      initializeDates() {\n        const today = new Date();\n        const formatDate = (date) => {\n          const year = date.getFullYear();\n          const month = String(date.getMonth() + 1).padStart(2, \"0\");\n          const day = String(date.getDate()).padStart(2, \"0\");\n          return `${year}-${month}-${day}`;\n        };\n        this.startDt = formatDate(today);\n        this.endDt = formatDate(today);\n      },\n      initializeWeekDates() {\n        const today = new Date();\n        const dayOfWeek = today.getDay();\n        const diffToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\n        const diffToSunday = dayOfWeek === 0 ? 0 : 7 - dayOfWeek;\n  \n        const monday = new Date(today);\n        monday.setDate(today.getDate() + diffToMonday);\n  \n        const sunday = new Date(today);\n        sunday.setDate(today.getDate() + diffToSunday);\n  \n        const formatDate = (date) => {\n          const year = date.getFullYear();\n          const month = String(date.getMonth() + 1).padStart(2, \"0\");\n          const day = String(date.getDate()).padStart(2, \"0\");\n          return `${year}-${month}-${day}`;\n        };\n  \n        this.startDt = formatDate(monday);\n        this.endDt = formatDate(sunday);\n      },\n      initializeMonthDates() {\n        const today = new Date();\n        const firstDayOfMonth = new Date(\n          today.getFullYear(),\n          today.getMonth(),\n          1\n        );\n        const lastDayOfMonth = new Date(\n          today.getFullYear(),\n          today.getMonth() + 1,\n          0\n        );\n  \n        const formatDate = (date) => {\n          const year = date.getFullYear();\n          const month = String(date.getMonth() + 1).padStart(2, \"0\");\n          const day = String(date.getDate()).padStart(2, \"0\");\n          return `${year}-${month}-${day}`;\n        };\n  \n        this.startDt = formatDate(firstDayOfMonth);\n        this.endDt = formatDate(lastDayOfMonth);\n      },\n      initializeYearDates() {\n        const today = new Date();\n        const firstDayOfYear = new Date(today.getFullYear(), 0, 1);\n        const lastDayOfYear = new Date(today.getFullYear(), 11, 31);\n  \n        const formatDate = (date) => {\n          const year = date.getFullYear();\n          const month = String(date.getMonth() + 1).padStart(2, \"0\");\n          const day = String(date.getDate()).padStart(2, \"0\");\n          return `${year}-${month}-${day}`;\n        };\n  \n        this.startDt = formatDate(firstDayOfYear);\n        this.endDt = formatDate(lastDayOfYear);\n      },\n      fetchDateRangeData() {\n      // 입력된 날짜가 유효한지 확인\n      if (this.startDt && this.endDt && this.startDt <= this.endDt) {\n        console.log(\"Fetching data for range:\", this.startDt, this.endDt);\n        \n        // 선택된 날짜 범위로 데이터를 가져옴\n        this.getTimeDt(this.startDt, this.endDt);\n      } else {\n        console.warn(\"Invalid date range. Ensure start date is before end date.\");\n      }\n    },\n      async getStatistics() {\n        this.statistics = await adminStore.getTask(`statistics/member`);\n        console.log(\"statistics : : : \", JSON.stringify(this.statistics));\n        this.pointData[0].value = this.statistics[0].visitors;\n        this.pointData[1].value = this.statistics[0].returningMembers;\n        this.pointData[2].value = this.statistics[0].newMembers;\n        this.pointData[3].value = this.statistics[0].returnRate;\n        this.pointData[4].value = this.statistics[0].newVisitRate;\n  \n        // console.log(\"this.pointData.value : : : \" ,  this.pointData.value)\n        console.log(\"this.pointData.value : : : \", this.pointData);\n      },\n      async getTimeDt(startDt, endDt) {\n    try {\n      const times = await adminStore.getTask(\n        `statistics/time-usage?startDate=${startDt}&endDate=${endDt}`\n      );\n  \n      const start = new Date(startDt);\n      const end = new Date(endDt);\n  \n      const weeklyData = {};\n      for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {\n        const dateKey = d.toISOString().split(\"T\")[0]; // yyyy-mm-dd 형식\n        weeklyData[dateKey] = []; // 초기화\n      }\n  \n      // 데이터 분류\n      times.usage.forEach((yearData) => {\n        yearData.months.forEach((monthData) => {\n          monthData.days.forEach((dayData) => {\n            const dateKey = `${yearData.year}-${monthData.month.padStart(\n              2,\n              \"0\"\n            )}-${dayData.day.padStart(2, \"0\")}`;\n            if (weeklyData[dateKey]) {\n              weeklyData[dateKey] = dayData.times; // 해당 날짜의 시간 데이터 추가\n            }\n          });\n        });\n      });\n  \n      // 날짜별 데이터 배열 생성\n      this.chartData = Object.keys(weeklyData).map((dateKey) => {\n        const dayData = weeklyData[dateKey] || []; // 데이터가 없을 경우 빈 배열로 처리\n        return {\n          date: dateKey,\n          labels: dayData.length > 0 ? dayData.map((time) => time.time) : [], // 기본값 설정\n          datasets: [\n            {\n              label: `시간대별 이용 (${dateKey})`,\n              backgroundColor: \"#184199\",\n              borderColor: \"#184199\",\n              data: dayData.length > 0 ? dayData.map((time) => time.count) : [], // 기본값 설정\n              fill: false,\n            },\n          ],\n        };\n      });\n  \n      console.log(\"Weekly chart data:\", this.chartData);\n    } catch (error) {\n      console.error(\"Error fetching time data:\", error);\n      this.chartData = []; // 오류 발생 시 빈 배열로 초기화\n    }\n  },\n      async getCourseDt(startDt, endDt) {\n        const courses = await adminStore.getTask(\n          `statistics/course-usage?startDate=${startDt}&endDate=${endDt}`\n        );\n        console.log(\"manager : : : \", courses);\n        this.graphData.labels = [];\n        this.graphData.datasets.data = [];\n        this.graphData.labels = courses.map((course) => course.courseName);\n        this.graphData.datasets[0].data = courses.map((course) => course.count);\n  \n        console.log(\"this.graphData : : : :\", this.graphData);\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  /* 전체 컨테이너의 배경색 설정 */\n  .reservation-container {\n    background-color: #f5f6f6;\n    display: flex;\n    height: 100%;\n    width: 100%;\n    /* 기본값이 세로방향인 flex-direction을 가로방향으로 설정 */\n    flex-direction: row;\n  }\n  \n  .wrapper {\n    flex-grow: 1;\n    /* 나머지 공간을 차지하게 함 */\n    padding: 30px;\n    width: 80%;\n    gap: 20px;\n  }\n  \n  /* 타이틀 박스 */\n  .title-box {\n    background-color: #fff;\n    padding: 30px;\n    margin-bottom: 20px;\n  }\n  \n  /* search-box */\n  .search-box {\n    background-color: #fff;\n    padding: 30px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 190px;\n    width: 100%;\n  }\n  \n  .tabs {\n    background-color: #fff;\n    display: flex;\n    gap: 10px;\n    height: 60px;\n  }\n  \n  .tab-btn {\n    padding: 16px 30px;\n    border: 1px solid #ddd;\n    gap: 10px;\n    background-color: #fff;\n    display: flex;\n    align-items: center;\n  }\n  \n  .tab-btn.active {\n    background-color: #184199;\n    color: #fff;\n    display: flex;\n    align-items: center;\n  }\n  \n  .date-search {\n    display: flex;\n    align-items: center;\n    height: 60px;\n    gap: 10px;\n  }\n  \n  .date-search input {\n    width: 250px;\n    height: 60px;\n    border: 1px solid #ddd;\n    margin: 12px;\n    padding: 0 20px;\n  }\n  \n  .user-search {\n    display: flex;\n    align-items: center;\n  }\n  \n  select {\n    align-items: center;\n    background-color: var(--blackwhitewhite);\n    display: flex;\n    height: 60px;\n    justify-content: space-between;\n    padding: 0px 20px;\n    position: relative;\n    width: 250px;\n    border: 1px solid #ddd;\n    margin: 12px;\n  }\n  \n  .data-box {\n    background-color: #fff;\n    padding: 30px;\n    margin: 20px 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 187px;\n    width: 100%;\n  }\n  \n  .pretendard-bold-24px span {\n    color: #d30f1a;\n  }\n  \n  .point-cards {\n    display: flex;\n    justify-content: space-between;\n    gap: 10px;\n    margin-bottom: 20px;\n  }\n  \n  .point-card {\n    flex: 1;\n    padding: 20px;\n    background-color: #fff;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .point-title {\n    display: block;\n    margin-bottom: 10px;\n  }\n  \n  .point-value {\n    color: #333;\n  }\n  \n  /* 개별 카드 테두리 색상 */\n  .blue-border {\n    border-bottom: 4px solid #184199;\n  }\n  \n  .yellow-border {\n    border-bottom: 4px solid #f4bc1c;\n  }\n  \n  .red-border {\n    border-bottom: 4px solid #d30f1a;\n  }\n  \n  .green-border {\n    border-bottom: 4px solid #4caf50;\n  }\n  \n  .purple-border {\n    border-bottom: 4px solid #9c27b0;\n  }\n  \n  .chart-container {\n    width: 100%;\n    /* height: 400px; */\n    overflow-x: auto;\n    white-space: nowrap;\n    display: flex;\n    /* max-width: 800px; */\n    background-color: #fff;\n    /* margin: 0 auto; */\n    margin-bottom: 20px;\n  }\n  \n  .chart-item {\n    flex: 0 0 1500px; /* 차트의 너비 고정 */\n    margin-right: 20px; /* 차트 간격 */\n    background-color: #fff;\n    padding: 20px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  .chart-container canvas {\n    display: inline-block; /* 차트를 가로로 정렬 */\n  }\n  .chart-title {\n    background-color: #fff;\n    padding: 20px;\n    height: 63px;\n    width: 100%;\n    border-bottom: 0.5px solid #ccc;\n  }\n  \n  .graph-container {\n    max-width: 100%;\n    height: auto;\n    padding: 30px;\n    background-color: #fff;\n    margin-bottom: 20px;\n  }\n  </style>\n  "]}]}