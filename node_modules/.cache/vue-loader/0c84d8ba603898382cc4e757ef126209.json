{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/ReservationWrite.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/ReservationWrite.vue","mtime":1735284973985},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ReservationWrite.vue"],"names":[],"mappings":";AAifile":"ReservationWrite.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"reservation1-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" />\n      <div class=\"reservation1-wrap\">\n        <div class=\"title pretendard-bold-log-cabin-38px\">예약하기</div>\n        <div class=\"reservation1-content\">\n          <div class=\"reservation1-shop-info-box\">\n            <div class=\"reservation1-shop-info-head\">\n              <div class=\"reservation1-shop-name valign-text-middle pretendard-bold-mine-shaft-38px\">\n                {{ getData.name }}\n              </div>\n              <div class=\"reservation1-shop-address valign-text-middle pretendard-regular-mine-shaft-20px\">\n                {{ getData.address }}\n              </div>\n            </div>\n            <div class=\"reservation-shop-map-box\" :style=\"{ 'background-image': 'url(' + getData.mapImage + ')' }\">\n              <div class=\"reservation-shop-map-name-box\">\n                <img class=\"reservation-shop-map-point\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/mdi-location-1.svg\"\n                  alt=\"mdi:location\" />\n                <div class=\"reservation-shop-name pretendard-bold-mine-shaft-14px\">\n                  {{ getData.name }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"reservation-info\">\n            <div class=\"reservation-info-align\">\n              <div class=\"reservation-info-input\">\n                <div class=\"reservation-info-input-title valign-text-middle pretendard-bold-mine-shaft-24px\">\n                  예약자 정보\n                </div>\n                <div class=\"reservation-info-input-content\">\n                  <div class=\"reservation-info-input-row\">\n                    <div class=\"reservation-info-input-row-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        이름\n                      </div>\n                    </div>\n                    <input v-model=\"name\" class=\"resevationi-info-select pretendard-regular-normal-mountain-mist-16px\"\n                      placeholder=\"예약자명을 입력해주세요\" type=\"text\" />\n                  </div>\n                  <div class=\"reservation-info-input-row\">\n                    <div class=\"reservation-info-input-row-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        연락처\n                      </div>\n                    </div>\n                    <input v-model=\"phone\" class=\"resevationi-info-select pretendard-regular-normal-mountain-mist-16px\"\n                      placeholder=\"연락처를 입력해주세요\" type=\"text\" maxlength=\"11\" />\n                  </div>\n                </div>\n              </div>\n              <div class=\"reservation-info-input\">\n                <div class=\"reservation-info-input-title valign-text-middle pretendard-bold-mine-shaft-24px\">\n                  예약 일시\n                </div>\n                <div class=\"reservation-info-input-content\">\n                  <div class=\"reservation-info-input-row\">\n                    <div class=\"reservation-info-input-row-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        날짜\n                      </div>\n                    </div>\n                    <input type=\"date\" v-model=\"date\" class=\"date pretendard-regular-normal-mountain-mist-16px\"\n                      :min=\"today\" />\n                  </div>\n                  <div class=\"reservation-info-input-row\">\n                    <div class=\"reservation-info-input-row-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        룸\n                      </div>\n                    </div>\n                    <!-- {{ getData.storeScale }}\n                    <select v-model=\"roomId\" class=\"resevationi-info-select pretendard-regular-normal-mountain-mist-16px\">\n                      <option value=\"\" disabled>룸을 선택해주세요</option>\n                      <option value=\"1\">룸 1</option>\n                      <option value=\"2\">룸 2</option>\n                      <option value=\"3\">룸 3</option>\n                    </select> -->\n                    <select v-model=\"roomId\"\n                      class=\"resevationi-info-select pretendard-regular-normal-mountain-mist-16px\">\n                      <option value=\"\" disabled>룸을 선택해주세요</option>\n                      <option v-for=\"n in parseInt(getData.storeScale)\" :key=\"n\" :value=\"n\">\n                        룸 {{ n }}\n                      </option>\n                    </select>\n                  </div>\n                  <div class=\"reservation-info-start-time\">\n                    <div class=\"reservation-info-start-time-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        시작시간\n                      </div>\n                    </div>\n                    <div class=\"reservation-info-start-time-list\">\n                      <button v-for=\"time in times\" :key=\"time\" :class=\"[\n                        'non-select-time',\n                        selectedTime === time ? 'selected-time' : '',\n                        reservedTimes.includes(time) || !isFutureTime(time)\n                          ? 'reserved-time'\n                          : '',\n                      ]\" :disabled=\"reservedTimes.includes(time) || !isFutureTime(time)\n                        \" @click=\"selectTime(time)\">\n                        <div :class=\"[\n                          'non-select-time-font',\n                          selectedTime === time\n                            ? 'pretendard-medium-monza-16px'\n                            : '',\n                          reservedTimes.includes(time) || !isFutureTime(time)\n                            ? 'pretendard-regular-normal-celeste-16px'\n                            : 'pretendard-regular-normal-mine-shaft-16px',\n                        ]\">\n                          {{ time }}\n                        </div>\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"reservation-info-start-time\">\n                    <div class=\"reservation-info-start-time-title\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-medium-black-18px\">\n                        종료시간\n                      </div>\n                    </div>\n                    <div class=\"reservation-info-start-time-list\">\n                      <button v-for=\"time in times\" :key=\"time\" :class=\"[\n                        'non-select-time',\n                        selectedEndTime === time ? 'selected-time' : '',\n                        reservedTimes.includes(time) ||\n                          !isValidEndTime(time) ||\n                          !isFutureTime(time)\n                          ? 'reserved-time'\n                          : '',\n                      ]\" :disabled=\"reservedTimes.includes(time) ||\n                        !isValidEndTime(time) ||\n                        !isFutureTime(time)\n                        \" @click=\"selectEndTime(time)\">\n                        <div :class=\"[\n                          'non-select-time-font',\n                          selectedEndTime === time\n                            ? 'pretendard-medium-monza-16px'\n                            : '',\n                          reservedTimes.includes(time) ||\n                            !isValidEndTime(time) ||\n                            !isFutureTime(time)\n                            ? 'pretendard-regular-normal-celeste-16px'\n                            : 'pretendard-regular-normal-mine-shaft-16px',\n                        ]\">\n                          {{ time }}\n                        </div>\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"reservation-info-consent\">\n                    <div class=\"reservation-people-number\">\n                      <div class=\"reservation-people-number-title valign-text-middle pretendard-bold-mine-shaft-24px\">\n                        인원수\n                        <!-- {{branchId}} -->\n                      </div>\n                      <div class=\"reservation-people-number-count\">\n                        <div class=\"reservation-people-number-count-btn\" @click=\"decreaseCount\">\n                          <span class=\"reservation-people-number-count-btn-font pretendard-bold-log-cabin-24px\">-</span>\n                        </div>\n                        <div class=\"valign-text-middle pretendard-regular-normal-mine-shaft-16px\">\n                          {{ count }}명\n                        </div>\n                        <div class=\"reservation-people-number-count-btn\" @click=\"increaseCount\">\n                          <span class=\"reservation-people-number-count-btn-font pretendard-bold-log-cabin-24px\">+</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"reservation-info-guide\">\n                      <div class=\"reservation-input-title valign-text-middle pretendard-bold-mine-shaft-24px\">\n                        안내\n                      </div>\n                      <div class=\"reservation-info-guide-content\">\n                        <div class=\"reservation-info-guide-content-font pretendard-regular-normal-mine-shaft-16px\">\n                          <div>- 예약 취소는 예약 내역에서 신청해주시기</div>\n                          <div class=\"reservation-info-guide-content-font-align\">\n                            바랍니다.\n                          </div>\n                        </div>\n                        <div class=\"reservation-info-guide-content-font pretendard-regular-normal-mine-shaft-16px\">\n                          <div>- 예약신청 후 매장의 승인을 거쳐야만</div>\n                          <div class=\"reservation-info-guide-content-font-align\">\n                            정상적으로 예약이 진행됩니다.\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"reservation-info-consent-title valign-text-middle pretendard-bold-mine-shaft-24px\">\n                      개인정보 제3자 제공 동의(필수)\n                    </div>\n                    <div class=\"check-text\">\n                      <div class=\"checkbox-container\">\n                        <label class=\"custom-checkbox\">\n                          <input type=\"checkbox\" v-model=\"isChecked\" />\n                          <span class=\"checkmark\"></span>\n                          <span class=\"valign-text-middle pretendard-medium-black-16px\">동의합니다</span>\n                        </label>\n                      </div>\n                      <!-- 24.12.18 수정 - check-text-detail 추가 -->\n                      <div class=\"check-text-detail valign-text-middle pretendard-medium-mountain-mist-16px\"\n                        @click=\"goToPage('/termsview?tab=개인정보처리방침')\">\n                        자세히보기\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- Additional sections like 인원수, 안내, 개인정보 동의 -->\n              <button class=\"reservation-write-btn pretendard-medium-white-18px\" @click=\"completeReservation\">\n                예약하기\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <XFooter />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { taskStore } from \"@/store/taskStore\"; // API 호출\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nexport default {\n  name: \"ReservationWrite\",\n  components: {\n    Header,\n    RjZsWi,\n    XFooter,\n  },\n\n  props: [\"rJZsWIProps\"],\n  data() {\n    return {\n      today: new Date().toISOString().split(\"T\")[0], // Today's date for minimum date on calendar\n      date: new Date().toISOString().split(\"T\")[0],\n      map: \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/frame-7330-1.png\",\n      shop: {\n        name: \"레저로 스크린파크골프 계양점\",\n        address: \"계양구 아나지로 524-1\",\n      },\n      roomId: \"\",\n      name: \"\",\n      phone: \"\",\n      times: [\n        \"09:00\",\n        \"09:30\",\n        \"10:00\",\n        \"10:30\",\n        \"11:00\",\n        \"11:30\",\n        \"12:00\",\n        \"12:30\",\n        \"13:00\",\n        \"13:30\",\n        \"14:00\",\n        \"14:30\",\n        \"15:00\",\n        \"15:30\",\n        \"16:00\",\n        \"16:30\",\n        \"17:00\",\n        \"17:30\",\n        \"18:00\",\n      ],\n      selectedTime: null,\n      selectedEndTime: null,\n      reservedTimes: [],\n      isChecked: false,\n      count: 1,\n      currentHour: new Date().getHours(),\n      getData: {},\n      userInfo: {},\n      branchList: [],\n    };\n  },\n  mounted() {\n    const data = this.$route.params;\n    console.log(\"data : : : \", data); // 데이터 확인\n    this.getData = data;\n\n    // 24.12.27 수정 - 추가\n    // 새로고침 후 데이터 복원\n    const savedShop = JSON.parse(localStorage.getItem(\"selectedShop\"));\n    if (savedShop) {\n      console.log(\"복원된 데이터:\", savedShop);\n      this.getData = savedShop;\n\n      // getCompetition 호출\n      if (savedShop.id) {\n        this.getReservationDt(savedShop.id);\n        this.resevatinId = savedShop.id;\n      } else {\n        console.error(\"ID 값이 없습니다.\");\n      }\n    }\n\n    this.userInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n    this.name = this.userInfo.name;\n    this.phone = this.userInfo.phone;\n    this.times = this.generateTimes(\n      this.getData.weekdayHours,\n      this.getData.weekendHours\n    );\n    console.log(\n      \"console.log(times); : : : \" +\n      this.generateTimes(this.getData.weekdayHours, this.getData.weekendHours)\n    );\n    // this.postReservationData();\n    this.getReservationDt(this.date);\n  },\n  created() {\n    const {\n      name,\n      branchId,\n      address,\n      weekdayHours,\n      weekendHours,\n      mapImage,\n      location,\n      storeScale,\n      managerid,\n    } = this.$route.params;\n    console.log(\n      name,\n      branchId,\n      address,\n      weekdayHours,\n      weekendHours,\n      mapImage,\n      location,\n      storeScale,\n      managerid\n    );\n  },\n  watch: {\n    // date가 변경될 때마다 generateTimes 호출\n    date(newDate) {\n      console.log(\"[Watch] 날짜 변경됨:\", newDate);\n      if (this.roomId) {\n        this.getReservationDt(newDate);\n      }\n    },\n    roomId(newRoomId) {\n      console.log(\"[Watch] 선택된 roomId:\", newRoomId);\n      if (newRoomId) {\n        this.getReservationDt(this.date);\n      }\n    },\n  },\n  methods: {\n    async getReservationDt(date) {\n      try {\n        // managerId 가져오기\n        const managerId = this.getData.managerid;\n        console.log(\"[Step 1] managerId 가져오기:\", managerId);\n\n        if (!managerId) {\n          console.error(\"[Error] managerId가 없습니다.\");\n          return;\n        }\n\n        console.log(\n          `[Step 2] API 요청 URL: reservations/date/${date}/manager?managerId=${managerId}`\n        );\n        const response = await taskStore.getSelectTasks(\n          `reservations/date/${date}/manager?managerId=${managerId}`\n        );\n\n        console.log(\"[Step 3] API 응답 데이터:\", response);\n\n        if (Array.isArray(response) && response.length > 0) {\n          this.reservedTimes = [];\n          console.log(\"[Step 4] 예약된 시간 목록 초기화:\", this.reservedTimes);\n\n          response.forEach((room, roomIndex) => {\n            console.log(\n              `[Step 5] Room ${roomIndex + 1} - room_id: ${room.room_id\n              }, 선택된 roomId: ${this.roomId}`\n            );\n\n            // 선택된 roomId와 room.room_id가 일치하는 경우만 처리\n            if (room.room_id === parseInt(this.roomId)) {\n              console.log(\n                `[Step 6] 선택된 roomId와 일치하는 Room 찾음: room_id ${room.room_id}`\n              );\n\n              room.reservations.forEach((reservation, reservationIndex) => {\n                console.log(\n                  `[Step 7] Reservation ${reservationIndex + 1} - ID: ${reservation.id\n                  }, Start: ${reservation.startTime}, End: ${reservation.endTime\n                  }`\n                );\n\n                if (reservation.status === \"cancel\") {\n                  console.log(\"[Step 8] Reservation이 취소됨, 건너뜀\");\n                  return;\n                }\n                const startTime = new Date(reservation.startTime);\n                const endTime = new Date(reservation.endTime);\n\n                console.log(\"[Step 8] 변환된 시작 시간:\", startTime);\n                console.log(\"[Step 9] 변환된 종료 시간:\", endTime);\n\n                let currentTime = new Date(startTime);\n                while (currentTime < endTime) {\n                  const timeString = currentTime.toISOString().slice(11, 16);\n                  console.log(`[Step 10] 생성된 예약 시간: ${timeString}`);\n\n                  if (!this.reservedTimes.includes(timeString)) {\n                    this.reservedTimes.push(timeString);\n                    console.log(\"[Step 11] 예약된 시간 추가:\", timeString);\n                  }\n\n                  currentTime.setMinutes(currentTime.getMinutes() + 30);\n                  console.log(\"[Step 12] 30분 추가된 현재 시간:\", currentTime);\n                }\n              });\n            }\n          });\n\n          console.log(\"[Step 13] 최종 예약된 시간 목록:\", this.reservedTimes);\n        } else {\n          console.warn(\"[Warning] 예약된 시간이 없습니다.\");\n          this.reservedTimes = [];\n        }\n      } catch (error) {\n        console.error(\"[Error] 예약 시간 가져오기 오류:\", error);\n        alert(\"예약된 시간을 가져오는 중 오류가 발생했습니다.\");\n      }\n    },\n\n    generateTimes(weekdayHours, weekendHours) {\n      console.log(\"this.date : : : \", this.date);\n      const times = [];\n\n      // 현재 날짜가 평일인지 주말인지 확인\n      const today = new Date(this.date);\n      // const today = this.date;\n      console.log(\"this.today : : : \", today);\n\n      const isWeekend = today.getDay() === 0 || today.getDay() === 6;\n\n      // 사용 시간 설정 (평일 또는 주말)\n      const hoursRange = isWeekend ? weekendHours : weekdayHours;\n      const [start, end] = hoursRange.split(\" ~ \");\n\n      // 시작 시간과 종료 시간 설정\n      let [startHour, startMinute] = start.split(\":\").map(Number);\n      const [endHour, endMinute] = end.split(\":\").map(Number);\n\n      // 30분 단위로 시간 추가\n      while (\n        startHour < endHour ||\n        (startHour === endHour && startMinute <= endMinute)\n      ) {\n        const hourStr = String(startHour).padStart(2, \"0\");\n        const minuteStr = String(startMinute).padStart(2, \"0\");\n        times.push(`${hourStr}:${minuteStr}`);\n\n        // 30분 더하기\n        startMinute += 30;\n        if (startMinute === 60) {\n          startMinute = 0;\n          startHour += 1;\n        }\n      }\n\n      return times;\n    },\n\n    async postReservationData() {\n      // 24.11.21 수정 - 추가\n      if (!this.isChecked) {\n        alert(\"예약을 진행하시려면 약관에 동의하셔야 합니다.\");\n        return; // 함수 실행을 중지시킴\n      }\n      const startTime = `${this.date}T${this.selectedTime}:00.000Z`;\n      const endTime = `${this.date}T${this.selectedEndTime}:00.000Z`;\n      const params = {\n        roomId: parseInt(this.roomId),\n        managerid: this.getData.managerid,\n        startTime,\n        endTime,\n        member: this.count,\n        reser_user: this.name,\n        reser_phone: this.phone,\n        agree: this.isChecked,\n        // \"roomId\": 3,\n        // \"managerid\" : 87,\n        // \"startTime\": \"2024-12-28T00:00:00.000Z\",\n        // \"endTime\": \"2024-12-28T23:59:59.999Z\",\n        // \"roomtype\": \"string\",\n        // \"reser_user\": \"strin\",\n        // \"reser_phone\": \"string\",\n        // \"member\": \"string\",\n        // \"agree\": true,\n        // \"userId\" :14\n      };\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n      const userId = loginInfo?.id ?? 1;\n      console.log(\"룸 파라미터\" + JSON.stringify(params));\n      try {\n        const response = await taskStore.postTask(\n          `reservations/${userId}`,\n          params\n        );\n        if (!response || response === undefined) {\n          // 24.11.21 수정\n          alert(\"모든 값을 입력하셔야 예약이 가능합니다.\");\n        } else {\n          this.sendMsg();\n          // console.log(this.sendMsg())\n          // if(this.sendMsg() === true){\n          //   alert(\"예약이 되었습니다.\");\n          //   this.$router.push({ path: \"/reservation-progress\" });\n          // }else{\n          //     alert(\"예약에 실패했습니다.\");\n          // }\n\n        }\n      } catch (error) {\n        console.error(\"API 호출 오류:\", error);\n        alert(\"예약에 실패했습니다. 서버 오류를 확인하세요.\");\n      }\n    },\n    // 비즈뿌리오 예약 완료 전송\n    async sendMsg() {\n      const params =\n      {\n        \"phoneNumber\": this.phone,\n        \"userName\": this.name,\n        \"availableTime\": this.selectedTime + \" ~ \" + this.selectedEndTime,\n        \"storeName\": this.getData.name\n      };\n      try {\n        const response = await taskStore.postTask(\n          `v1/sms/sendReservation`, params\n        );\n        if (!response.data || response.data === undefined) {\n          alert(\"예약이 되었습니다.\");\n          console.log(\"API Response:\", response.data);\n          this.$router.push({ path: \"/reservation-progress\" });\n        } else {\n          alert(\"예약에 실패했습니다.\");\n        }\n      } catch (error) {\n        console.error(\"API 호출 오류:\", error);\n        // alert(\"예약에 실패했습니다. 서버 오류를 확인하세요.\");\n      }\n    },\n    completeReservation() {\n      this.postReservationData();\n    },\n    goToPage(route) {\n      this.$router.push(route);\n    },\n    increaseCount() {\n      this.count++;\n    },\n    decreaseCount() {\n      if (this.count > 1) {\n        this.count--;\n      }\n    },\n    selectTime(time) {\n      // Room이 선택되지 않았을 경우 경고 메시지 표시\n      if (!this.roomId) {\n        alert(\"먼저 룸을 선택해주세요.\");\n        return;\n      }\n\n      // 예약된 시간에 포함되지 않고, 룸이 선택된 경우에만 시간 선택 가능\n      if (!this.reservedTimes.includes(time)) {\n        this.selectedTime = time;\n        this.selectedEndTime = null; // 시작 시간을 변경하면 종료 시간 초기화\n      }\n    },\n    selectEndTime(time) {\n      // Room이 선택되지 않았을 경우 경고 메시지 표시\n      if (!this.roomId) {\n        alert(\"먼저 룸을 선택해주세요.\");\n        return;\n      }\n\n      // 종료시간 조건을 만족하면 선택\n      if (this.isValidEndTime(time)) {\n        this.selectedEndTime = time;\n      }\n    },\n    isValidEndTime(time) {\n      // 시작시간이 선택되지 않았으면 모든 종료시간 활성화\n      if (!this.selectedTime) {\n        return true;\n      }\n\n      const startIndex = this.times.indexOf(this.selectedTime);\n      const endIndex = this.times.indexOf(time);\n\n      // 종료 시간이 시작 시간 이후여야 함\n      if (endIndex <= startIndex) {\n        return false;\n      }\n\n      // 예약된 시간 중 마지막 시간 이후부터 종료시간 활성화\n      const lastReservedIndex = this.reservedTimes\n        .map((reserved) => this.times.indexOf(reserved))\n        .reduce((max, index) => Math.max(max, index), -1);\n\n      // 시작시간 이전의 예약된 시간 확인\n      const firstReservedIndex = this.reservedTimes\n        .map((reserved) => this.times.indexOf(reserved))\n        .reduce((min, index) => Math.min(min, index), Infinity);\n\n      // 시작시간이 예약된 시간 이전인 경우: 예약된 첫 번째 시간까지만 종료시간 활성화\n      if (startIndex < firstReservedIndex && endIndex >= firstReservedIndex) {\n        return false;\n      }\n\n      // 시작시간이 예약된 시간 이후인 경우: 예약된 마지막 시간 이후부터 활성화\n      if (startIndex >= lastReservedIndex && endIndex <= lastReservedIndex) {\n        return false;\n      }\n\n      return true;\n    },\n    isRestrictedStartTime() {\n      const restrictedTimes = this.reservedTimes.map((time) => {\n        const index = this.times.indexOf(time);\n        return this.times[index - 1]; // -30분 이전 시간\n      });\n\n      return restrictedTimes.includes(this.selectedTime);\n    },\n\n    isFutureTime(time) {\n      // 오늘 날짜인 경우 현재 시간 이전의 시간은 비활성화\n      if (this.date === this.today) {\n        const [hour, minute] = time.split(\":\").map(Number);\n        const currentMinute = new Date().getMinutes();\n\n        if (\n          hour < this.currentHour ||\n          (hour === this.currentHour && minute < currentMinute)\n        ) {\n          return false;\n        }\n      }\n      return true;\n    },\n  },\n};\n</script>\n\n<style scoped src=\"@/style/shop/reservationwrite.css\" />\n"]}]}