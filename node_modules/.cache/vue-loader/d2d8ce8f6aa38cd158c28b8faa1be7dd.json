{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/MySwingVideoList.vue?vue&type=script&lang=js","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/MySwingVideoList.vue","mtime":1734405819604},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/babel-loader/lib/index.js","mtime":1728543112262},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MySwingVideoList.vue"],"names":[],"mappings":";AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MySwingVideoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <!-- 24.11.14 수정 - 전체적인 틀 수정 -->\n    <div class=\"myswingvideos-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title pretendard-bold-log-cabin-38px\">나의 스윙영상</div>\n      <!-- <div class=\"frame-7667-8\"> -->\n      <!-- <div class=\"frame-7666\"> -->\n      <div class=\"swingvideo\">\n        <!-- 각 Frame7657 데이터를 직접 렌더링, 8개만 표시 -->\n        <div class=\"row\" v-for=\"(rowItems, rowIndex) in rows\" :key=\"rowIndex\">\n          <div class=\"column\" v-for=\"(item, index) in rowItems\" :key=\"index\">\n            <!-- <div class=\"frame-76-11\"> -->\n            <div class=\"group-762-7\" :data=\"item\">\n              <img class=\"group-762-7\" :src=\"item.thumbnail\" alt=\"Thumbnail\" />\n              <img class=\"vector-img\" src=\"./../../img/Polygon 1.png\" alt=\"Vector\"\n                @click=\"openYouTubeModal(item.videoUrl)\" />\n              <img class=\"corner-vector\" src=\"./../../img/Vector.png\" alt=\"Corner Vector\"\n                @click=\"openDeleteModal(item)\" />\n            </div>\n            <div class=\"group-761\">\n              <!-- <div class=\"flex-col-40\"> -->\n              <div class=\"frame-7656\">\n                <!-- 데이터 바인딩 -->\n                <div class=\"text-259 valign-text-middle pretendard-bold-log-cabin-20px\">{{ item.title }}\n                </div>\n                <div class=\"x1960m-1 valign-text-middle pretendard-regular-normal-log-cabin-18px\">{{\n                  item.description }}</div>\n              </div>\n              <!-- 24.11.14 수정 - date-btn-align 추가 -->\n              <div class=\"date-btn-align\">\n                <!-- 24.12.17 수정 - date-align 추가 -->\n                <div class=\"date-align\">\n                  <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\">{{\n                    item.createdAt.split(\"T\")[0] }}</div>\n                  <!-- 24.11.21 수정 - 추가 -->\n                  <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\"> 조회수 : {{\n                    item.viewCount }}</div>\n                </div>\n                <img class=\"frame-7655-2\"\n                  src=\"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/frame-7655-6.svg\"\n                  alt=\"Frame 7655\" @click=\"openSwingVideosDownloadModal(item.videoUrl)\" />\n              </div>\n              <!-- </div> -->\n\n            </div>\n            <!-- </div> -->\n          </div>\n        </div>\n\n        <!-- 페이징 버튼과 페이지 번호 -->\n        <div class=\"pagination-controls\">\n          <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n            :class=\"{ disabled: currentPage === 1 }\" />\n          <div class=\"page-numbers pretendard-medium-log-cabin-16px\">\n            <!-- 24.12.17 수정 - totalPages - visiblePages 변경 -->\n            <div v-for=\"page in visiblePages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n              @click=\"goToPage(page)\">\n              {{ page }}\n            </div>\n          </div>\n          <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n            :class=\"{ disabled: currentPage === totalPages }\" />\n        </div>\n      </div>\n      <x-footer />\n      <SwingVideoDownloadModal v-if=\"isModalVisible\" @close=\"closeModal\" @confirm=\"downloadMovie\" />\n      <SwingVideoDeleteModal v-if=\"isDeleteModalVisible\" @close=\"closeDeleteModal\" @confirm=\"deleteSwingVideo\" />\n      <YouTubeModal v-if=\"isYouTubeModalVisible\" :viedoLink=currentViedo @close=\"closeYouTubeModal\" />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\n// import View from \"./View\";\n// import Frame7657 from \"./Frame7657\";\nimport XFooter from \"./XFooter\";\nimport SwingVideoDownloadModal from \"./SwingVideoDownloadModal\";\nimport SwingVideoDeleteModal from \"./SwingVideoDeleteModal\";\nimport YouTubeModal from \"./YouTubeModal\";\nimport { taskStore } from '@/store/taskStore';\n\nexport default {\n  name: \"MySwingVideoList\",\n  components: {\n    Header,\n    RjZsWi,\n    YouTubeModal,\n    SwingVideoDeleteModal,\n    SwingVideoDownloadModal,\n    XFooter,\n  },\n  props: [\n    \"rJZsWIProps\",\n  ],\n  data() {\n    return {\n      currentViedo: \"\",\n      currentPage: 1,\n      isModalVisible: false,\n      isDeleteModalVisible: false,\n      isYouTubeModalVisible: false,\n      videoToDelete: null, // 삭제할 비디오 정보 저장\n      itemsPerPage: 8, // 한 페이지당 보여줄 데이터 수\n      swingVideos: [],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      screenWidth: window.innerWidth,\n    };\n  },\n  computed: {\n    // 24.12.17 수정 - 추가 : 동적으로 표시할 페이지 번호 계산\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const maxVisiblePages = 5;\n\n      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n      let endPage = startPage + maxVisiblePages - 1;\n\n      if (endPage > totalPages) {\n        endPage = totalPages;\n        startPage = Math.max(1, endPage - maxVisiblePages + 1);\n      }\n\n      return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n    },\n\n    totalPages() {\n      return Math.ceil(this.swingVideos.length / this.itemsPerPage);\n    },\n    paginatedData() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.swingVideos.slice(start, end);\n    },\n    rows() {\n      const result = [];\n      const itemsPerRow = this.screenWidth <= 720 ? 2 : 4; // 화면 크기에 따라 2개 또는 4개씩 나누기\n      for (let i = 0; i < this.paginatedData.length; i += itemsPerRow) {\n        result.push(this.paginatedData.slice(i, i + itemsPerRow));\n      }\n      return result;\n    },\n  },\n  methods: {\n    async generateThumbnail(videoUrl) {\n      const video = document.createElement(\"video\");\n      video.src = videoUrl;\n      video.crossOrigin = \"anonymous\"; // CORS 이슈 해결\n      video.style.display = \"none\";\n      document.body.appendChild(video);\n\n      try {\n        // 비디오 로드 완료 기다리기\n        await new Promise((resolve, reject) => {\n          video.addEventListener(\"loadeddata\", resolve);\n          video.addEventListener(\"error\", reject);\n        });\n\n        // 2초로 이동\n        video.currentTime = 2;\n\n        await new Promise((resolve, reject) => {\n          video.addEventListener(\"seeked\", resolve, { once: true });\n          video.addEventListener(\"error\", reject);\n        });\n\n        // 캔버스에 비디오 프레임 그리기\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext(\"2d\");\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // 썸네일 이미지 URL 생성\n        const thumbnailUrl = canvas.toDataURL(\"image/png\");\n        return thumbnailUrl;\n      } catch (error) {\n        console.error(\"썸네일 생성 중 오류:\", error);\n        return null; // 오류 발생 시 null 반환\n      } finally {\n        // 비디오 엘리먼트 정리\n        document.body.removeChild(video);\n      }\n    },\n    async downloadVideo(videoUrl) {\n      // 다운로드할 비디오 URL\n      // const videoUrl = \"https://lezuro-bk.s3.ap-northeast-2.amazonaws.com/user1.mp4\";\n      try {\n        // Fetch API를 사용해 비디오 파일을 가져오기\n        const response = await fetch(videoUrl);\n\n        // 성공적으로 응답을 받은 경우 Blob 생성\n        if (!response.ok) throw new Error(\"Failed to download video\");\n\n        const blob = await response.blob();\n\n        // Blob을 가리키는 URL 생성\n        const url = window.URL.createObjectURL(blob);\n\n        // 가상의 다운로드 트리거\n        const tempLink = document.createElement(\"a\");\n        tempLink.href = url;\n        tempLink.download = \"user1.mp4\"; // 파일명 설정\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // 메모리 정리\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(tempLink);\n      } catch (error) {\n        console.error(\"Download error:\", error);\n      }\n    },\n\n    async getSwingDt() {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      try {\n        const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n        console.log(\"서버 응답 데이터: \", response);\n\n        if (response) {\n          // 비디오 데이터를 썸네일 추가와 함께 처리\n          this.swingVideos = await Promise.all(\n            response.map(async (video) => {\n              // 썸네일 생성\n              video.thumbnail = await this.generateThumbnail(video.videoUrl);\n              return video;\n            })\n          );\n\n          // 최신순 정렬 (createdAt 기준 내림차순)\n          this.swingVideos.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n          console.log(\"최신순 정렬된 데이터: \", this.swingVideos);\n        } else {\n          console.log(\"응답 데이터가 없습니다.\");\n        }\n      } catch (err) {\n        console.error(\"getSwingDt 에러 발생: \", err);\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n    openSwingVideosDownloadModal(selectViedo) {\n      this.currentViedo = selectViedo\n      this.isModalVisible = true;\n    },\n    downloadMovie() {\n      this.downloadVideo(this.currentViedo)\n      this.isModalVisible = false;\n    },\n    closeModal() {\n      this.isModalVisible = false;\n    },\n    openDeleteModal(item) {\n      this.videoToDelete = item;\n      this.isDeleteModalVisible = true;\n    },\n    closeDeleteModal() {\n      this.isDeleteModalVisible = false;\n      this.videoToDelete = null;\n    },\n    async deleteSwingVideo() {\n      console.log(\"영상 삭제\")\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if (parseInt(this.videoToDelete.user.id) === parseInt(loginInfo.id)) {\n        // 삭제할 비디오를 배열에서 제거\n        // this.swingVideos = this.swingVideos.filter(\n        //   (video) => video.id !== this.videoToDelete.id\n        // );\n        // this.videoToDelete.id\n        try {\n          // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n          const response = await taskStore.deleteTask(`swing-videos/${this.videoToDelete.id}`);\n          console.log(\"response data: \", response);\n          if (!response || response === undefined) {\n            console.log(\"응답 데이터가 없습니다.\");\n          } else {\n            this.closeDeleteModal(); // 모달 닫기\n            this.getSwingDt();\n          }\n        } catch (err) {\n\n          console.log(\"ERROR\", err)\n        }\n\n      } else {\n        alert(\"해당 영상을 삭제 할 수  없습니다.\")\n        this.closeDeleteModal(); // 모달 닫기\n      }\n    },\n    openYouTubeModal(selectViedo) {\n      this.currentViedo = selectViedo\n      this.isYouTubeModalVisible = true;\n    },\n    closeYouTubeModal() {\n      this.isYouTubeModalVisible = false;\n    },\n    handleResize() {\n      this.screenWidth = window.innerWidth; // 화면 크기 갱신\n    },\n  },\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize); // 화면 크기 변경 이벤트 리스너 추가\n    this.getSwingDt()\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize); // 컴포넌트 파괴 시 이벤트 리스너 제거\n  },\n};\n</script>\n<style scroped>\n.group-762-7 {\n  height: 300px;\n}\n</style>\n<style scoped src=\"@/style/record/myswingvideolist.css\"></style>\n"]}]}