{"remainingRequest":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/vue/lezuro_all/src/components/SwingVideoList.vue?vue&type=style&index=1&id=53c20e6a&prod&scoped=true&lang=css","dependencies":[{"path":"/usr/vue/lezuro_all/src/components/SwingVideoList.vue","mtime":1731483321000},{"path":"/usr/vue/lezuro_all/node_modules/css-loader/dist/cjs.js","mtime":1728542747276},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1728542748492},{"path":"/usr/vue/lezuro_all/node_modules/postcss-loader/src/index.js","mtime":1728542747992},{"path":"/usr/vue/lezuro_all/node_modules/cache-loader/dist/cjs.js","mtime":1728542746732},{"path":"/usr/vue/lezuro_all/node_modules/vue-loader/lib/index.js","mtime":1728542748492}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJ1dHRvbiB7CiAgYm9yZGVyOiBub25lOwp9Cgouc2VsZWN0LWJ0biB7CiAgbWFyZ2luLXRvcDogNTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgovKiAyNC4xMS4xMSDsiJjsoJUgLSDstpTqsIAgKi8KLnNlbGVjdC1ib3ggewogIHdpZHRoOiAyMDBweDsKICBoZWlnaHQ6IDUwcHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICBwYWRkaW5nOiAwIDIwcHg7Cn0KCi8qIDI0LjExLjExIOyImOyglSAtIOyghOyytOyggSDsiJjsoJUgKi8KLnNlbGVjdC1idG4gc2VsZWN0IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYm9yZGVyOiBub25lOwogIG91dGxpbmU6IG5vbmU7Cn0KCi50aXRsZV9jZW50ZXIgewogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDBweCAxMy41JTsKICBwYWRkaW5nLXRvcDogMTA0cHg7Cn0KCi5yZWdpc3RlcnN3aW5nIHsKICB3aWR0aDogMTUwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDMwZjFhOwp9CgouY29ybmVyLWVkaXQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDIwcHg7CiAgLyog7Jm87Kq9IOuqqO2JgeydtCDsnITsuZgg7KGw7KCVICovCiAgcmlnaHQ6IDIwcHg7CiAgd2lkdGg6IDE3cHg7CiAgLyog64SI67mE66W8IDE3cHjroZwg7ISk7KCVICovCn0K"},{"version":3,"sources":["SwingVideoList.vue"],"names":[],"mappings":";AAoiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SwingVideoList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-center-horizontal\">\n    <div class=\"myswingvideos-2 screen\">\n      <Header />\n      <rj-zs-wi :frame72911Props=\"rJZsWIProps.frame72911Props\" :frame72912Props=\"rJZsWIProps.frame72912Props\" />\n      <div class=\"title_center\">\n        <div class=\"title pretendard-bold-log-cabin-38px\">스윙영상</div>\n      </div>\n\n      <!-- <div class=\"frame-7667-8\"> -->\n      <div class=\"swingvideo\">\n        <div class=\"select-btn\">\n          <!-- 24.11.11 수정 - select-box 추가 -->\n          <div class=\"select-box\">\n            <select class=\"frame-7669\" v-model=\"selectedOption1\">\n              <option value=\"최근\"  selected>최신 순</option>\n              <!-- <option value=\"최근\">최신순</option> -->\n              <option value=\"베스트\">베스트 순</option>\n              <option value=\"내 영상\">내가 등록한 영상</option>\n            </select>\n          </div>\n          <button class=\"registerswing pretendard-medium-white-18px\" @click=\"goToBoardWrite()\">\n            등록하기\n          </button>\n        </div>\n        <!-- 각 Frame7657 데이터를 직접 렌더링, 8개만 표시 -->\n        <div class=\"row\" v-for=\"(rowItems, rowIndex) in rows\" :key=\"rowIndex\">\n          <div class=\"column\" v-for=\"(item, index) in rowItems\" :key=\"index\">\n            <div class=\"frame-76-11\">\n              <div class=\"group-762-7\" :data=\"item\">\n                <img class=\"group-762-7\" src=\"./../../img/CK_cm08085552 2.png\" alt=\"Polygon 1\" />\n                <img class=\"vector-img\" src=\"./../../img/Polygon 1.png\" alt=\"Vector\" @click=\"openYouTubeModal(item.videoUrl, item)\" />\n                <img class=\"corner-vector\" src=\"./../../img/Vector.png\" alt=\"Corner Vector\"\n                  @click=\"openDeleteModal(item)\" />\n\n                <img class=\"corner-edit\" src=\"../../img/editbutton.png\" alt=\"Corner Edit\" @click=\"toGoEditSwingVideo(item.user.id ,item)\" />\n              </div>\n              <div class=\"group-761\">\n                <div class=\"flex-col-40\">\n                  <div class=\"frame-7656\">\n                    <!-- 데이터 바인딩 -->\n                    <div class=\"text-259 valign-text-middle pretendard-bold-log-cabin-20px\">\n                      {{ item.title }}\n                    </div>\n                    <div class=\"x1960m-1 valign-text-middle pretendard-regular-normal-log-cabin-18px\">\n                      {{ item.description }}\n                    </div>\n                  </div>\n                  <div class=\"date-28 valign-text-middle pretendard-regular-normal-mountain-mist-14px\">\n                    {{ item.createdAt.split(\"T\")[0] }}\n                    <!-- {{ item.createdAt }} -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- </div> -->\n        </div>\n\n\n        <!-- 페이징 버튼과 페이지 번호 -->\n        <div class=\"pagination-controls\">\n          <img class=\"pagination-arrow\" @click=\"prevPage\" :src=\"arrowLeftImage\" :alt=\"'Previous'\"\n            :class=\"{ disabled: currentPage === 1 }\" />\n          <div class=\"page-numbers\">\n            <div v-for=\"page in totalPages\" :key=\"page\" :class=\"['page-number', { active: page === currentPage }]\"\n              @click=\"goToPage(page)\">\n              {{ page }}\n            </div>\n          </div>\n          <img class=\"pagination-arrow flipped\" @click=\"nextPage\" :src=\"arrowRightImage\" :alt=\"'Next'\"\n            :class=\"{ disabled: currentPage === totalPages }\" />\n        </div>\n      </div>\n \n      <x-footer />\n      <SwingVideoDeleteModal v-if=\"isDeleteModalVisible\" @close=\"closeDeleteModal\" @confirm=\"deleteSwingVideo\" />\n      <YouTubeModal v-if=\"isYouTubeModalVisible\" :viedoLink = currentViedo @close=\"closeYouTubeModal\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"./Header\";\nimport RjZsWi from \"./RjZsWi\";\nimport XFooter from \"./XFooter\";\nimport SwingVideoDeleteModal from \"./SwingVideoDeleteModal\";\nimport YouTubeModal from \"./YouTubeModal\";\nimport { taskStore } from '@/store/taskStore';\n\nexport default {\n  name: \"MySwingVideoList\",\n  components: {\n    Header,\n    RjZsWi,\n    YouTubeModal,\n    SwingVideoDeleteModal,\n    XFooter,\n  },\n  props: [\"materialSymbolsClose\", \"rJZsWIProps\"],\n  data() {\n    return {\n      currentViedo : \"\",\n      selectedOption1: \"최근\",\n      currentPage: 1,\n      isModalVisible: false,\n      isDeleteModalVisible: false,\n      isYouTubeModalVisible: false,\n      videoToDelete: null, // 삭제할 비디오 정보 저장\n      itemsPerPage: 8, // 한 페이지당 보여줄 데이터 수\n      swingVideos: [\n        {\n          id: 1,\n          title: \"코스 1\",\n          description: \"티샷: 196.0m\",\n          createdAt: \"2024.09.01\",\n        },\n       \n      ],\n      arrowLeftImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 왼쪽 화살표 이미지 URL\n      arrowRightImage:\n        \"https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/iconamoon-arrow-up-2-thin.svg\", // 오른쪽 화살표 이미지 URL\n      screenWidth: window.innerWidth,\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.swingVideos.length / this.itemsPerPage);\n    },\n    paginatedData() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.swingVideos.slice(start, end); // 현재 페이지에 해당하는 데이터만 보여줌\n    },\n    rows() {\n      const result = [];\n      const itemsPerRow = this.screenWidth <= 720 ? 2 : 4; // 720px 이하일 때 2개씩, 이상일 때 4개씩 표시\n      for (let i = 0; i < this.paginatedData.length; i += itemsPerRow) {\n        result.push(this.paginatedData.slice(i, i + itemsPerRow));\n      }\n      return result;\n    },\n  },\n  watch: {\n    selectedOption1(newValue) {\n      this.handleSelectChange(newValue); // 값 변경 시 호출할 메서드\n    },\n  },\n  methods: {\n    handleSelectChange(value) {\n      this.getSwingDt(value);\n   \n    },\n    async getSwingDt(value){\n      console.log(\"gggggggggg\")\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n   \n      try {\n        // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n        const response = await taskStore.getSelectTasks(`swing-videos`);\n        console.log(\"response data: \", JSON.stringify(response));\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          this.swingVideos = response\n          if (value === \"베스트\") {\n              // this.swingVideos\n              \n              this.swingVideos = this.swingVideos.filter(video => video.viewCount >= 10);\n              console.log(\"viewCount가 10 이상인 항목:\", this.swingVideos);\n              console.log(\"베스트 순 선택됨\");\n              // 베스트 순 관련 로직 처리\n            } else if (value === \"내 영상\") {\n              \n              this.swingVideos = this.swingVideos.filter(video => parseInt(video.user.id) === parseInt(loginInfo.id));\n              console.log(\"user.id가 13인 항목:\", this.swingVideos);\n              console.log(\"내 영상 선택됨\");\n              // 내가 등록한 영상 관련 로직 처리\n            }else{\n              this.swingVideos = response\n            }\n          \n          \n          console.log(\"값 확인 :\");\n        }\n      }catch(err){\n\n        console.log(\"ERROR\" , err)\n      }\n\n    },\n\n    goToBoardWrite() {\n      this.$router.push({ path: \"/swingvideo-write\" });\n    },\n    toGoEditSwingVideo(userId,item) {\n      const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if(parseInt(userId) === parseInt(loginInfo.id)){\n        this.$router.push({\n            // path: \"/swingvideo-edit\",\n            name: \"SwingVideoEdit\", // 네임드 라우트 사용\n            params: { itemData: item }, // 객체 전달\n          });\n      }else{\n        alert(\"해당 영상을 수정할 권한이 없습니다.\")\n      }\n      \n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage += 1;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1;\n      }\n    },\n    goToPage(page) {\n      this.currentPage = page;\n    },\n    closeModal() {\n      this.isModalVisible = false; // 모달을 닫을 때 호출\n    },\n    openDeleteModal(item) {\n      this.videoToDelete = item; // 삭제할 비디오 설정\n      console.log(\"this.videoToDelete: : : : \", this.videoToDelete)\n      this.isDeleteModalVisible = true; // 모달 열기\n    },\n    closeDeleteModal() {\n      this.isDeleteModalVisible = false; // 모달 닫기\n      this.videoToDelete = null; // 선택된 비디오 초기화\n    },\n   async deleteSwingVideo() {\n    console.log(\"영상 삭제\")\n    const loginInfo = JSON.parse(localStorage.getItem(\"loginInfo\"));\n\n      if (parseInt(this.videoToDelete.user.id) === parseInt(loginInfo.id)) {\n        // 삭제할 비디오를 배열에서 제거\n        // this.swingVideos = this.swingVideos.filter(\n        //   (video) => video.id !== this.videoToDelete.id\n        // );\n        // this.videoToDelete.id\n        try {\n        // const response = await taskStore.getSelectTasks(`swing-videos/${loginInfo.id}`);\n        const response = await taskStore.deleteTask(`swing-videos/${this.videoToDelete.id}`);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          this.closeDeleteModal(); // 모달 닫기\n          this.getSwingDt();\n        }\n      }catch(err){\n\n        console.log(\"ERROR\" , err)\n      }\n       \n      }else{\n        alert(\"해당 영상을 삭제 할 수  없습니다.\")\n        this.closeDeleteModal(); // 모달 닫기\n      }\n    },\n    async editSwing(idx, cnt){\n      console.log(\"CNT L L L L l  \" ,cnt)\n      const counts = cnt + 1\n      try {\n        \n        const params = {\n          \"viewCount\": counts,\n        }\n        const response = await taskStore.putTask(`swing-videos/${idx}`, params);\n        console.log(\"response data: \", response);\n        if (!response || response === undefined) {\n          console.log(\"응답 데이터가 없습니다.\");\n        } else {\n          console.log(\"조회수 + 1\"); \n        }\n      }catch(err){\n          console.log(\"ERROR\" , err)\n      }\n    },\n    openYouTubeModal(selectViedo, item) {\n      this.currentViedo = selectViedo\n      console.log(\"selectViedo : : : : \" , JSON.stringify(selectViedo))\n      this.editSwing(item.id,item.viewCount)\n      this.isYouTubeModalVisible = true;\n    },\n    closeYouTubeModal() {\n      this.isYouTubeModalVisible = false;\n    },\n    handleResize() {\n      this.screenWidth = window.innerWidth; // 화면 크기 갱신\n    },\n  },\n\n  mounted() {\n    window.addEventListener(\"resize\", this.handleResize); // 화면 크기 변경 이벤트 리스너 추가\n    this.handleResize();\n        this.getSwingDt();\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.handleResize); // 컴포넌트 파괴 시 이벤트 리스너 제거\n  },\n  async generateThumbnail(url) {\n      const video = document.createElement(\"video\");\n      video.src = url;\n      video.crossOrigin = \"anonymous\"; // S3에 CORS 설정이 필요할 수 있음\n      video.style.display = \"none\";\n      document.body.appendChild(video);\n\n      await new Promise((resolve) => {\n        video.addEventListener(\"loadeddata\", resolve);\n        video.load();\n      });\n\n      // 추출할 시점 설정 (예: 1초)\n      video.currentTime = 1;\n\n      await new Promise((resolve) => {\n        video.addEventListener(\"seeked\", resolve, { once: true });\n      });\n\n      // 캔버스에 비디오 프레임 그리기\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // 썸네일 이미지 URL 생성\n      this.thumbnail = canvas.toDataURL(\"image/png\");\n\n      // 비디오 엘리먼트 정리\n      document.body.removeChild(video);\n    },\n};\n</script>\n\n<style scoped>\n.myswingvideos-2 {\n  align-items: flex-start;\n  background-color: var(--blackwhitewhite);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  position: relative;\n  width: 100% !important;\n}\n\n.frame-7668 {\n  align-items: center;\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  margin-right: 18px;\n  position: relative;\n  width: 73.5%;\n}\n\n.frame-7667-8 {\n  align-items: center;\n  align-self: stretch;\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  gap: 50px;\n  position: relative;\n  width: 100%;\n}\n\n/* 24.11.11 수정 - width 추가 */\n.swingvideo {\n  width: 100%;\n  padding: 0px 13.5%;\n  margin-bottom: 205px;\n}\n\n/* 두 줄 4x2 정렬 */\n.row {\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n  gap: 40px;\n}\n\n.column {\n  flex: 1;\n  width: 320px;\n  /* 4개의 항목이 한 줄에 들어가도록 설정 */\n  padding: 10px;\n}\n\n.pagination-controls {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.pagination-arrow {\n  width: 30px;\n  cursor: pointer;\n}\n\n.pagination-arrow.disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.page-numbers {\n  display: flex;\n  gap: 20px;\n}\n\n.page-number {\n  width: 40px;\n  height: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background-color: lightgray;\n  cursor: pointer;\n}\n\n.page-number.active {\n  background-color: #d30f1a;\n  color: white;\n}\n\n.page-number:hover {\n  background-color: #ddd;\n}\n\n/* 영상 css */\n\n.corner-vector {\n  position: absolute;\n  top: 20px;\n  /* 왼쪽 모퉁이 위치 조정 */\n  left: 20px;\n  width: 17px;\n  /* 너비를 17px로 설정 */\n}\n\n.frame-76-11 {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  position: relative;\n  width: 320px;\n}\n\n.pagination-arrow.flipped {\n  transform: rotate(180deg);\n}\n\n.group-762-7 {\n  /* background-image: url(https://cdn.animaapp.com/projects/66da512d0c22d478015e0e07/releases/66da51d8cf50153cef9952df/img/mask-group-107@2x.png); */\n  background-size: 100% 100%;\n  border-radius: 20px;\n  height: 320px;\n  position: relative;\n  width: 320px;\n}\n\n.polygon-1-3 {\n  height: 59px;\n  left: 140px;\n  position: absolute;\n  top: 130px;\n  width: 53px;\n}\n\n.vector-img {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 77px;\n  /* 원하는 이미지 크기로 조절 */\n  height: 77px;\n}\n\n.group-761 {\n  height: 107px;\n  position: relative;\n  width: 302px;\n}\n\n.flex-col-40 {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  left: 0;\n  min-height: 107px;\n  position: absolute;\n  top: 0;\n  width: 104px;\n}\n\n.frame-7656 {\n  align-items: flex-start;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  position: relative;\n  width: 104px;\n}\n\n.text-259 {\n  align-self: stretch;\n  letter-spacing: 0;\n  line-height: 28px;\n  margin-top: -1px;\n  position: relative;\n}\n\n.x1960m-1 {\n  align-self: stretch;\n  letter-spacing: 0;\n  line-height: 25.2px;\n  position: relative;\n}\n\n.date-28 {\n  height: 20px;\n  letter-spacing: 0;\n  line-height: 19.6px;\n  white-space: nowrap;\n}\n\n.frame-7655-2 {\n  height: 40px;\n  left: 260px;\n  position: absolute;\n  top: 62px;\n  width: 40px;\n}\n</style>\n<style scoped>\nbutton {\n  border: none;\n}\n\n.select-btn {\n  margin-top: 50px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n/* 24.11.11 수정 - 추가 */\n.select-box {\n  width: 200px;\n  height: 50px;\n  border: 1px solid #ddd;\n  padding: 0 20px;\n}\n\n/* 24.11.11 수정 - 전체적 수정 */\n.select-btn select {\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n}\n\n.title_center {\n  width: 100%;\n  padding: 0px 13.5%;\n  padding-top: 104px;\n}\n\n.registerswing {\n  width: 150px;\n  height: 50px;\n  text-align: center;\n  background-color: #d30f1a;\n}\n\n.corner-edit {\n  position: absolute;\n  top: 20px;\n  /* 왼쪽 모퉁이 위치 조정 */\n  right: 20px;\n  width: 17px;\n  /* 너비를 17px로 설정 */\n}\n</style>\n<style scoped src=\"@/style/community/swingvideolist.css\"></style>"]}]}